{"version":3,"sources":["config.js","modules/auth/authContext.js","common/Footer/Footer.js","assets/Logo.png","modules/incomingCount/IncomingCount.js","modules/incomingCount/incomingCountContext.js","utils/ProcessUtils.js","utils/Utils.js","common/Header/Header.js","common/Loading/Loading.js","common/Home/Home.js","common/Confirm/Confirm.js","common/Modal/Modal.js","common/Title/Title.js","common/Progressbar/Progressbar.js","common/Button/Button.js","common/NotFoundPage/NotFoundPage.js","modules/auth/components/Login.js","modules/auth/components/AuthPage.js","modules/auth/components/AutoLoginPage.js","modules/forms/form/formsContext.js","modules/forms/form/formContext.js","modules/forms/submission/submissionsContext.js","modules/forms/partials/SubmissionName.js","modules/forms/partials/RouteTrackingModalWrapper.js","modules/forms/partials/RouteTrackingModal.js","modules/forms/partials/TrackSubmissionForm.js","modules/forms/partials/RoutedSubmissionAlert.js","modules/forms/partials/CurrentSubmissionRedirect.js","modules/forms/partials/ModalConfirmation.js","modules/forms/partials/ArchivedSubmissionAlert.js","modules/forms/partials/ProcessHeader.js","modules/forms/submission/submissionContext.js","modules/alerts/alertsContext.js","modules/alerts/Alerts.js","modules/forms/submission/components/SubmissionView.js","modules/users/user/userContext.js","modules/forms/submission/components/SubmissionRoute.js","modules/forms/submission/submissionConversionContext.js","modules/forms/convertButtons/components/SubmissionConvertButtons.js","modules/forms/submission/components/ProcessSubmissionView.js","modules/forms/submission/components/SubmissionPage.js","modules/forms/submission/components/SubmissionsList.js","modules/forms/submission/components/SubmissionDelete.js","modules/forms/partials/RouteTrackingModalWithRequest.js","modules/forms/submission/components/NamedSubmissionsList.js","modules/forms/submission/components/SubmissionsPage.js","modules/forms/form/components/FormDelete.js","modules/forms/form/components/FormView.js","modules/forms/form/components/FormFolder.js","modules/myForms/myForm/myFormContext.js","modules/myForms/myForm/components/MyForm.js","modules/myForms/myTags/components/MyTagPage.js","modules/myForms/myTags/components/MyTagsPage.js","modules/filter/filterContext.js","modules/myForms/myForm/myFormsContext.js","modules/myForms/myForm/components/MyFormsList.js","modules/filter/components/Filter.js","modules/myForms/myForm/components/MyFormsListPage.js","modules/myForms/myForm/components/MyFormsPage.js","modules/forms/routedSubmission/components/RoutedSubmissionsList.js","modules/forms/FormsUtils.js","modules/forms/routedSubmission/components/RoutedSubmissionPage.js","modules/forms/routedSubmission/components/RoutedSubmissionsPage.js","modules/forms/routedSubmission/components/AllRoutedSubmissionsPage.js","modules/forms/incomingSubmission/components/IncomingSubmissionsList.js","modules/forms/incomingSubmission/components/IncomingSubmissionPage.js","modules/forms/incomingSubmission/components/IncomingSubmissionsPage.js","modules/forms/incomingSubmission/components/AllSpecialList.js","modules/forms/incomingSubmission/components/AllSpecial.js","modules/forms/incomingSubmission/components/AllIncomingSubmissionsPage.js","modules/forms/archivedSubmission/components/ArchivedSubmissionsList.js","modules/forms/archivedSubmission/components/ArchivedSubmissionsPage.js","modules/forms/trackedSubmission/components/TrackedSubmissionsList.js","modules/forms/trackedSubmission/components/TrackedSubmissionPage.js","modules/forms/trackedSubmission/components/TrackedSubmissionsPage.js","modules/forms/formDataRoutes/components/DataRoutesList.js","modules/forms/formDataRoutes/components/DataRoutePage.js","modules/forms/formDataRoutes/components/DataRoutesPage.js","modules/forms/deletedSubmission/components/DeletedSubmissionsList.js","modules/forms/deletedSubmission/components/DeletedSubmissionsPage.js","modules/forms/process/components/ProcessBuilder.js","modules/forms/process/components/ProcessEdit.js","modules/forms/process/components/ProcessEditPage.js","modules/forms/process/components/ProcessCreatePage.js","utils/CsvUtils.js","modules/forms/csvSubmissions/components/CsvSubmissionsPage.js","modules/forms/form/components/FormPage.js","modules/forms/form/components/FormsList.js","modules/forms/form/components/FormsListPage.js","modules/forms/form/components/FormsPage.js","modules/groups/members/components/MemberPage.js","modules/groups/members/components/MembersPage.js","modules/groups/group/components/GroupPage.js","modules/groups/group/components/GroupsPage.js","modules/users/userGroups/components/UserGroupPage.js","modules/users/userGroups/components/UserGroupsPage.js","modules/users/user/components/UserPage.js","modules/users/user/components/UsersPage.js","modules/employees/employee/components/EmployeePage.js","modules/employees/employee/components/EmployeesPage.js","modules/folders/folder/folderContext.js","modules/folders/FoldersUtils.js","modules/folders/subfolders/components/SubfoldersPage.js","modules/folders/folder/components/FolderDelete.js","modules/folders/folder/components/FolderEdit.js","modules/folders/folder/components/FolderPage.js","modules/folders/folder/components/FoldersPage.js","modules/employees/employee/components/EmployeeCreatePage.js","App.js","reportWebVitals.js","formioComponents/NextButton/NextButton.form.js","formioComponents/NextButton/NextButton.js","formioComponents/RouteButton/RouteButton.form.js","formioComponents/RouteButton/RouteButton.js","formioComponents/PrevButton/PrevButton.form.js","formioComponents/PrevButton/PrevButton.js","formioComponents/ToPageButton/ToPageButton.form.js","formioComponents/ToPageButton/ToPageButton.js","formioComponents/ToFormButton/ToFormButton.form.js","formioComponents/ToFormButton/ToFormButton.js","formioComponents/Process.js","formioComponents/NestedForm/NestedForm.js","formioComponents/Component/Component.form.js","formioComponents/Component/Component.js","formioComponents/AutoName/AutoName.js","formioComponents/index.js","index.js"],"names":["query","window","location","search","substr","split","forEach","item","decodeURIComponent","PROJECT_URL","projectUrl","API_URL","apiUrl","AppConfig","version","AuthConfig","form","FormsConfig","formsFilter","formsTable","adminFormsTable","submissionsTable","namedSubmissionsTable","user","userProfile","folderForm","userGroup","usersGroup","folder","homePage","myForms","myTags","myFormsTable","myFormsFilter","submissionName","route","routeTrack","routedSubmissionsTable","submissionAccessData","processSettings","processSupplement","allSpecial","csvFilters","getSrc","formName","Formio","setProjectUrl","setBaseUrl","AuthContext","React","createContext","initialState","init","isActive","authenticated","submissionAccess","formAccess","projectAccess","roles","is","error","userInfo","isUserInfoFetched","beforeLogoutActionExecution","beforeLogoutAction","parentAuthReducer","auth","authReducer","state","action","type","execution","addUserInfo","failUserInfo","setBeforeLogoutAction","setBeforeLogoutActionExecution","AuthProvider","props","useReducer","dispatch","value","useMemo","Provider","useAuth","context","useContext","Error","logout","done","then","Footer","className","style","padding","href","IncomingCount","useIncomingCount","incomingCountState","dispatchIncomingCountAction","count","incomingCount","updateIncomingCount","useCallback","userId","getIncomingUnopenedSubmissonsCount","useEffect","incomingCountUpdateInterval","_","get","setInterval","clearInterval","IncomingCountContext","IncomingCountReducer","IncomingCountProvider","requestUnopenedIncomingRecordsSuccess","unopenedRecords","reduce","res","track","lastTrack","chain","last","find","recipient","requestUnopenedIncomingRecordsFail","formio","getProjectUrl","loadSubmissions","params","select","ignoreCache","result","catch","formsStageId","getStageSettings","stageId","stages","stage","id","getCurrentStageSettings","submission","currentStageId","setProcessSubmissionFirstStage","set","setProcessSubmissionStage","getProcessFormsPath","processFormsPath","Utils","eachComponent","filter","components","comp","path","push","setProcessFormsSubmissionOwner","firstClean","each","unsetSubmissionRouted","cleanSubmissionAccess","setSubmissionOwner","setFormSubmissionInProcessProperty","isProcess","unsetSoleOwnership","accessData","owners","blockedOwners","length","currentRouteArchiveUsersPath","autoNameFieldKey","hasAdminRights","role","hasOwnProperty","administrator","setSubmissionName","name","getRequestParams","limit","sort","page","requestParams","isNumber","skip","getForms","loadForms","getForm","formPath","loadForm","deleteSubmission","submissionId","formId","getSubmission","url","loadSubmission","saveSubmission","data","_id","submissionPath","getSubmissions","access","users","permissionType","cancelLastAndRestorePrevRoute","tracks","canceledTracks","canceledTrack","routeId","dateCanceled","Date","toISOString","recipientsInfo","senderInfo","stageName","pop","routeTrackData","currentTrack","routeInitiators","map","currentOwners","currentTrackDate","currentReadOnlyUsers","cc","bcc","flattenDeep","uniqBy","some","currentOwner","initiator","allUsersIds","uniq","currentArchiveUsers","archiveUser","currentRoute","readOnlyUsers","date","from","archiveUsers","defaultRouteTrackData","tracking","routedSubmission","routedForm","getUpdatedRouteTrackData","routeData","prevStageId","trackData","isEmpty","routingInfo","routeDate","created","readOnlyUsersFrom","readOnlyUsersCc","readOnlyUsersBcc","isFormProcess","fullAccessUsers","prevOwner","readOnlyUser","fullAccessUser","routeStage","stageSettings","currentStage","title","getRouteStage","owner","dateSent","comments","message","stagePanels","panel","FormioUtils","showInTrack","compValue","getRouteMessage","dateOpened","opened","to","setUpdatedAccess","setSubmissionRouted","updateRoutedSubmissionAccess","submissionStatuses","setSubmissionStatus","status","unsetSubmissionStatus","unset","addSelectedRowsClass","selectedSubmissions","idProperty","gridComp","getComponent","rowId","dataTableReady","promise","gridBody","rows","rowsData","row","classList","remove","index","add","setRouteTrackArchiveUser","removeRouteTrackArchiveUser","isRoutedArchived","getCutLocationPath","locationPath","cutNumber","slice","join","Header","history","useHistory","authState","isAdmin","navbarLinks","sortBy","icon","exact","adminOnly","authenticetedOnly","priority","afterTitle","notAdmin","link","alt","src","Logo","height","onClick","Loading","width","textClass","loaderMessage","marginLeft","fontSize","marginTop","Home","Greeting","email","Confirm","onYes","onNo","yesText","noText","wrapperStyles","Modal","children","contentStyles","contentStyle","position","top","left","transform","boxShadow","zIndex","backgroundColor","Title","text","defaultProps","Progressbar","progress","progressBarStyle","Button","btnClass","NotFoundPage","Login","useState","isReady","setIsReady","asAdmin","loginFormUrl","onSubmitDone","setUser","formReady","onFormReady","AuthPage","LoginWrapper","marginBottom","AutoLoginPage","refs","button","click","FormsContext","forms","pagination","numPages","total","formsUpdateProgress","formsUpdating","requestParamsSet","formsReducer","serverCount","Math","ceil","FormsProvider","useForms","requestForms","receiveForms","failForms","failFormsUpdate","indexForms","AppUtils","transformForms","fastCloneDeep","formTitle","folderPath","folderId","getFoldersForms","selectData","accessControlCompKey","getAccessControlComponent","key","addFormAccessControlCompAndSave","formAccessControlComp","skipCoef","requestCount","getProjectForms","round","formsPromises","pathToComponents","display","isArray","updatedComponents","saveForm","NativePromise","all","setFilterQueryParam","setFilterQuery","FormContext","lastUpdated","clonedForm","gridForm","gridError","options","formFolder","formFolderError","hasFormAccess","accessCheckError","checkingAccess","deletingForm","deleteFormStatus","autofilledFields","loadingFormFolder","accessControlComp","loadingAccessControlComp","accessControlCompError","autoName","deleteFormProgress","deletingFolder","finishing","formReducer","authorized","cloneDeep","isInvalid","FormProvider","useForm","requestGridForm","receiveGridForm","failGridForm","err","requestForm","receiveForm","failForm","sendForm","receiveFolder","failFolder","receiveAccess","failAccessCheck","startFormDeleting","setDeleteFormStatus","setFormOptions","setOptions","deleteFormFolder","formFolderSubmissionId","loadAccessControlComponent","e","SubmissionsContext","submissions","SubmissionsReducer","SubmissionsProvider","useSubmissions","requestSubmissions","receiveSubmissions","failSubmissions","indexSubmissions","saveSubmissions","subm","SubmissionName","readOnly","onNameChange","onNameFormReady","setFormReady","onChange","template","iconset","noValidate","RouteTrackingModalWrapper","onModalCloseClick","RouteTrackingModal","TrackSubmissionForm","showRoutesIds","routedSubmissionName","reportDate","toLocaleDateString","hide","submit","RoutedSubmissionAlert","showRoute","setShowRoute","checked","htmlFor","CurrentSubmissionRedirect","ModalConfirmation","margin","ArchivedSubmissionAlert","useParams","ProcessHeader","description","SubmissionContext","deletingSubmission","savingSubmission","routeSettings","routing","processInitPage","submissionReducer","initPage","submissionTrack","SubmissionProvider","useSubmission","requestSubmission","receiveSubmission","failSubmission","requestSubmissionAndRouteTrack","receiveSubmissionAndRouteTrack","failSubmissionAndRouteTrack","receiveSubmissionTrack","failSubmissionTrack","addRouteSettings","routeSubmission","trackInfo","routed","routedSubmissionTrack","submissionRouteTrack","getSubmissionAndRouteTrack","submissionUrl","AlertsContext","AlertsProvider","alerts","setAlerts","useAlerts","removeAlert","newAlerts","splice","removeAfter","timeout","setTimeout","addAlert","alert","DefaultAlert","content","Alerts","Alert","right","flexDirection","SubmissionView","hideComponents","pathStart","propsOptions","noRedirectOnSubmit","disableSubmissionName","requiredName","formState","isFormActive","formError","dispatchSubmissionsAction","submissionState","dispatchSubmissionAction","submissionError","isSubmissionActive","userProfileId","nameForm","useRef","submitBtn","errors","current","hasError","root","triggerChange","onSubmit","hooks","customValidation","next","submNameForm","pristine","checkValidity","focus","UserContext","addingUserToEveryoneStatus","addingUserToEveryoneError","isCsvUserGroupsLoading","isCsvUserGroupsFetched","allowCsv","everyoneGroup","addUserToEveryoneProgress","userReducer","userGroups","UserProvider","useUser","failAddingUser","setAddingUserStatus","receiveCsvUserGroups","failGettingUserGroups","createEveryoneGroup","groupName","getEveryoneGroup","saveUserInGroup","group","SubmissionRoute","dispatchAuthAction","routedFormLink","origin","routeOptions","loading","setLoading","hasEveryoneGroup","formUserGroups","getFormUserGroupsIds","routeRecipients","settingsGroups","groupRecipients","every","setting","allGroups","settingsGroup","standAlone","nextStage","getProcessSubmissionStage","on","SubmissionConversionContext","pdfUrl","isPdfUrlLoading","submissionConversionReducer","SubmissionConversionProvider","useSubmissionConversion","pdfUrlRequest","pdfUrlSuccess","pdfUrlFail","getPdfUrl","getDownloadUrl","SubmissionConvertButtons","forbidPdfDownload","submissionConversionState","submissionConversionAction","isPdfAllowed","rel","target","ProcessSubmissionView","processRef","processSupplementFormRef","dispatchProcessAction","isLoading","handlePageChange","formComponent","component","processUrl","event","preventDefault","emit","SubmissionPage","checkRouted","submissionStatus","isArchived","isDeleted","isDisabled","View","Edit","backBtnPath","condition","Navbar","isBoolean","DeletedSubmissionAlert","SubmissionsList","FormError","getViewPath","createSubmissionPath","addBtnTitle","submissionsRequestParams","hideAddBtn","beforeViewSubmission","defaultRequestParams","setRequestParams","paramsSet","setParamsSet","submissionsState","dispatchFormEvent","updatedRequestParams","isEqual","getFormattedForm","gridComponents","tableView","calculateValue","getGridForm","gridSubmissions","Grid","noSubmit","rowIndex","titleText","AddBtn","MainContent","SubmissionDelete","paramName","deleteSubject","eventId","subject","RouteTrackingModalWithRequest","trackingSubmissionId","routeTrackArr","getRouteTrack","NamedSubmissionsList","active","selectedIds","delete","archive","statusAction","setStatusAction","metadata","deleteAction","newStatus","updatedSubmissions","deletePermanently","moveToCurrent","includes","SubmissionsPage","render","FormDelete","dispatchFormsAction","dispatchFormAction","confirmationMessage","deleteForm","prevState","FormView","propsFormOptions","addSubmissionAccess","userState","formOptions","formRef","autofillForm","field","autofilledField","setAutoValue","prefilledField","evaluate","autofilledValue","setValue","AutoFillBtn","FormFolder","isFormFolderSubmission","onSaveFormFolder","formToSave","formData","editForm","folderSubmission","myFormForm","myForm","myFormReducer","MyFormProvider","failDeleteMyForm","receiveMyForm","receiveMyFormForm","failMyFormForm","failMyForm","failSaveForm","isInMyForms","saveTags","tags","tagPromises","tag","saveTag","transformMyFormData","myFormData","newTags","addNewTags","savedTags","resolve","MyForm","showMyForm","setShow","useMyForm","myFormState","dispatchMyFormAction","isMyFormActive","myFormError","getMyForm","myFormFormId","getMyFormForm","onAddToMyFormsClick","onDeleteFromMyFormsClick","myFormId","deleteMyForm","ManageMyFormBtn","noMyForm","Loader","MyFormEdit","disableForm","validateExistance","myFormExist","submissionData","validateAndTransformMyFormData","setMyForm","pathnam","MyTagPage","dispatchSubmissionEvent","getPath","showCondition","MyTagsPage","FilterContext","filterNames","filterReducer","FilterProvider","useFilter","addFilter","transformFormsResult","MyFormsList","formsState","getMyForms","FormsGrid","Filter","filterName","filterOptions","filterFormName","filterState","savedFilter","localStorage","getItem","JSON","parse","getFilter","setItem","stringify","setFilter","MyFormsListPage","formsError","filterError","getFilterQuery","ManageBtns","MyFormsPage","RoutedSubmissionsList","selectedRowIdProperty","archived","hideTitle","defaultStatusAction","restore","trackingSubmission","setTrackingSubmission","getGridSubmissionsData","routedSubmissions","routeTrackId","routedSubmissionId","recipientInfo","openedDate","formattedDate","minBy","moveToArchived","rowData","getConfirmationMessage","readOnlyRoles","routedSubmissionRoles","routeInitiator","noAccess","getReadOnlyUserRoleData","userRole","prevOwnerTrack","findLast","trackIndex","ccs","bccs","prevOwners","getUserRole","isReadOnly","RoutedSubmissionPage","setUserRole","RoutedSubmissionsPage","AllRoutedSubmissionsPage","IncomingSubmissionsList","inCopy","trackingData","addStyleToUnopenedRecords","viewIncoming","IncomingSubmissionPage","pathname","userSate","openedSet","setOpened","isOwner","groupRoutingData","routeOwners","groupRouting","groupSize","isUserCurrentOwner","onlyRead","saveUpdatedSubmission","dispatchBeforeLogoutAction","executeSoleOwnershipRemoval","saveSubmissionTrack","takeSoleOwnership","setSoleOwnership","isGroupRouting","getMessage","IncomingSubmissionsPage","AllSpecialList","setTrackingSubmissionId","AllSpecial","specialParams","setSpecialParams","changeInfo","changed","AllIncomingSubmissionsPage","ArchivedSubmissionsList","ArchivedSubmissionsPage","TrackedSubmissionsList","dateRerouted","viewTracked","TrackedSubmissionPage","TrackedSubmissionsPage","DataRoutesList","adminView","DataRoutePage","cancelRoute","setCancelRoute","removeOwner","setRemoveOwner","currentOwnerData","getSoleOwner","exists","executeTemporalOwnershipRemoval","lastRouteId","oneRoute","cancelRoutePromises","updatedTracks","currentLastTrack","cancelLastRoute","DataRoutesPage","DeletedSubmissionsList","onStatusChanged","submissionIds","deleteSubmissions","moveToDeleted","DeletedSubmissionsPage","ProcessBuilder","element","arguments","HTMLElement","skipInit","groups","componentOrder","Object","keys","ignore","a","b","weight","attachPanel","removeComponent","addEventListener","pageIndex","pages","findIndex","componentIndex","_form","removePage","originalRenderComponentsHook","renderComponents","html","self","originalAttachComponentsHook","attachComponents","container","originalComponent","webformComponents","webform","indexOf","rebuild","formComponentIndex","this","Array","stagesSettings","properties","stagesCount","getDefaultStages","stagesIds","groupedPages","groupBy","reorderedPages","flatten","formComponents","stageComponents","getPageConfig","addAccessControlFields","assign","currentPage","Webform","setForm","noEmit","schema","renderTemplate","sidebar","scrollEnabled","sideBarScroll","groupOrder","groupId","groupKey","subgroups","formsStage","isFormsStage","loadRefs","addPage","gotoPage","gotoStage","gotoFormsStage","setPage","dataset","keepAsReference","redraw","pagePrevIndex","findLastIndex","existingPage","newPage","BuilderUtils","uniquify","emitSaveComponentEvent","startIndex","getDefaultStage","panelSettings","buttonSettings","previous","cancel","label","Builders","getBuilder","Templates","builderWizard","ctx","t","iconClass","addBuilders","wizard","reducer","formCopy","_cloneDeep","prop","_camelCase","toLowerCase","_set","ProcessEdit","showSettings","toggleSettings","newForm","modified","handleChange","saveText","builder","builderOptions","custom","default","basic","placeholder","newSchema","process","ProcessEditPage","ProcessCreatePage","suppportedDataTypes","getField","getValue","getDateTimeValue","operator","getExportQuery","exportQuery","queries","emptyQueires","getQueryValue","dateTimeQueries","dateTimeExpressions","emptyObject","nullObject","CsvSubmissionsPage","inconset","processFormIds","onCsvDownload","makeRequest","headers","blob","Blob","FileSaver","saveAs","processForm","FormNavigation","userDispatch","isUserGroupsLoading","isUserGroupsFetched","checkAccess","getFormAndCheck","getFormFolder","folderUserGroups","allowCsvUserGroups","csvForms","checkCsvAccess","adminRoutes","userRoutes","FormsList","args","FormsListPage","filterSet","noFolder","searchQuery","searchProperty","propertySearchQuery","trim","updateAccessControlFields","addFormAccessControlFields","AdminBtns","FormsPage","FormPage","MemberPage","hideLabel","MembersPage","transformFormComponents","groupComp","disableGroup","getEditPath","getDeletePath","GroupPage","groupSubmission","eventNavbarLinks","GroupsPage","UserGroupPage","UserGroupsPage","userEmail","disableMember","UserPage","UsersPage","EmployeePage","isUserProfile","employee","employeeEmail","firstName","lastName","EmployeesPage","FolderContext","parentFolder","parentFolderError","loadingParentFolder","deletingSubfolders","deleteSubfoldersStatus","deleteSubfoldersError","deletePermissionError","updatingDependencies","updateSubfoldersStatus","updateFolderFormsStatus","updateDependenciesError","deletePermissionErrors","deleteSubfoldersProgress","updateSubfoldersProgress","updateFolderFormsProgress","folderReducer","updateDependenciesStatus","FolderProvider","useFolder","receiveParentFolder","failParentFolder","failDeleteSubfolders","setDeleteSubfoldersStatus","failDeletePermission","failUpdateDependencies","setUpdateSubfoldersStatus","setUpdateFolderFormsStatus","loadAndCheckSubfolders","subfolders","checkEmptyPromises","subf","isEmptyFolder","checks","loadSubfolderPromises","setStatus","getSubfoldersForDeletion","deleteSubfolder","subfolderId","loadSubfolders","updateSubfolders","changes","initialName","newName","deletedGroups","updatedFolder","areDeletedGroups","getSubfolders","subfoldersArr","updateFolderFormsPromises","updatedSubfolders","subfolder","subfolderUpdatedGroups","updateFolderForms","subfolderPath","updatedPath","pathPart","part","groupedSubfolders","keyBy","subfolderSavePromises","parentFolderId","changedParentFolder","saveSubfolder","newGroups","changedFolderForms","saveFormFolder","getSubfolderGroupsQuery","groupIds","SubfoldersPage","disableParent","getParentFolderData","subfolderGroupsQuery","FolderDelete","dispatchFolderEvent","folderState","getDeleleMessage","folderData","folderName","subfolderIds","permissionError","deletePromises","deleteSubfolders","FolderEdit","initialFolder","subfodersUpdateProgress","subfodersUpdateMessage","folderFormsUpdateProgress","folderFormsUpdateMessage","updatingPromises","areGroupsChanged","updateFolderDependantResources","updatedGroups","initialGroups","initialGroup","updatedGroup","getFolderChanges","FolderPage","isSubfolder","isFolderLoading","getParentFolder","FoldersPage","EmployeeInfoPage","dispatchUserAction","isSubmitted","setIsSubmitted","Boolean","addUserToEveryoneGroup","App","isAuthActive","useLocation","initAuth","getUserInfo","gettingUser","EmployeeCreatePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","BasicEditForm","AllComponents","FormioButton","NextButton","disabled","attachMode","dataValue","showValidations","nextPage","extend","size","leftIcon","rightIcon","block","persistent","disableOnInvalid","theme","dataGridLabel","getGroupSelectComponent","ext","widget","dataSrc","valueProperty","validate","required","lazyLoad","disableLimit","searchField","authenticate","input","getGroupComponents","groupLabel","customConditional","tooltip","disableSortingAndFiltering","defaultValue","addAnother","addAnotherPosition","initEmpty","clearOnHide","allowCalculateOverride","editor","autoExpand","RouteButton","routeInitiated","conditional","conditionalGroup","recipientType","groupOptions","option","dataType","optionsLabelPosition","inline","values","shortcut","attrs","attr","refreshOnChange","PrevButton","prevPage","ToPageButton","targetPage","selectThreshold","ToFormButton","formPageIndex","targetFormPage","backTarget","formBackPath","formNextButton","nextTarget","formNextPath","customDefaultValue","show","when","eq","Process","navDetails","formPageNavigation","parentInit","defaultFormPageNavigation","processForms","flags","isAllowPrevious","attachTooltips","wizardKey","currentPanel","isBreadcrumbClickable","enabledIndex","emitWizardPageSelected","processFormPages","processFormInfoPath","num","formPageComponents","getProcessFormPages","headerType","columns","executeFormPageNavigation","offset","pull","currentWidth","instance","initiatePageKey","formNavigationComponents","unshift","initiateProcessPage","Displays","getDisplay","initialWizardHeaderTemplate","wizardHeader","formPanel","_userInput","NestedForm","superOptions","el","subFormSubmission","subForm","_submission","autoNameComponent","base","baseEditForm","Components","Component","prototype","getProcessData","getProcessRoot","FormioTextField","textfield","AutoName","hidden","nextButton","routeButton","prevButton","toPageButton","toFormButton","displays","use","premium","ReactDOM","StrictMode","basename","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.10169919.chunk.js","sourcesContent":["import { Formio } from '@formio/react';\n\nconst getQuery = (query) => {\n  window.location.search.substr(1).split('&').forEach(function(item) {\n    query[item.split('=')[0]] = item.split('=')[1] && decodeURIComponent(item.split('=')[1]);\n  });\n\n  return query;\n}\n\nconst stages = {\n  dev: 'https://formbuilding-izshuiourtmigzc.form.io',\n  test: 'https://testoauth-izshuiourtmigzc.form.io',\n  prod: 'https://izshuiourtmigzc.form.io',\n};\n\nconst api = {\n  portal: 'https://api.form.io',\n}\n\nconst query = getQuery({});\nconst PROJECT_URL = query.projectUrl || stages.test;\nconst API_URL = query.apiUrl || api.portal;\n\nexport const AppConfig = {\n  projectUrl: PROJECT_URL,\n  apiUrl: API_URL,\n  version: '0.0.0'\n};\n\nexport const AuthConfig = {\n  anonState: '/auth',\n  authState: '/',\n  login: {\n    form: 'user/login'\n  },\n  adminLogin: {\n    form: 'admin/login'\n  },\n  register: {\n    form: 'user/register'\n  }\n};\n\nexport const FormsConfig = {\n  formsFilter: 'formsfilter',\n  formsTable: 'formstable',\n  adminFormsTable: 'adminformstable',\n  submissionsTable: 'submissionTable',\n  namedSubmissionsTable: 'namedSubmissionTable',\n  user: 'user',\n  userProfile: 'userprofile',\n  folderForm: 'folderform',\n  userGroup: 'usergroup',\n  usersGroup: 'usersGroup',\n  folder: 'folder',\n  homePage: 'homepage',\n  myForms: 'myforms',\n  myTags: 'mytags',\n  myFormsTable: 'myformstable',\n  myFormsFilter: 'myformsfilter',\n  submissionName: 'submissionName',\n  route: 'route',\n  routeTrack: 'submissionRouteTrack',\n  routedSubmissionsTable: 'routedsubmissionstable',\n  submissionAccessData: 'submissionaccessdata',\n  processSettings: 'processsettings',\n  processSupplement: 'processsupplement',\n  allSpecial: 'allspecial',\n  csvFilters: 'csvfilters',\n  getSrc: (formName) => PROJECT_URL + '/' + FormsConfig[`${formName}`],\n};\n\nFormio.setProjectUrl(AppConfig.projectUrl);\nFormio.setBaseUrl(AppConfig.apiUrl);\n","import React from 'react';\nimport { auth } from '@formio/react';\nimport { FormsConfig } from '../../config';\nimport { Formio } from '@formio/react';\n\nconst AuthContext = React.createContext();\n\nconst initialState = {\n  init: false,\n  isActive: false,\n  user: null,\n  authenticated: false,\n  submissionAccess: {},\n  formAccess: {},\n  projectAccess: {},\n  roles: {},\n  is: {},\n  error: '',\n  userInfo: {},\n  isUserInfoFetched: false,\n  beforeLogoutActionExecution: false,\n  beforeLogoutAction: false,\n};\n\nconst parentAuthReducer = auth();\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'USER_INFO_REQUEST':\n      return {\n        ...state,\n        isActive: true,\n        isUserInfoFetched: false,\n      };\n    case 'USER_INFO_SUCCESS':\n      const userInfo = action.userInfo;\n\n      return {\n        ...state,\n        userInfo,\n        error: '',\n        isActive: false,\n        isUserInfoFetched: true,\n      };\n    case 'USER_INFO_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n        isActive: false\n      };\n    case 'SET_BEFORE_LOGOUT_ACTION':\n      return {\n        ...state,\n        beforeLogoutAction: action.action,\n      };\n    case 'SET_BEFORE_LOGOUT_ACTION_EXECUTION':\n      return {\n        ...state,\n        beforeLogoutActionExecution: action.execution,\n      };\n    default:\n      return parentAuthReducer(state, action);\n  }\n};\n\nexport const requestUserInfo = () => ({\n  type: 'USER_INFO_REQUEST',\n});\n\nexport const addUserInfo = (userInfo) => ({\n  type: 'USER_INFO_SUCCESS',\n  userInfo,\n});\n\nconst failUserInfo =  (error) => ({\n  type: 'USER_INFO_FAILURE',\n  error,\n});\n\nconst logoutUser = () => ({\n  type: 'USER_LOGOUT',\n});\n\nexport const setBeforeLogoutAction = (action) => ({\n  type: 'SET_BEFORE_LOGOUT_ACTION',\n  action\n});\n\nexport const setBeforeLogoutActionExecution = (execution) => ({\n  type: 'SET_BEFORE_LOGOUT_ACTION_EXECUTION',\n  execution\n});\n\n\nexport function AuthProvider(props) {\n  const [state, dispatch] = React.useReducer(authReducer, initialState);\n  const value = React.useMemo(() => [state, dispatch], [state]);\n\n  return <AuthContext.Provider value={value} {...props} />;\n}\n\nexport function useAuth() {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within a AuthProvider');\n  }\n\n  const [state, dispatch] = context;\n\n  return {\n    state,\n    dispatch\n  }\n}\n\nexport const getUserInfo = (dispatch, userId, done=()=>{}) => {\n    const url = `${Formio.getProjectUrl()}/${FormsConfig.userProfile}/submission`;\n    const formio = new Formio(url);\n\n    dispatch(requestUserInfo());\n\n    formio.loadSubmissions({params: {'data.id': userId}})\n      .then((result) => {\n        dispatch(addUserInfo(result[0] || {}));\n        done(null, result);\n      })\n      .catch((error) => {\n        dispatch(failUserInfo(error));\n        done(error);\n      });\n};\n\nexport const logout = (dispatch, done = ()=>{}) => {\n  dispatch(setBeforeLogoutActionExecution(false));\n  Formio.logout().then(()=> {\n    dispatch(logoutUser());\n    done();\n  });\n};\n","import React from 'react';\nimport { AppConfig } from '../../config';\n\nconst Footer = () => {\n  const styles = {\n    padding: '15px',\n  };\n\n  return (\n    <footer className=\"footer bg-light shadow-lg\">\n      <div className=\"container text-center mt-auto\" style={styles}>\n        Built with ♥ by&nbsp;\n        <a href=\"https://form.io\">Form.io</a>\n        <span className=\"text-muted mx-2\" >|</span>\n        <span className=\"text-muted\" >App version: {AppConfig.version}</span>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/Logo.da5311b4.png\";","import React, {useCallback, useEffect} from 'react';\nimport { useAuth } from '../auth';\nimport { getIncomingUnopenedSubmissonsCount, useIncomingCount } from '.';\nimport _ from 'lodash';\n\n\nexport const IncomingCount = (props) => {\n  const {state: userState} = useAuth();\n  const {user} = userState;\n\n  const {state: incomingCountState, dispatch: dispatchIncomingCountAction} = useIncomingCount();\n  const {incomingCount: count} = incomingCountState;\n\n  const updateIncomingCount = useCallback((userId)=> {\n    getIncomingUnopenedSubmissonsCount(dispatchIncomingCountAction, userId);\n   }, [dispatchIncomingCountAction]);\n\n  useEffect(()=> {\n    let incomingCountUpdateInterval = null;\n    const userId = _.get(user, '_id', '');\n\n    if (userId) {\n      updateIncomingCount(userId)\n      incomingCountUpdateInterval = setInterval(() => {\n        updateIncomingCount(userId)\n      }, 360000);\n    } \n    else if(!user && incomingCountUpdateInterval) {\n      clearInterval(incomingCountUpdateInterval);\n    }\n\n    return () => { \n      if (incomingCountUpdateInterval) {\n        clearInterval(incomingCountUpdateInterval);\n      }\n    };\n  }, [user, updateIncomingCount])\n\n  return <span className=\"badge badge-pill badge-warning rounded\">{count}</span>\n};\n","import React from 'react';\nimport { Formio } from '@formio/react';\nimport { FormsConfig } from '../../config';\nimport _ from 'lodash';\n\nconst IncomingCountContext = React.createContext();\n\nconst initialState = {\n  incomingCount: 0\n};\n\nconst IncomingCountReducer = (state, action) => {\n  switch (action.type) {\n    case 'COUNT_SUCCESS':\n      return {\n        ...state,\n        error: '',\n        incomingCount: action.incomingCount,\n      };\n    case 'COUNT_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n        incomingCount: state.incomingCount,\n      };\n    default:\n      return state;\n  }\n};\n\nexport function IncomingCountProvider(props) {\n  const [state, dispatch] = React.useReducer(IncomingCountReducer, initialState);\n  const value = React.useMemo(() => [state, dispatch], [state, dispatch]);\n\n  return <IncomingCountContext.Provider value={value} {...props} />;\n}\n\nexport function useIncomingCount() {\n  const context = React.useContext(IncomingCountContext);\n  if (!context) {\n    throw new Error('useIncomingCount must be used within a IncomingCountProvider');\n  }\n\n  const [state, dispatch] = context;\n\n  return {\n    state,\n    dispatch\n  }\n}\n\nexport const requestUnopenedIncomingRecordsSuccess = (unopenedRecords, userId) => {\n  return ({\n    type: 'COUNT_SUCCESS',\n    incomingCount: _.reduce(unopenedRecords, (res, track)=> {\n      const lastTrack = _.chain(track).get('data.tracking', []).last().value();\n\n      if (lastTrack) {\n        const openedByUser = _.chain(lastTrack).get('recipientsInfo', []).find(recipient =>  _.get(recipient, 'to[0]._id', '') === userId).get('opened').value();\n        return openedByUser ? res : ++res\n      }\n      return res;\n    }, 0) \n  });\n}\n\nexport const requestUnopenedIncomingRecordsFail = (error) => {\n  return ({\n    type: 'COUNT_SUCCESS',\n    error\n  });\n}\n\n\nexport const getIncomingUnopenedSubmissonsCount = (dispatch, userId, done = () => {}) => {\n  const formio = new Formio(`${Formio.getProjectUrl()}/${FormsConfig.routeTrack}/submission`);\n\n  return formio.loadSubmissions({params: { \n    'data.currentRoute.owners._id': userId, \n    'data.tracking.recipientsInfo.to._id': userId,\n    'data.tracking.recipientsInfo.opened': false,\n    select: 'data.tracking'\n  }}, {ignoreCache: true})\n    .then((result) => {\n      dispatch(requestUnopenedIncomingRecordsSuccess(result, userId))\n      done(null);\n    })\n    .catch((error) => {\n      dispatch(requestUnopenedIncomingRecordsFail(error))\n      done(error);\n    });\n};","import _ from 'lodash';\nimport {Utils} from 'formiojs';\nimport { cleanSubmissionAccess, setSubmissionOwner, unsetSubmissionRouted } from './Utils';\n\nexport const formsStageId = '-1';\n\nexport const getStageSettings = (stageId, form) => {\n  const stages = _.get(form, 'properties.stagesSettings');\n\n  return _.find(stages, stage => +stage.id === +stageId) || {};\n};\n\nexport const getCurrentStageSettings = (submission, form) => {\n  const currentStageId = _.get(submission, 'metadata.stageId', '');\n\n  return getStageSettings(currentStageId, form);\n};\n\nexport const setProcessSubmissionFirstStage = (submission, form) => {\n  _.set(submission, 'metadata.stageId', _.get(form, 'properties.stagesSettings[0].id', ''));\n}\n\nexport const setProcessSubmissionStage = (submission, stageId) => {\n  _.set(submission, 'metadata.stageId', stageId)\n}\n\nexport const getProcessSubmissionStage = (submission) => {\n  return _.get(submission, 'metadata.stageId', '');\n}\n\nexport const getProcessFormsPath = (form) => {\n  const processFormsPath = [];\n  Utils.eachComponent(_.filter(form.components, comp => comp.stageId === formsStageId), (comp, path) => {\n    if (comp.type === 'form') {\n      processFormsPath.push(path)\n    }\n  });\n  return processFormsPath;\n}\n\nexport const setProcessFormsSubmissionOwner = (form, submission, user, firstClean) => {\n  _.each(getProcessFormsPath(form), (path) => {\n    if (firstClean) {\n      unsetSubmissionRouted(submission, path);\n      cleanSubmissionAccess(submission, path);\n    }\n\n    setSubmissionOwner(submission, user, path);\n    setFormSubmissionInProcessProperty(submission, path);\n  });\n}\n\nexport const setFormSubmissionInProcessProperty = (submission, path) => {\n  _.set(submission, `${path ? `data.${path}.` : ''}metadata.inProcess`, true);\n}\n\nexport const isProcess = (form) => {\n  return _.get(form, 'properties.process', false);\n}\n\nexport const setSoleOwnership = (submission, userId) => {\n  const accessData = _.get(submission, 'data.submissionAccessData', {})\n  const owners = _.filter(accessData.owners, owner => owner._id === userId);\n  const blockedOwners = _.filter(accessData.owners, owner => owner._id !== userId);\n  //do not change allOwnerIds!!!!\n  _.set(accessData, 'owners', owners);\n  _.set(accessData, 'blockedOwners', blockedOwners);\n}\n\nexport const getSoleOwner = (submission) => {\n  const accessData = _.get(submission, 'data.submissionAccessData', {})\n  const blockedOwners = _.get(accessData, 'blockedOwners', []);\n\n  return !!blockedOwners.length ?  _.get(accessData, 'owners[0]', {}) : null;\n}\n\nexport const unsetSoleOwnership = (submission) => {\n  const accessData = _.get(submission, 'data.submissionAccessData', {})\n  const owners = _.get(accessData, 'owners', []);\n  const blockedOwners = _.get(accessData, 'blockedOwners', []);\n\n  if (!!blockedOwners.length) {\n    _.set(accessData, 'owners', [...owners, ...blockedOwners]);\n    _.set(accessData, 'blockedOwners', []);\n  }\n}","import { Formio } from '@formio/react';\nimport _ from 'lodash';\nimport { FormsConfig } from '../config';\nimport { getCurrentStageSettings, getProcessFormsPath, getStageSettings, isProcess } from './ProcessUtils';\nimport {Utils as FormioUtils} from 'formiojs';\nimport FileSaver from 'file-saver';\n\nconst currentRouteArchiveUsersPath = 'data.currentRoute.archiveUsers';\nexport const accessControlCompKey = 'submissionAccessData';\nexport const autoNameFieldKey = 'autoNameField';\n\nexport const hasAdminRights = (role) => {\n  return role.hasOwnProperty('administrator') && role.administrator;\n}\n\nexport const setSubmissionName = (submission, name) => {\n  _.set(submission, 'metadata.submissionName', name);\n}\n\nexport const getSubmissionName = (submission) => {\n  return _.get(submission, 'metadata.submissionName', '');\n}\n\nexport const getRequestParams = (limit, query, sort, params, select, page) => {\n  const requestParams = {...query, ...params};\n\n  // Ten is the default so if set to 10, don't send.\n  if (limit !== 10) {\n    requestParams.limit = limit;\n  }\n  else {\n    delete requestParams.limit;\n  }\n\n  if (_.isNumber(page) && page !== 1) {\n    requestParams.skip = (page - 1) * limit;\n  }\n  else {\n    delete requestParams.skip;\n  }\n\n  if (select) {\n    requestParams.select = select;\n  }\n  else {\n    delete requestParams.select;\n  }\n\n  if (sort) {\n    requestParams.sort = sort;\n  }\n  else {\n    delete requestParams.sort;\n  }\n\n  return requestParams;\n};\n\nexport const getForms = ({ limit, query, select, sort }, page = 1, params = {}) => {\n  const formio = new Formio(`${Formio.getProjectUrl()}/form`);\n  const requestParams = getRequestParams(limit, {...query, type:'form'}, sort, params, select, page);\n\n  return formio.loadForms({ params: requestParams })\n}\n\nexport const getForm = (id, name) => {\n  const formPath = `/${id ? `form/${id}` : `${name}`}`;\n  const path = `${Formio.getProjectUrl()}${formPath}`;\n  const formio = new Formio(path);\n\n  return formio.loadForm();\n}\n\nexport const saveForm = (form) => {\n  const id = form._id;\n  const path = `${Formio.getProjectUrl()}/form${id ? `/${id}` : ''}`;\n  const formio = new Formio(path);\n\n  return formio.saveForm(form)\n}\n\nexport const deleteSubmission = (submissionId, formId, formName) => {\n  const formPath = `/${formId ? `form/${formId}` : `${formName}`}`;\n  const formio = new Formio(`${Formio.getProjectUrl()}${formPath}/submission/${submissionId}`);\n\n  return formio.deleteSubmission();\n};\n\nexport const getSubmission = (submissionId, formId, formName) => {\n  const formPath = `/${formId ? `form/${formId}` : `${formName}`}`;\n  const url = `${Formio.getProjectUrl()}${formPath}/submission${submissionId ? `/${submissionId}` : ''}`;\n  const formio = new Formio(url);\n\n  return formio.loadSubmission()\n};\n\nexport const saveSubmission = (data, formId, formName) => {\n  const id = data._id;\n  const projectUrl = Formio.getProjectUrl();\n  const formPath = `/${formId ? `form/${formId}` : `${formName}`}`;\n  const submissionPath = `/submission${id ? `/${id}` : ''}`;\n  const url = `${projectUrl}${formPath}${submissionPath}`;\n\n  const formio = new Formio(url);\n\n  return formio.saveSubmission(data)\n};\n\nexport const getSubmissions = ({ limit, query, select, sort },  params = {}, formId, formName) => {\n  const formPath = `/${formId ? `form/${formId}` : `${formName}`}`;\n  const formio = new Formio(`${Formio.getProjectUrl()}${formPath}/submission`);\n  const requestParams = getRequestParams(limit, query, sort, params, select);\n\n  return formio.loadSubmissions({params: requestParams})\n};\n\nexport const exportSubmissions = (query, formId, formName) => {\n  const formPath = `/${formId ? `form/${formId}` : `${formName}`}`;\n  const url = `${Formio.getProjectUrl()}${formPath}/export?format=csv&view=formatted`;\n  const formio = new Formio(url);\n\n  return formio.makeRequest('export', url, 'GET', null, {\n    ignoreCache: true,\n    headers: {\n      'x-query': JSON.stringify(query),\n    }\n  }).then((data) => {\n    var blob = new Blob([data], {type: \"text/plain;charset=utf-8\"});\n    FileSaver.saveAs(blob, `${formName}.csv`);\n  });\n}\n\nexport const setSubmissionOwner = (submission, user, path) => {\n  _.set(submission, `${path ? `data.${path}.` : ''}data.submissionAccessData.allOwnerIds`, [user._id]);\n  _.set(submission, `${path ? `data.${path}.` : ''}data.submissionAccessData.owners`, [user]);\n}\n\nexport const cleanSubmissionAccess = (submission, path) => {\n  const access = _.get(submission, `${path ? `data.${path}.` : ''}data.submissionAccessData`, {});\n  _.each(access, (users, permissionType) => {\n    access[`${permissionType}`] = [];\n  });\n}\n\nexport const cancelLastAndRestorePrevRoute = (routeTrack) => {\n  const tracks = _.get(routeTrack, 'data.tracking', []);\n  const lastTrack = _.last(tracks);\n  const canceledTracks = _.get(routeTrack, 'data.canceledTracks', []);\n\n  const canceledTrack = {\n    routeId: lastTrack.routeId,\n    dateCanceled: new Date().toISOString(),\n    recipientsInfo: lastTrack.recipientsInfo,\n    senderInfo: lastTrack.senderInfo,\n    stageId: lastTrack.stageId || '',\n    stageName: lastTrack.stageName || ''\n  };\n\n  tracks.pop();\n  canceledTracks.push(canceledTrack);\n\n  const routeTrackData = routeTrack.data;\n  const currentTrack = _.last(tracks);\n\n  routeTrackData.routeInitiators = _.chain(tracks)\n    .map(track => _.get(track, 'senderInfo[0].from[0]'))\n    .value();\n\n  const currentOwners = _.chain(currentTrack).get('recipientsInfo', []).map(recipient => _.get(recipient, 'to[0]')).value();\n  const currentTrackDate = _.get(currentTrack, 'senderInfo[0].dateSent', '');\n  const currentReadOnlyUsers = _.chain(tracks)\n    .map(track => {\n      const senderInfo = _.get(track, 'senderInfo[0]', []);\n      const cc = _.get(senderInfo, 'cc', []);\n\n      const bcc =  _.get(senderInfo, 'bcc', []);\n      const owners = _.chain(track).get('recipientsInfo', []).map(recipient => _.get(recipient, 'to[0]')).value();\n      return [ ...cc, ...bcc, ...owners];\n    })\n    .flattenDeep()\n    .uniqBy('_id')\n    .filter(user => !_.some(currentOwners, currentOwner => currentOwner._id === user._id) && !_.some(routeTrackData.routeInitiators, initiator => initiator._id === user._id))\n    .value();\n\n  const allUsersIds= _.chain([...currentReadOnlyUsers, ...currentOwners]).map(user => user._id).uniq().value();\n  const currentArchiveUsers = _.chain(routeTrack).get(currentRouteArchiveUsersPath, []).filter(archiveUser => _.some(allUsersIds, id => id === archiveUser._id)).value();\n\n  routeTrackData.currentRoute = {\n    allUsersIds,\n    owners: currentOwners,\n    readOnlyUsers: currentReadOnlyUsers,\n    date: currentTrackDate,\n    from: _.chain(tracks).last().get('senderInfo[0].from', []).value(),\n    archiveUsers: currentArchiveUsers\n  };\n}\n\nexport const defaultRouteTrackData = {\n  routeInitiators: [],\n  currentRoute: {\n    date: '',\n    readOnlyUsers: [],\n    owners: [],\n    archiveUsers: []\n  },\n  tracking: [],\n  routedSubmission:{},\n  routedForm: {}\n};\n\n\nexport const getUpdatedRouteTrackData = (routedSubmission, routeData, routeTrack, form, prevStageId) => {\n  const trackData = _.isEmpty(routeTrack) ? defaultRouteTrackData : routeTrack.data;\n  const {data: routingInfo, created: routeDate} = routeData;\n  const {owners, readOnlyUsersFrom, readOnlyUsersCc, readOnlyUsersBcc} = routingInfo;\n\n  const isFormProcess = isProcess(form);\n\n  const fullAccessUsers = _.uniqBy([...owners], '_id');\n  const readOnlyUsers = _.chain([\n      ...readOnlyUsersCc,\n      ...readOnlyUsersBcc,\n      ..._.get(trackData, 'currentRoute.readOnlyUsers', []),\n      ..._.chain(trackData).get('currentRoute.owners', []).filter(prevOwner => prevOwner._id !== readOnlyUsersFrom._id).value()\n    ])\n    .uniqBy('_id')\n    .filter(readOnlyUser => !_.some(fullAccessUsers, fullAccessUser => fullAccessUser._id === readOnlyUser._id))\n    .value();\n\n  const routeInitiators = _.chain([...trackData.routeInitiators, readOnlyUsersFrom ])\n    .uniqBy('_id')\n    .value();\n\n  const getRouteStage = () => {\n    const stageSettings = {\n      stageName: '',\n      stageId: ''\n    };\n\n    if (isFormProcess) {\n      const currentStage = getCurrentStageSettings(routedSubmission, form);\n      stageSettings.stageName = currentStage.title;\n      stageSettings.stageId = currentStage.id;\n    }\n    return stageSettings;\n  };\n\n  const routeStage = getRouteStage();\n\n  const getRouteMessage = () => {\n    if(!isFormProcess) return '';\n\n    let message = `route from ${getStageSettings(prevStageId, form).title} to ${routeStage.stageName};`;\n    const stagePanels = _.filter(form.components, panel => panel.stageId === prevStageId)\n\n    FormioUtils.eachComponent(stagePanels, (comp, path) => {\n      if (comp.showInTrack) {\n        const compValue = _.get(routedSubmission.data, path, '');\n        message = `\n          ${message}\n          ${compValue};\n        `;\n      }\n    }, true);\n\n    return message;\n  };\n\n  return {\n    routeInitiators,\n    currentRoute: {\n      date: routeDate,\n      from: [readOnlyUsersFrom || {}],\n      readOnlyUsers,\n      owners: fullAccessUsers,\n      allUsersIds: _.chain([...readOnlyUsers, ...fullAccessUsers]).map((user)=> user._id).filter(id=> !!id).uniq().value(),\n      archiveUsers: _.chain(trackData).get('currentRoute.archiveUsers', []).filter(archiveUser => !_.some(owners, owner => owner._id === archiveUser._id)).value()\n    },\n    tracking: [\n      ...trackData.tracking,\n      {\n      routeId: routeData._id || '',\n      ...routeStage,\n      senderInfo: [{\n        from: [readOnlyUsersFrom || {}],\n        dateSent: routeDate,\n        comments: getRouteMessage(),\n        cc: [...readOnlyUsersCc],\n        bcc: [...readOnlyUsersBcc]\n      }],\n      recipientsInfo: _.map(owners, (owner) => ( {\n          dateOpened: '',\n          opened: false,\n          to: [owner],\n        }))\n    }],\n     routedSubmission: { id: routedSubmission._id, name: _.get(routedSubmission, 'metadata.submissionName', '')},\n     routedForm: {\n      id: form._id,\n      title: form.title,\n      name: form.name\n    }\n  }\n}\n\nexport const setUpdatedAccess = (routedSubmission, routeTrackData, path) => {\n  const submissionAccess = _.get(routedSubmission, `${path ? `data.${path}.` : ''}data.submissionAccessData`, {});\n\n  _.set(submissionAccess, 'allOwnerIds', _.chain(routeTrackData).get('currentRoute.owners', []).map(owner => owner._id).value());\n  _.set(submissionAccess, 'owners', _.get(routeTrackData, 'currentRoute.owners', []));\n  _.set(submissionAccess, 'readOnlyUsers', _.get(routeTrackData, 'currentRoute.readOnlyUsers', []));\n  _.set(submissionAccess, 'routeInitiators', _.get(routeTrackData, 'routeInitiators', []));\n}\n\nexport const setSubmissionRouted = (routedSubmission, path) => {\n  _.set(routedSubmission, `${path ? `data.${path}.`: ''}metadata.routed`, true);\n}\n\nexport const isSubmissionRouted = (submission) => {\n  return  _.get(submission, 'metadata.routed');\n}\n\nexport const unsetSubmissionRouted = (routedSubmission, path) => {\n  _.set(routedSubmission, `${path ? `data.${path}.`: ''}metadata.routed`, true);\n}\n\nexport const updateRoutedSubmissionAccess = (routedSubmission, routeTrackData, form) => {\n  setUpdatedAccess(routedSubmission, routeTrackData);\n  setSubmissionRouted(routedSubmission);\n\n  const isFormProcess = isProcess(form);\n  if (isFormProcess) {\n    const processFormsPath = getProcessFormsPath(form);\n    _.each(processFormsPath, path => {\n      setUpdatedAccess(routedSubmission, routeTrackData, path);\n      setSubmissionRouted(routedSubmission, path);\n    });\n  }\n}\n\nexport const submissionStatuses ={\n  archived: 'archived',\n  deleted: 'deleted'\n};\n\nexport const setSubmissionStatus = (submission, status) => {\n  _.set(submission, 'metadata.status', status);\n}\n\nexport const unsetSubmissionStatus = (submission) => {\n  _.unset(submission, 'metadata.status');\n}\n\nexport const addSelectedRowsClass = (form, selectedSubmissions, idProperty) => {\n  const gridComp = form.getComponent('submissions');\n  const rowId = idProperty || '_id';\n  if (gridComp) {\n    gridComp.dataTableReady.promise.then(() => {\n      const gridBody = _.get(gridComp, 'formioGrid.tbody', {});\n      const rows = _.get(gridBody, 'refs.row', []);\n      const rowsData = gridBody.data;\n      _.each(rows, row => {\n        row.classList.remove('bg-selected');\n      });\n\n      _.each(selectedSubmissions, (id) => {\n        _.find(rowsData, (data, index) => {\n          if (data[rowId] === id) {\n            rows[index].classList.add('bg-selected');\n            return data;\n          }\n        });\n      });\n    });\n  }\n}\n\nexport const getProgress = (limit, skipCoef, total) => {\n  const progress = _.round(((limit*skipCoef)/total)*100);\n  return progress > 100 ? 100 : progress;\n}\n\nexport const setRouteTrackArchiveUser = (routeTrack, user) => {\n  const archiveUsers = _.get(routeTrack, currentRouteArchiveUsersPath, []);\n  archiveUsers.push(user);\n}\n\nexport const removeRouteTrackArchiveUser = (routeTrack, user) => {\n  const archiveUsers = _.get(routeTrack, currentRouteArchiveUsersPath, []);\n  _.set(routeTrack, currentRouteArchiveUsersPath, _.filter(archiveUsers, archiveUser => archiveUser._id !== user._id));\n}\n\nexport const isRoutedArchived = (routeTrack, user) => {\n  const archiveUsers = _.get(routeTrack, currentRouteArchiveUsersPath, []);\n  return _.some(archiveUsers, archiveUser => archiveUser._id === user._id);\n}\n\nexport const getAccessControlComponent = () => {\n  return getForm(null, FormsConfig.submissionAccessData)\n    .then((form) => {\n      return _.chain(form).get('components', []).find(comp => comp.key === accessControlCompKey ).value();\n    });\n}\n\nexport const getCutLocationPath = (locationPath = '', cutNumber) => {\n  return _.chain(locationPath).split('/').slice(0, cutNumber).join('/').value();\n}\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { NavLink, Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport { useAuth, logout, setBeforeLogoutActionExecution} from '../../modules/auth';\nimport Logo from '../../assets/Logo.png';\nimport { IncomingCount } from '../../modules/incomingCount';\nimport { hasAdminRights } from '../../utils';\n\nconst Header = () => {\n  const history = useHistory();\n\n  const { state: authState, dispatch } = useAuth();\n  const { authenticated, is: role, userInfo, beforeLogoutAction, beforeLogoutActionExecution } = authState;\n\n  const isAdmin = hasAdminRights(role);\n\n  const onLogout = () => {\n    if (beforeLogoutAction) {\n      dispatch(setBeforeLogoutActionExecution(true));\n    }\n    else {\n      logout(dispatch, () => {\n        history.push('/auth');\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (beforeLogoutActionExecution && !beforeLogoutAction) {\n      logout(dispatch, () => {\n        history.push('/auth');\n      });\n    }\n  }, [beforeLogoutAction, beforeLogoutActionExecution, dispatch, history]);\n   \n  const navbarLinks = _.sortBy([ \n    {icon: \"fa fa-home fa-lg\", path: '/', title: '', exact: true, adminOnly: false, authenticetedOnly: true, priority: 0 },\n    {icon: \"fa fa-arrow-circle-down\", afterTitle: <IncomingCount/> , path: '/incoming', title: 'All Incoming', notAdmin: true, authenticetedOnly: true,  priority: 10 },\n    {icon: \"fa fa-arrow-circle-up\", path: '/routed', title: 'All Routed', notAdmin: true, authenticetedOnly: true,  priority: 15 },\n    {icon: \"fa fa-wpforms\", path: '/form', title: 'Forms', adminOnly: false,authenticetedOnly: true,  priority: 23 },\n    {icon: \"fa fa-check-square-o\", path: '/myforms', title: 'My Forms', notAdmin: true, authenticetedOnly: true,  priority: 25 },\n    {icon: \"fa fa-address-card\", path: '/employees', title: 'Employees', adminOnly: false, authenticetedOnly: true, priority: 30 },\n    {icon: \"fa fa-user\", path: '/users', title: 'Users', adminOnly: true, authenticetedOnly: false,  priority: 35 },\n    {icon: \"fa fa-users\", path: '/groups', title: 'Groups', adminOnly: true, authenticetedOnly: false,  priority: 40 },\n    {icon: \"fa fa-folder-open\", path: '/folders', title: 'Folders', adminOnly: true, authenticetedOnly: false,  priority: 35 },\n  ], (link) => link.priority);\n\n  return (\n     <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4 shadow\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand mr-5\" to=\"/\">\n            <img className=\"logo\" \n              alt=\"Ohio Department of Rehabilitation and Correction\" \n              src={Logo}\n              style={{height:\"40px\"}} \n            />\n          </Link>\n          <ul className=\"nav navbar-nav mr-auto\">\n            {\n              navbarLinks.map(link => {\n                if ((link.adminOnly && !isAdmin) || (link.authenticetedOnly && !authenticated) || (link.notAdmin && isAdmin)) return null;\n\n                return (\n                  <NavLink exact={link.exact} to={link.path} key={link.title} role=\"navigation link\" className=\"nav-link\">\n                    <i className={link.icon}></i>\n                    &nbsp;\n                    {link.title}&nbsp;\n                    {link.afterTitle}\n                  </NavLink>\n                )\n              })\n            }\n          </ul>\n          <ul className=\"nav navbar-nav ml-auto\">\n            {authenticated && (\n              <li className=\"nav-item\">\n              <NavLink to={`/employees/${_.get(userInfo, '_id', '')}`} role=\"navigation link\" className=\" nav-link\">\n                <span className=\"fa fa-user-circle  fa-lg\" title={`User: ${_.get(userInfo, 'data.email', '')}`} />&nbsp;\n              </NavLink>\n              </li>\n            )}\n            { authenticated \n              ? (<li className=\"nav-item\">\n                  <span className=\"nav-link\" role=\"navigation link\"  onClick={onLogout}>\n                    <span className=\"fa fa-sign-out fa-lg\" title=\"Log Out\"/>&nbsp;\n                  </span>\n                </li>) \n              : (<NavLink to=\"/auth\" role=\"navigation link\" className=\"nav-link\">\n                  Login\n                </NavLink>)\n            }\n          </ul>\n        </div>\n      </nav>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Loading = (props) => {\n  const {\n    style = {\n      width: '60px',\n      height: '60px',\n    },\n    textClass,\n    loaderMessage\n  } = props;\n\n  const wrapperStyles = {\n    marginLeft: 'calc(50% - 60px)',\n  };\n\n  const textStyles = {\n    fontSize: '1.1rem',\n    marginLeft: '-2rem',\n    marginTop: '1rem'\n  };\n\n  return (\n    <div style={wrapperStyles}>\n    <div className={`spinner-border ${textClass || 'text-primary'}`} style={style} role=\"status\">\n      <span className=\"sr-only\" >Loading...</span>\n    </div>\n    {loaderMessage && <p style={textStyles}>{`${loaderMessage} ...`}</p>}\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\nimport { useAuth } from '../../modules/auth';\nimport { Link } from 'react-router-dom';\nimport { Form } from '@formio/react';\nimport { FormsConfig } from '../../config';\n\nconst Home = () => {\n  const { state: authState } = useAuth();\n  const {authenticated, user} = authState;\n\n  const Greeting = () => {\n    if (authState.user && authState.user.data) {\n      return (\n        <h3>\n          You are logged in as&nbsp;<strong>{ user.data.email }</strong>!\n        </h3>\n      );\n    }\n  };\n\n  return (\n    <div className=\"mt-3\">\n      <div className=\"container\">\n        {authenticated \n          ? (<div className=\"well text-center\">\n              <Greeting/>\n              <Form src={FormsConfig.getSrc('homePage' )}/>\n            </div>)\n          : <h3 className=\"well text-center\">Please <Link to=\"/auth\">log in</Link> to start using the application</h3>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Confirm = (props) => {\n  const {\n    onYes,\n    onNo,\n    message,\n    yesText = 'Yes',\n    noText = 'No',\n    wrapperStyles={}\n  } = props;\n\n  return (\n    <div className=\"mt-3\" style={wrapperStyles}>\n      <h4>{message}</h4>\n      <div className=\"btn-group mt-3 mb-2\" role=\"group\">\n        <button onClick={onYes} type=\"button\" className=\"btn btn-danger\">{yesText}</button>\n        <button onClick={onNo} type=\"button\" className=\"btn btn-outline-dark\">{noText}</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Confirm;\n","import React from 'react';\n\nconst Modal = ({ width, height, className, children, contentStyles }) => {\n  const contentStyle = {\n    position: 'absolute',\n    top: '50%',\n    width: width || '180px',\n    height: height || '100px',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    boxShadow: '0px 0px 22px rgba(0, 0, 0, 0.4)',\n    zIndex: '1001',\n    fontSize: '16px',\n    ...contentStyles\n  };\n\n  const overlayStyle = {\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: '1000',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  };\n\n  return (\n    <div className=\"overlay\" style={overlayStyle}>\n      <div className={className} style={contentStyle}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nconst Title = (props) => {\n  return (<h2 className='pt-2 text-capitalize'>{props.text}</h2>);\n};\n\nTitle.defaultProps = {\n  text: '',\n}\n\nexport default Title;\n","import React from 'react';\n\nconst Progressbar = (props) => {\n  const {\n    progress=0,\n    message,\n    title\n  } = props;\n\n  const wrapperStyles = {\n    height: '1.5rem', \n  };\n\n  const progressBarStyle = {\n    width: `${progress}%`\n  };\n\n  return (\n    <div className=\"mt-5\">\n      {title && (<h5>{title}</h5>)}\n      <div className=\"progress\" style={wrapperStyles}>\n        <div \n          className=\"progress-bar progress-bar-striped  progress-bar-animated\" \n          role=\"progressbar\" \n          style={progressBarStyle}  \n          aria-valuenow={progress} \n          aria-valuemin=\"0\" \n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <p >{`${message || 'In progress'} ...`}</p>\n    </div>\n  );\n};\n\nexport default Progressbar;\n","import React from 'react';\n\nconst Button = (props) => {\n  const {\n    btnClass,\n    text,\n    onClick\n  } = props;\n\n  return (<button type=\"button\" onClick={onClick} className={`btn ${btnClass}`}>{text}</button>);\n};\n\nexport default Button;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => {\n  return (\n    <div className=\"alert alert-warning\" role=\"alert\">\n      <h3 className=\"alert-heading text-center\">Page Not Found</h3>\n      <Link className=\"\" to=\"/\">Go to Home Page</Link>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import React, { useState } from 'react';\nimport { Form, setUser } from '@formio/react';\nimport { Loading } from '../../../common';\nimport { AppConfig, AuthConfig } from '../../../config';\nimport { useAuth } from '../authContext';\n\nconst Login = (props) => {\n  const { dispatch } = useAuth();\n  const [isReady, setIsReady] = useState(false);\n  const {asAdmin} = props;\n\n  const loginFormUrl = `${AppConfig.projectUrl}/${asAdmin ? AuthConfig.adminLogin.form : AuthConfig.login.form}?live=1`;\n\n  const onSubmitDone = (submission) => {\n    setUser(submission)(dispatch);\n  };\n\n  const onFormReady = (form) => {\n    if (props.onFormReady) {\n      props.onFormReady(form);\n    }\n    setIsReady(true);\n  }\n\n  return (\n    <>\n    <>test1</>\n      <Form\n        {...props}\n        src={loginFormUrl}\n        onSubmitDone={onSubmitDone}\n        formReady={onFormReady}\n      />\n      { isReady ? null : <Loading /> }\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Login from './Login';\nimport { useAuth } from './../authContext';\n\nconst AuthPage = () => {\n  const history = useHistory();\n\n  const {state: authState} = useAuth();\n  const {user, authenticated} = authState;\n\n  useEffect(() => {\n    if(user && authenticated) {\n      history.push('/');\n    }\n  }, [user, authenticated, history])\n\n  if (authenticated && user) {\n    return null;\n  }\n\n  return (\n    <div className=\"row mt-5\">\n      <div className=\"col-lg-6 col-md-6\">\n        <Login />\n      </div>\n      <div className=\"col-lg-6 col-md-6\">\n        <Login asAdmin/>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthPage;\n","import { Loading, Modal } from '../../../common';\nimport Login from './Login';\n\n\nconst LoginWrapper = (props) => {\n  return (\n    <div className=\"login-wrapper\">\n      <Modal className=\"alert alert-info\">\n        <div className=\"d-flex flex-column align-items-center\">\n          <Loading style={{ marginBottom: ' 10px' }}/>\n          Logging In...\n        </div>\n      </Modal>\n      <div className=\"login-wrapper-body\">\n        { props.children }\n      </div>\n    </div>\n  );\n};\n\nconst AutoLoginPage = () => {\n  const onFormReady = (form) => {\n    const loginBtn = form.getComponent('submit');\n    loginBtn.refs.button.click();\n  }\n\n  return (\n    <LoginWrapper>\n      <Login onFormReady={onFormReady} />\n    </LoginWrapper>\n  );\n};\n\nexport default AutoLoginPage;\n","import React from 'react';\nimport { Formio } from '@formio/react';\nimport _ from 'lodash';\nimport {FormsConfig} from '../../../config';\nimport {Utils} from 'formiojs';\nimport * as AppUtils from '../../../utils';\nimport NativePromise from 'native-promise-only';\n\nconst FormsContext = React.createContext();\n\nconst initialState = {\n  error: '',\n  forms: [],\n  isActive: false,\n  pagination: {\n    numPages: 0,\n    page: 1,\n    total: 0,\n  },\n  formsUpdateProgress: 0,\n  formsUpdating: false,\n  requestParamsSet: false,\n  requestParams: {\n    limit: 10000000,\n    query: {},\n    select: '',\n    sort: '',\n  }\n};\n\nfunction formsReducer(state, action) {\n  switch (action.type) {\n    case 'FORMS_RESET':\n      return initialState;\n    case 'FORMS_REQUEST':\n      return {\n        ...state,\n        error: '',\n        forms: [],\n        isActive: true,\n        pagination: {\n          ...state.pagination,\n          page: action.page,\n        },\n      };\n    case 'UPDATE_START':\n      return {\n        ...state,\n        error: '',\n        formsUpdating: true,\n        formsUpdateProgress: 5,\n       };\n    case 'UPDATE_FINISH':\n      return {\n        ...state,\n        error: '',\n        formsUpdating: false,\n        formsUpdateProgress: 0,\n      };\n    case 'UPDATE_FAIL':\n      return {\n        ...state,\n        error: action.error,\n        formsUpdating: false,\n        formsUpdateProgress: 0,\n      };\n    case 'UPDATE_PROGRESS':\n      return {\n        ...state,\n        formsUpdateProgress: action.progress,\n      };\n    case 'FORMS_SUCCESS': {\n      const total = action.forms.serverCount;\n\n      return {\n        ...state,\n        forms: action.forms,\n        isActive: false,\n        pagination: {\n          ...state.pagination,\n          numPages: Math.ceil(total / action.limit),\n          total,\n        },\n      };\n    }\n    case 'FORMS_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n        isActive: false,\n      };\n    case 'SET_FILTER_QUERY': \n      return {\n        ...state,\n        requestParams: {...state.requestParams, query: action.query},\n        requestParamsSet: true,\n        forms: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport function FormsProvider(props) {\n  const [state, dispatch] = React.useReducer(formsReducer, initialState);\n  const value = React.useMemo(() => [state, dispatch], [state, dispatch]);\n\n  return <FormsContext.Provider value={value} {...props} />;\n}\n\nexport function useForms() {\n  const context = React.useContext(FormsContext);\n  if (!context) {\n    throw new Error('useForms must be used within a FormsProvider');\n  }\n\n  const [state, dispatch] = context;\n\n  return {\n    state,\n    dispatch\n  }\n}\n\nexport const resetForms = () => ({\n  type: 'FORMS_RESET',\n});\n\nexport  const requestForms = (page, params) => ({\n  type: 'FORMS_REQUEST',\n  page,\n  params,\n});\n\nexport const receiveForms = (forms, limit) => ({\n  type: 'FORMS_SUCCESS',\n  forms,\n  limit,\n});\n\nexport const failForms = (error) => ({\n  type: 'FORMS_FAILURE',\n  error,\n});\n\nconst startFormsUpdate = () => ({\n  type: 'UPDATE_START',\n});\n\nconst finishFormsUpdate = () => ({\n  type: 'UPDATE_FINISH',\n});\n\nconst failFormsUpdate = (error) => ({\n  type: 'UPDATE_FAIL',\n  error\n});\n\nconst setUpdateProgress= (progress) => ({\n  type: 'UPDATE_PROGRESS',\n  progress\n});\n\nconst setFilterQuery= (query) => ({\n  type: 'SET_FILTER_QUERY',\n  query\n});\n\n\nexport const indexForms = (dispatch, { limit, query, select, sort }, page = 1, params = {}, done = () => {}) => {\n  dispatch(requestForms(page, params));\n\n  return AppUtils.getForms({ limit, query, select, sort }, page = 1, params = {})\n    .then((result) => {\n      dispatch(receiveForms(result, limit));\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failForms(error));\n      done(error);\n    });\n};\n\nconst transformForms = (forms) => {\n  forms = Utils.fastCloneDeep(forms)\n\n  if (forms && forms.length) {\n    return _.map(forms, form => ({formTitle: form.data.form.title, formId:form.data.form._id, formName: form.data.form.name || '' , folderPath: form.data.folder.data.folderPath, folderId: form.data.folder._id }))\n  }\n  return [];\n};\n\nexport const getFoldersForms = (dispatch, { limit, query, select, sort }, page = 1, params = {}, done = () => {}) => {\n  dispatch(requestForms(page, params));\n\n  const formio = new Formio(`${Formio.getProjectUrl()}/${FormsConfig.folderForm}/submission`);\n  const selectData = 'data.form,data.group.data';\n  select = select ? `${select},${selectData}` : '';\n  const requestParams = AppUtils.getRequestParams(limit, query, sort, params, select, page);\n\n  return formio.loadSubmissions({ params: requestParams })\n    .then((result) => {\n      dispatch(receiveForms(transformForms(result), limit));\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failForms(error));\n      done(error);\n    });\n};\n\nconst accessControlCompKey = 'submissionAccessData';\n\nconst getAccessControlComponent = () => {\n  return AppUtils.getForm(null, FormsConfig.submissionAccessData)\n    .then((form) => {\n      return _.chain(form).get('components', []).find(comp => comp.key === accessControlCompKey).value();\n    });\n}\n\nconst getProjectForms = (limit, requestCount) => {\n  return AppUtils.getForms({ limit, query: {type: 'form'} }, requestCount);\n}\n\nconst addFormAccessControlCompAndSave = (dispatch, formAccessControlComp, limit, skipCoef) => {\n  return getProjectForms(limit, skipCoef)\n  .then(forms => {\n    dispatch(setUpdateProgress(AppUtils.getProgress(limit, skipCoef, forms.serverCount)));\n\n    const formsPromises = _.map(forms, form => {\n      const pathToComponents = form.display === 'wizard' ? 'components[0].components' : 'components';\n      const pathExists = _.chain(form).get(pathToComponents).isArray().value();\n\n      if (pathExists) {\n        const updatedComponents = _.chain(form).get(pathToComponents).filter(comp => comp.key !== accessControlCompKey).value();\n        updatedComponents.push(formAccessControlComp);\n        _.set(form, pathToComponents, updatedComponents);\n      }\n\n      return AppUtils.saveForm(form);\n    });\n\n    if (forms.serverCount > limit*skipCoef) {\n      formsPromises.push(addFormAccessControlCompAndSave(dispatch, formAccessControlComp, limit, ++skipCoef));\n    }\n    return NativePromise.all(formsPromises);\n  });\n}\n\nexport const addFormAccessControlFields = (dispatch, done = () =>{}) => {\n  dispatch(startFormsUpdate());\n\n  return getAccessControlComponent()\n    .then((accessControlComp) => {\n      return addFormAccessControlCompAndSave(dispatch, accessControlComp, 100, 1);\n    })\n    .then((result) => {\n      dispatch(finishFormsUpdate());\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failFormsUpdate());\n      done(error);\n    });\n}\n\nexport const setFilterQueryParam = (dispatch, query) => {\n  dispatch(setFilterQuery(query));\n}","import React from 'react';\nimport { Formio } from '@formio/react';\nimport { FormsConfig } from '../../../config';\nimport {Utils} from 'formiojs';\nimport * as AppUtils from '../../../utils';\nimport _ from 'lodash';\nimport { autoNameFieldKey, isProcess } from '../../../utils';\n\nconst FormContext = React.createContext();\n\nconst initialState = {\n  id: '',\n  isActive: false,\n  lastUpdated: 0,\n  clonedForm: {},\n  form: {},\n  url: '',\n  error: '',\n  gridForm: {},\n  gridError: '',\n  options: {},\n  formFolder: {},\n  formFolderError: '',\n  hasFormAccess: false,\n  accessCheckError: '',\n  checkingAccess: false,\n  deletingForm: false,\n  deleteFormStatus: {},\n  autofilledFields: [],\n  loadingFormFolder: false,\n  isProcess: false,\n  accessControlComp:{},\n  loadingAccessControlComp: false,\n  accessControlCompError: '',\n  autoName: false,\n};\n\nconst deleteFormProgress={\n  deletingFolder: {\n    progress: 10,\n    message: 'Deleting Form from Folder'\n  },\n  deletingForm:{\n    progress: 50,\n    message: 'Deleting Form'\n  },\n  finishing: {\n    progress: 99,\n    message: 'Finishing'\n  }\n}\n\nconst formReducer = function(state, action) {\n  switch (action.type) {\n    case 'FORM_CLEAR_ERROR':\n      return {\n        ...state,\n        error: '',\n      };\n    case 'FORM_REQUEST':\n      return {\n        ...state,\n        isActive: true,\n        id: action.id,\n        form: {},\n        clonedForm: {},\n        url: action.url,\n        error: '',\n        autofilledFields: []\n      };\n    case 'GRID_FORM_REQUEST':\n      return {\n        ...state,\n        gridForm: {},\n        gridError: ''\n      };\n    case 'GRID_FORM_SUCCESS':\n      return {\n        ...state,\n        gridForm: action.form,\n        gridError: ''\n      };\n    case 'GRID_FORM_FAILURE':\n      return {\n        ...state,\n        gridError: action.error,\n      };\n    case 'FOLDER_REQUEST':\n      return {\n        ...state,\n        formFolder: {},\n        loadingFormFolder: true,\n        formFolderError: ''\n      };\n    case 'FOLDER_SUCCESS':\n      return {\n        ...state,\n        formFolder: action.folder,\n        loadingFormFolder: false,\n        formFolderError: '',\n\n      };\n    case 'FOLDER_FAILURE':\n      return {\n        ...state,\n        loadingFormFolder: false,\n        formFolderError: action.error,\n      };\n    case 'ACCESS_CHECK_SUCCESS':\n      return {\n        ...state,\n        hasFormAccess: action.authorized,\n        accessCheckError: '',\n        checkingAccess: false\n      };\n    case 'ACCESS_CHECK_REQUEST':\n      return {\n        ...state,\n        accessCheckError: '',\n        checkingAccess: true\n      };\n    case 'ACCESS_CHECK_FAILURE':\n      return {\n        ...state,\n        accessCheckError: action.error,\n        checkingAccess: false\n      };\n    case 'FORM_SUCCESS':\n      return {\n        ...state,\n        isActive: false,\n        id: action.form._id,\n        form: action.form,\n        clonedForm: _.cloneDeep(action.form),\n        url: action.url || state.url,\n        error: '',\n        isProcess:  isProcess(action.form),\n        autofilledFields: action.autofilledFields || [],\n        autoName: action.autoName\n      };\n    \n    case 'FORM_FAILURE':\n      return {\n        ...state,\n        isActive: false,\n        isInvalid: true,\n        deletingForm: false,\n        error: action.error,\n        deleteFormStatus: {},\n        autofilledFields: []\n      };\n      case 'FORM_DELETE_START':\n        return {\n          ...state,\n          deletingForm: true,\n        };\n    case 'FORM_SAVE':\n      return {\n        ...state,\n        isActive: true,\n      };\n    case 'FORM_RESET':\n      return initialState;\n    case 'SET_FORM_OPTIONS':\n      return {\n        ...state,\n        options: action.options,\n      };\n    case 'SET_DELETE_STATUS':\n      return {\n        ...state,\n        deleteFormStatus: deleteFormProgress[`${action.status}`],\n      };\n    case 'ACCESS_COMP_REQUEST':\n      return {\n        ...state,\n        accessControlComp: {},\n        loadingAccessControlComp: true,\n        accessControlCompError: ''\n      };\n    case 'ACCESS_COMP_SUCCESS':\n      return {\n        ...state,\n        accessControlComp: action.accessControlComp,\n        loadingAccessControlComp: false,\n        accessControlCompError: ''\n      };\n    case 'ACCESS_COMP_FAILURE':\n      return {\n        ...state,\n        loadingAccessControlComp: false,\n        accessControlCompError: action.error\n      }\n    default:\n      return state;\n  }\n}\n\nexport function FormProvider(props) {\n  const [state, dispatch] = React.useReducer(formReducer, initialState);\n  const value = React.useMemo(() => [state, dispatch], [state, dispatch]);\n\n  return <FormContext.Provider value={value} {...props} />;\n}\n\nexport function useForm() {\n  const context = React.useContext(FormContext);\n  if (!context) {\n    throw new Error('useForm must be used within a FormProvider');\n  }\n\n  const [state, dispatch] = context;\n\n  return {\n    state,\n    dispatch\n  }\n}\n\nexport const clearFormError = () => ({\n  type: 'FORM_CLEAR_ERROR',\n});\n\nconst requestGridForm = (id, url) => ({\n  type: 'GRID_FORM_REQUEST',\n  id,\n  url,\n});\n\nconst receiveGridForm = (form, url) => ({\n  type: 'GRID_FORM_SUCCESS',\n  form,\n  url,\n});\n\nconst failGridForm = (err) => ({\n  type: 'GRID_FORM_FAILURE',\n  error: err,\n});\nconst requestForm = (id, url) => ({\n  type: 'FORM_REQUEST',\n  id,\n  url,\n});\n\nconst receiveForm = (form, url, autofilledFields, autoName = false) => ({\n  type: 'FORM_SUCCESS',\n  form,\n  url,\n  autofilledFields,\n  autoName\n});\n\nconst failForm = (err) => ({\n  type: 'FORM_FAILURE',\n  error: err,\n});\n\nconst accessControlCompRequest = () => ({\n  type: 'ACCESS_COMP_REQUEST',\n});\n\nconst accessControlCompSuccess = (accessControlComp) => ({\n  type: 'ACCESS_COMP_SUCCESS',\n  accessControlComp\n});\n\nconst accessControlCompFail = (error) => ({\n  type: 'ACCESS_COMP_FAILURE',\n  error\n});\n\nexport const resetForm = () => ({\n  type: 'FORM_RESET',\n});\n\nconst sendForm = (form) => ({\n  type: 'FORM_SAVE',\n  form,\n});\n\nconst setOptions = (options) => ({\n  type: 'SET_FORM_OPTIONS',\n  options,\n});\n\nconst requestFolder = () => ({\n  type: 'FOLDER_REQUEST',\n});\n\nexport const receiveFolder = (folder) => ({\n  type: 'FOLDER_SUCCESS',\n  folder\n});\n\nconst failFolder= (err) => ({\n  type: 'FOLDER_FAILURE',\n  error: err,\n});\n\nconst receiveAccess= (authorized) => ({\n  type: 'ACCESS_CHECK_SUCCESS',\n  authorized,\n});\n\nconst requestAccessCheck = () => ({\n  type: 'ACCESS_CHECK_REQUEST',\n});\n\nconst failAccessCheck = (err) => ({\n  type: 'ACCESS_CHECK_FAILURE',\n  error: err\n});\n\nconst startFormDeleting = (err) => ({\n  type: 'FORM_DELETE_START',\n  error: err\n});\n\nconst setDeleteFormStatus = (status) => ({\n  type: 'SET_DELETE_STATUS',\n  status\n});\n\nexport const getForm = (dispatch, id, name,  transform,  done = () => {}) => {\n  const formPath = `/${id ? `form/${id}` : `${name}`}`;\n  const path = `${Formio.getProjectUrl()}${formPath}`;\n  const formio = new Formio(path);\n\n  dispatch(requestForm(id, path));\n\n  return formio.loadForm()\n    .then((result) => {\n      let form = result;\n\n      if (form && transform) {\n        form = transform(form);\n      }\n\n      dispatch(receiveForm(form));\n      done(null, form);\n    })\n    .catch((result) => {\n      dispatch(failForm(result));\n      done(result);\n    });\n};\n\nexport const getFormAndCheck = (dispatch, id, name,  done = () => {}) => {\n  const formPath = `/${id ? `form/${id}` : `${name}`}`;\n  const path = `${Formio.getProjectUrl()}${formPath}`;\n  const formio = new Formio(path);\n\n  dispatch(requestForm(id, path));\n\n  return formio.loadForm()\n    .then((result) => {\n      const form = result;\n      if ((form.display === 'form' && !form.components.some(component => component.key === 'submissionAccessData')) ||\n      (form.display === 'wizard' && !_.get(form, 'components[0].components', []).some(component => component.key === 'submissionAccessData'))) {\n        throw Error('The form does not have Submission Access Data configuration. Please contact an administrator to fix this.');\n      }\n      \n      const autofilledFields = [];\n      let autoName = false;\n\n      Utils.eachComponent(form.components, (component, path) => {\n        if (component.key === autoNameFieldKey) {\n          autoName = true;\n        }\n        if (component.autofilledValue) {\n          autofilledFields.push({path: path, autofilledValue: component.autofilledValue});\n        }\n      }, true)\n\n      dispatch(receiveForm(form, null, autofilledFields, autoName));\n      done(null, form);\n    })\n    .catch((err) => {\n      dispatch(failForm(err));\n      done(err);\n    });\n};\n\nexport const setFormOptions = (dispatch, options) => {\n  options = options || {};\n  dispatch(setOptions(options));\n};\n\nexport const getGridForm = (dispatch, id, name, done = () => {}) => {\n  const formPath = `/${id ? `form/${id}` : `${name}`}`;\n  const path = `${Formio.getProjectUrl()}${formPath}`;\n  const formio = new Formio(path);\n\n  dispatch(requestGridForm(id, path));\n\n  return formio.loadForm()\n    .then((result) => {\n      dispatch(receiveGridForm(result));\n      done(null, result);\n    })\n    .catch((result) => {\n      dispatch(failGridForm(result));\n      done(result);\n    });\n};\n\nexport const saveForm = (dispatch, form, done = () => {}) => {\n  dispatch(sendForm(form));\n\n  const id = form._id;\n  const path = `${Formio.getProjectUrl()}/form${id ? `/${id}` : ''}`;\n  const formio = new Formio(path);\n\n  formio.saveForm(form)\n    .then((result) => {\n      const url = `${Formio.getProjectUrl()}/form/${result._id}`;\n      dispatch(receiveForm(result, url));\n      done(null, result);\n    })\n    .catch((result) => {\n      dispatch(failForm(result));\n      done(result);\n    });\n};\n\nconst deleteFormFolder = (dispatch, formId) => {\n  const url = `${Formio.getProjectUrl()}/${FormsConfig.folderForm}/submission`;\n  const formio = new Formio(url);\n\n  return formio.loadSubmissions({params: {'data.form._id': formId}})\n    .then((result) => {\n      if (!result.length) {\n        return;\n      }\n\n      const formFolderSubmissionId = result[0]._id;\n      const formio = new Formio(`${url}/${formFolderSubmissionId}`);\n\n      return formio.deleteSubmission();\n    })\n};\n\nexport const deleteForm = (dispatch, id, name, done = () => {}) => {\n  const formPath = `/${id ? `form/${id}` : `${name}`}`;\n  const path = `${Formio.getProjectUrl()}${formPath}`;\n  const formio = new Formio(path);\n\n  dispatch(startFormDeleting());\n  dispatch(setDeleteFormStatus('deletingFolder'));\n\n  return deleteFormFolder(dispatch, id)\n    .then(() => {\n      dispatch(setDeleteFormStatus('deletingForm'));\n      return formio.deleteForm();\n    })\n    .then(() => {\n      dispatch(setDeleteFormStatus('finishing'));\n      dispatch(resetForm());\n      done();\n    })\n    .catch((error) => {\n      dispatch(failForm(error));\n      done(error);\n    });\n};\n\nexport const getFormFolder=(dispatch, formId, done =() => {}) => {\n  const url = `${Formio.getProjectUrl()}/${FormsConfig.folderForm}/submission`;\n  const formio = new Formio(url);\n\n  dispatch(requestFolder());\n\n  formio.loadSubmissions({params: {'data.form._id': formId}})\n    .then((result) => {\n      dispatch(receiveFolder(result[0] || {}));\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failFolder(error));\n      done(error);\n    });\n} \n\nexport const checkAccess=(dispatch, formId, done =()=>{}) => {\n  const url = `${Formio.getProjectUrl()}/${FormsConfig.folderForm}/submission`;\n  const formio = new Formio(url);\n\n  dispatch(requestAccessCheck());\n\n  formio.loadSubmissions({params: {'data.form._id': formId}})\n    .then((result) => {\n      dispatch(receiveAccess(!!result.length));\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failAccessCheck(error));\n      done(error);\n    });\n} \n\nexport const loadAccessControlComponent = (dispatch) => {\n  dispatch(accessControlCompRequest());\n\n  return AppUtils.getAccessControlComponent()\n    .then(comp => {\n      dispatch(accessControlCompSuccess(comp));\n    })\n    .catch((e) => {\n      dispatch(accessControlCompFail(e));\n    });\n}","import React from 'react';\nimport _ from 'lodash';\nimport * as Utils from '../../../utils';\nimport NativePromise from 'native-promise-only';\n\nconst SubmissionsContext = React.createContext();\n\nconst initialState = {\n  error: '',\n  formId: '',\n  formName: '',\n  isActive: false,\n  pagination: {\n    numPages: 0,\n    page: 1,\n    total: 0,\n  },\n  submissions: [],\n};\n\nconst SubmissionsReducer = (state, action) => {\n  switch (action.type) {\n    case 'SUBMISSIONS_RESET':\n      return initialState;\n    case 'SUBMISSIONS_REQUEST':\n      return {\n        ...state,\n        error: '',\n        formId: action.formId,\n        formName: action.formName,\n        isActive: true,\n        pagination: {\n          ...state.pagination,\n          page: action.page,\n        },\n        submissions: [],\n      };\n    case 'SUBMISSIONS_SUCCESS': {\n      const total = action.submissions.serverCount;\n\n      return {\n        ...state,\n        isActive: false,\n        pagination: {\n          ...state.pagination,\n          numPages: Math.ceil(total / action.limit),\n          total,\n        },\n        submissions: action.submissions,\n      };\n    }\n    case 'SUBMISSIONS_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n        isActive: false,\n      };\n    case 'SUBMISSIONS_ACTION_START':\n      return {\n        ...state,\n        error: '',\n        isActive: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport function SubmissionsProvider(props) {\n  const [state, dispatch] = React.useReducer(SubmissionsReducer, initialState);\n  const value = React.useMemo(() => [state, dispatch], [state, dispatch]);\n\n  return <SubmissionsContext.Provider value={value} {...props} />;\n}\n\nexport function useSubmissions() {\n  const context = React.useContext(SubmissionsContext);\n  if (!context) {\n    throw new Error('useSubmissions must be used within a SubmissionsProvider');\n  }\n\n  const [state, dispatch] = context;\n\n  return {\n    state,\n    dispatch\n  }\n}\n\nexport const resetSubmissions = () => ({\n  type: 'SUBMISSIONS_RESET',\n});\n\nconst requestSubmissions = (page, params, formId, formName) => ({\n  type: 'SUBMISSIONS_REQUEST',\n  page,\n  params,\n  formId,\n  formName\n});\n\nconst receiveSubmissions = (submissions, limit) => ({\n  type: 'SUBMISSIONS_SUCCESS',\n  submissions,\n  limit\n});\n\nconst failSubmissions = (error) => ({\n  type: 'SUBMISSIONS_FAILURE',\n  error,\n});\n\nconst submissionsActionStart = () => ({\n  type: 'SUBMISSIONS_ACTION_START',\n});\n\nexport const indexSubmissions = (dispatch, page = 0, { limit, query, select, sort },  params = {}, formId, formName, done = () => {}) => {\n  dispatch(requestSubmissions(page, params, formId), formName);\n\n  return Utils.getSubmissions({ limit, query, select, sort }, params, formId, formName)\n    .then((result) => {\n      dispatch(receiveSubmissions(result, limit));\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failSubmissions(error));\n      done(error);\n    });\n};\n\n\nexport const saveSubmissions = (dispatch, submissions = [], formId, formName, done=()=> {} ) => {\n  dispatch(submissionsActionStart());\n\n  NativePromise.all(_.map(submissions, subm => Utils.saveSubmission(subm, formId, formName)))\n    .then(() => {\n      dispatch(resetSubmissions());\n      done();\n    })\n    .catch((err) => {\n      dispatch(failSubmissions(err));\n      done(err);\n    });\n}\n\nexport const deleteSubmissions = (dispatch, submissionIds = [], formId, done=()=> {} ) => {\n  dispatch(submissionsActionStart());\n\n  NativePromise.all(_.map(submissionIds, id => Utils.deleteSubmission(id, formId)))\n    .then(() => {\n      dispatch(resetSubmissions());\n      done();\n    })\n    .catch((err) => {\n      dispatch(failSubmissions(err));\n      done(err);\n    });\n}\n","import React, {useState} from 'react';\nimport { Form} from '@formio/react';\nimport { FormsConfig } from '../../../config';\nimport _ from 'lodash';\nimport { Loading } from '../../../common';\n\nconst SubmissionName = (props) => {\n  const {\n    readOnly,\n    onNameChange,\n    onFormReady: onNameFormReady,\n    name\n  } = props;\n  const [isReady, setFormReady] = useState(false);\n\n  return (\n    <div className=\"alert alert-primary rounded my-3 pt-0 border border-primary\">\n      <Form\n        submission={name ? {data: {submissionName: name}} : null}\n        src={FormsConfig.getSrc('submissionName')}\n        onChange={(data)=> {\n          const name = _.get(data, 'data.submissionName', '');\n          onNameChange(name);\n        }}\n        formReady={(form) => {\n          setFormReady(true)\n          onNameFormReady(form);\n        }}\n        options={{template: 'bootstrap', iconset: 'fa', noValidate: true , readOnly}}\n      />\n      {!isReady && <Loading/>}\n    </div>\n  );\n}\n\nSubmissionName.defaultProps ={\n  onNameChange: () => {},\n  onFormReady: () => {}\n}\n\nexport default SubmissionName;\n","import React from 'react';\nimport { Modal } from '../../../common';\n\nconst RouteTrackingModalWrapper = (props) => {\n  const {\n    children,\n    onModalCloseClick = () => {}\n  } = props;\n\n  return (\n    <Modal width={'90%'} height={'80%'} contentStyles={{'overflowY': 'scroll'}}>\n      <div className=\"modal-content font-weight-light submission-tracking\" >\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title font-weight-normal\">Route Tracking</h5>\n          <button type=\"button\" className=\"close\" onClick={onModalCloseClick} data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        {children}\n      </div>\n    </Modal>\n  )\n}\n\nexport default RouteTrackingModalWrapper;\n","import React from 'react';\nimport { TrackSubmissionForm } from '.';\nimport RouteTrackingModalWrapper from './RouteTrackingModalWrapper';\n\nconst RouteTrackingModal = (props) => {\n  const {\n    routeTrack = {},\n    onModalCloseClick = () => {}\n  } = props;\n\n  return (\n    <RouteTrackingModalWrapper  onModalCloseClick={ onModalCloseClick}>\n      <TrackSubmissionForm routeTrack={routeTrack}/>\n    </RouteTrackingModalWrapper>\n  )\n}\n\nexport default RouteTrackingModal;\n","import React, {useState} from 'react';\nimport { Form} from '@formio/react';\nimport { FormsConfig } from '../../../config';\nimport _ from 'lodash';\nimport { Loading } from '../../../common';\n\nconst TrackSubmissionForm = (props) => {\n  const {\n    routeTrack = {}, showRoutesIds\n  } = props;\n  const [isReady, setFormReady] = useState(false);\n\n  const routedSubmissionName = _.get(routeTrack, 'data.routedSubmission.name', '');\n  const reportDate = _.get(routeTrack, 'data.tracking[0].senderInfo[0].dateSent', '');\n  const formName = _.get(routeTrack, 'data.routedForm.name', '-');\n  return (\n  <div className=\"modal-body p-3\" >\n    <div className=\"row mb-4\">\n      <span className=\"col-5\"><span className=\"font-weight-bold mr-2\">Submission Name:  </span>{routedSubmissionName}</span>\n      <span className=\"col-3\"><span className=\"font-weight-bold mr-2\">Report Date:</span> {reportDate ? new Date(reportDate).toLocaleDateString() : '-'}</span>\n      <span className=\"col-4\"><span className=\"font-weight-bold mr-2\">Form/Process Name:</span>{formName}</span>\n    </div>\n    <div className=\"submission-tracking\">\n      <Form\n        submission={ routeTrack}\n        src={FormsConfig.getSrc('routeTrack')}\n        options={{readOnly: true, hide: {submit:true}, showRoutesIds}}\n        formReady={()=> {setFormReady(true)}}\n      />\n      {!isReady && <Loading/>}\n    </div>\n  </div>\n  )\n}\n\nexport default TrackSubmissionForm;\n","import React, {useState} from 'react';\nimport { TrackSubmissionForm } from '.';\n\nconst RoutedSubmissionAlert = (props) => {\n  const {\n    routedSubmission = {},\n    message\n  } = props;\n\n  const [showRoute, setShowRoute] = useState(false);\n\n  return (\n    <div className=\"alert alert-primary\" role=\"alert\">\n      {message}\n      <div className=\"mt-2 font-italic\">\n        <input className=\"mr-2\" type=\"checkbox\" id=\"track\" name=\"scales\"\n          checked={showRoute}\n          onChange={() => setShowRoute(!showRoute)}\n        />\n      <label htmlFor=\"track\">Show Route Details</label>\n      </div>\n      {showRoute && <TrackSubmissionForm routeTrack={routedSubmission}/>}\n    </div>\n  )\n}\n\nexport default RoutedSubmissionAlert;\n","import React from 'react';\nimport _ from 'lodash';\nimport { Redirect } from 'react-router-dom';\n\nconst CurrentSubmissionRedirect = ({submissionId, formId, submission}) => {\n  const routed = _.get(submission, 'metadata.routed', '');\n\n  return routed ?  null :  <Redirect to={`/form/${formId}/submission/${submissionId}`}/>;\n}\n\nexport default CurrentSubmissionRedirect;\n","import React from 'react';\nimport { Modal, Confirm } from '../../../common';\n\nconst ModalConfirmation = (props) => {\n  const {\n    onNo =()=>{},\n    onYes =()=>{},\n    onModalCloseClick = () => {},\n    message\n  } = props;\n\n  return (\n    <Modal width={'70%'} height={'30%'} contentStyles={{top: '30%'}}>\n    <div className=\"modal-content font-weight-light rounded\" >\n      <button type=\"button \" className=\"close text-right mr-2\" onClick={onModalCloseClick} data-dismiss=\"modal\" aria-label=\"Close\">\n        <span  aria-hidden=\"true\">&times;</span>\n      </button>\n      <div className=\"modal-body\">\n        <Confirm\n          message={message}\n          wrapperStyles={{margin: '1rem 2rem'}}\n          onYes={onYes}\n          onNo={onNo}\n        />\n      </div>\n    </div>\n  </Modal>\n  )\n}\n\nexport default ModalConfirmation;\n","import React from 'react';\nimport {Link, useParams } from 'react-router-dom'\n\nconst ArchivedSubmissionAlert = () => {\n  const {formId} = useParams();\n\n  return (\n    <div className=\"alert alert-warning \" role=\"alert\">\n      <span className=\"text-uppercase font-weight-bold\">Archived record. </span>If you want to continue any operations with this record, you need to restore it in the <Link to={`/form/${formId}/archived`}>Archived tab</Link> .\n    </div>\n  )\n};\n\nexport default ArchivedSubmissionAlert;\n","import React from 'react';\nimport _ from 'lodash';\nimport * as Utils from '../../../utils';\n\nconst ProcessHeader = (props) => {\n  const {\n    form,\n    submission, \n    children\n  } = props;\n  \n  const currentStage = Utils.getCurrentStageSettings(submission, form);\n\n  return (\n    <div className=\"alert alert-primary rounded my-3 pt-0 border border-primary row\">\n      <div className=\"col-10\">\n    <div className=\"row  mt-2\">\n      <div className=\"col-5\">\n        <span className=\"mr-2 font-weight-bold\">Process Name:</span>\n        <span>{_.get(form, 'name', '')}</span>\n      </div>\n      <div className=\"col-7\">\n        <span className=\"mr-2 font-weight-bold\">Process Title:</span>\n        <span>{_.get(submission, 'metadata.submissionName', '')}</span>\n      </div>\n      \n    </div>\n    <div className=\"row mt-2\">\n      <div className=\"col-5\">\n        <span className=\"mr-2 font-weight-bold\">Current Stage:</span>\n        <span>{currentStage.title}</span>\n      </div>\n      <div className=\"col-7\">\n        <span className=\"mr-2 font-weight-bold\">Stage Description:</span>\n        <span>{currentStage.description || '-'}</span>\n      </div>\n    </div>\n    </div>\n    <div className=\"col-2 mt-2 d-flex justify-content-end align-items-center\">{children}</div>\n    </div>\n  );\n}\n\n\n\nexport default ProcessHeader;\n","import React from 'react';\nimport { Formio } from '@formio/react';\nimport _ from 'lodash';\nimport { FormsConfig } from '../../../config';\nimport NativePromise from 'native-promise-only';\nimport * as Utils from '../../../utils'\n\nconst SubmissionContext = React.createContext();\n\nconst initialState = {\n  formId: '',\n  id: '',\n  isActive: false,\n  lastUpdated: 0,\n  submission: {},\n  url: '',\n  error: '',\n  deletingSubmission: false,\n  savingSubmission: false,\n  route: false,\n  routeSettings: {},\n  routeTrack: {},\n  routing: false,\n  processInitPage: null,\n};\n\nconst submissionReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_INIT_PAGE':\n      return {\n        ...state,\n        processInitPage: action.initPage\n      };\n    case 'SUBMISSION_CLEAR_ERROR':\n      return {\n        ...state,\n        error: '',\n      };\n    case 'SUBMISSION_REQUEST':\n      return {\n        ...state,\n        formId: action.formId,\n        id: action.id,\n        url: action.url,\n        submission: {},\n        isActive: true,\n      };\n    case 'SUBMISSION_SAVE':\n      return {\n        ...state,\n        formId: action.formId,\n        id: action.id,\n        url: action.url || state.url,\n        submission: {},\n        isActive: false,\n        savingSubmission: true\n      };\n    case 'SUBMISSION_SUCCESS':\n      return {\n        ...state,\n        id: action.submission._id,\n        submission: action.submission,\n        isActive: false,\n        error: '',\n        savingSubmission: false,\n      };\n    case 'SUBMISSION_FAILURE':\n      return {\n        ...state,\n        isActive: false,\n        deletingSubmission:false,\n        savingSubmission: false,\n        error: action.error,\n      };\n    case 'START_DELETE_SUBMISSION':\n      return {\n        ...state,\n        deletingSubmission: true,\n      };\n    case 'SUBMISSION_ROUTE':\n      return {\n        ...state,\n        routing: true,\n      };\n    case 'SUBMISSION_AND_TRACK_REQUEST':\n      return {\n        ...state,\n        formId: action.formId,\n        id: action.id,\n        url: action.url,\n        submission: {},\n        routeTrack: {},\n        routing: false,\n        isActive: true,\n      };\n    case 'SUBMISSION_AND_TRACK_SUCCESS':\n      return {\n        ...state,\n        id: action.submission._id,\n        submission: action.submission,\n        isActive: false,\n        routing: false,\n        error: '',\n        savingSubmission: false,\n        routeTrack: action.routeTrack\n      };\n    case 'CANCEL_ROUTE_REQUEST':\n      return {\n        ...state,\n        submission: {},\n        routeTrack: {},\n        isActive: true,\n        error: ''\n      };\n    case 'SUBMISSION_AND_TRACK_FAILURE':\n      return {\n        ...state,\n        isActive: false,\n        deletingSubmission:false,\n        savingSubmission: false,\n        error: action.error,\n        routing: false,\n      };\n    case 'SUBMISSION_TRACK_SAVE':\n      return {\n        ...state,\n        isActive: true,\n      };\n    case 'SUBMISSION_TRACK_SUCCESS':\n      return {\n        ...state,\n        routeTrack: action.submissionTrack,\n        isActive: false,\n        error: '',\n      };\n    case 'SUBMISSION_TRACK_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n        isActive: false,\n      };\n    case 'ARCHIVE_INCOMING_START':\n      return {\n        ...state,\n        isActive: true,\n        error: '',\n      };\n    case 'ROUTE_SETTINGS_SET':\n      return {\n        ...state,\n        route: true,\n        routeSettings: action.routeSettings,\n      };\n      case 'ROUTE_SETTINGS_RESET':\n        return {\n          ...state,\n          route: false,\n          routeSettings: {},\n        };\n      // case 'ARCHIVE_INCOMING_SUCCESS':\n      //   return {\n      //     ...state,\n      //     routeTrack: {},\n      //     submission: {},\n      //     isActive: false,\n      //     error: '',\n      //   };\n      // case 'ARCHIVE_INCOMING_FAIL':\n      //   return {\n      //     ...state,\n      //     isActive: false,\n      //     error: '',\n      //   };\n    case 'SUBMISSION_RESET':\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport const setInitPage = (initPage) => ({\n  type: 'SET_INIT_PAGE',\n  initPage,\n});\n\nexport function SubmissionProvider(props) {\n  const [state, dispatch] = React.useReducer(submissionReducer, initialState);\n  const value = React.useMemo(() => [state, dispatch], [state, dispatch]);\n\n  return <SubmissionContext.Provider value={value} {...props} />;\n}\n\nexport function useSubmission() {\n  const context = React.useContext(SubmissionContext);\n  if (!context) {\n    throw new Error('useSubmission must be used within a SubmissionProvider');\n  }\n\n  const [state, dispatch] = context;\n\n  return {\n    state,\n    dispatch\n  }\n}\n\nexport const clearSubmissionError = () => ({\n  type: 'SUBMISSION_CLEAR_ERROR',\n});\n\nconst requestSubmission = (id, formId,  url) => ({\n  type: 'SUBMISSION_REQUEST',\n  id,\n  formId,\n  url,\n});\n\nconst sendSubmission = (data) => ({\n  type: 'SUBMISSION_SAVE',\n});\n\nconst receiveSubmission = (submission, url) => ({\n  type: 'SUBMISSION_SUCCESS',\n  submission,\n  url,\n});\n\nconst failSubmission = (error) => ({\n  type: 'SUBMISSION_FAILURE',\n  error,\n});\n\nconst startDeletingSubmission = () => ({\n  type: 'START_DELETE_SUBMISSION',\n});\n\nexport const resetSubmission = () => ({\n  type: 'SUBMISSION_RESET',\n});\n\nconst startRouteSubmission = (data) => ({\n  type: 'SUBMISSION_ROUTE',\n});\n\nconst cancelRouteRequest = () => ({\n  type: 'CANCEL_ROUTE_REQUEST',\n});\n\nconst requestSubmissionAndRouteTrack = (id, formId,  url) => ({\n  type: 'SUBMISSION_AND_TRACK_REQUEST',\n  id,\n  formId,\n  url,\n});\n\nconst receiveSubmissionAndRouteTrack = (submission, routeTrack, url) => ({\n  type: 'SUBMISSION_AND_TRACK_SUCCESS',\n  submission,\n  routeTrack,\n  url,\n});\n\nconst failSubmissionAndRouteTrack = (error) => ({\n  type: 'SUBMISSION_AND_TRACK_FAILURE',\n  error,\n});\n\nconst sendSubmissionTrack = (data) => ({\n  type: 'SUBMISSION_TRACK_SAVE',\n});\n\nconst receiveSubmissionTrack = (submissionTrack) => ({\n  type: 'SUBMISSION_TRACK_SUCCESS',\n  submissionTrack,\n});\n\nconst failSubmissionTrack = (error) => ({\n  type: 'SUBMISSION_TRACK_FAILURE',\n  error,\n});\n\nconst startArchiveIncomingSubmission = () =>( {\n type: 'ARCHIVE_INCOMING_START'\n});\n\nconst addRouteSettings = (routeSettings) => ({\n  type: 'ROUTE_SETTINGS_SET',\n  routeSettings\n});\n\nconst removeRouteSettings = () => ({\n  type: 'ROUTE_SETTINGS_RESET',\n});\n// const archiveIncomingSubmissionSuccess = () =>( {\n//   type:  'ARCHIVE_INCOMING_SUCCESS'\n//  });\n\n// const failArchiveIncomingSubmission = (error)  =>( {\n//   type: 'ARCHIVE_INCOMING_FAIL',\n//   error\n//  });\nexport const resetRouteSettings = (dispatch, settings, done = () => {}) => {\n  dispatch(removeRouteSettings(settings))\n};\n\nexport const setRouteSettings = (dispatch, settings, done = () => {}) => {\n  dispatch(addRouteSettings(settings))\n};\n\nexport const getSubmission = (dispatch, id, formId, formName, done = () => {}) => {\n  const formPath = `/${formId ? `form/${formId}` : `${formName}`}`;\n  const url = `${Formio.getProjectUrl()}${formPath}/submission${id ? `/${id}` : ''}`;\n\n  dispatch(requestSubmission(id, formId, url));\n\n  Utils.getSubmission(id, formId, formName)\n    .then((result) => {\n      dispatch(receiveSubmission(result));\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failSubmission(error));\n      done(error);\n    });\n};\n\nexport const saveSubmission = (dispatch, data, formId, formName, done = () => {}) => {\n  dispatch(sendSubmission(data));\n\n  return Utils.saveSubmission(data, formId, formName)\n    .then((result) => {\n      const formPath = `/${formId ? `form/${formId}` : `${formName}`}`;\n      const url = `${Formio.getProjectUrl()}${formPath}/submission/${result._id}`;\n\n      dispatch(receiveSubmission(result, url));\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failSubmission(error));\n      done(error);\n    });\n};\n\nexport const deleteSubmission = (dispatch, id, formId, formName, done = () => {}) => {\n  dispatch(startDeletingSubmission());\n\n  return Utils.deleteSubmission(id, formId, formName)\n    .then(() => {\n      dispatch(resetSubmission());\n      done(null, true);\n    })\n    .catch((error) => {\n      dispatch(failSubmission(error));\n      done(error);\n    });\n};\n\nexport const routeSubmission = (dispatch, submission, routeData, routeTrack, form, prevStageId, done=()=>{}) => {\n  const trackInfo = Utils.getUpdatedRouteTrackData(submission, routeData, routeTrack, form, prevStageId);\n  Utils.updateRoutedSubmissionAccess(submission, trackInfo, form);\n\n  const routed = !_.isEmpty(routeTrack);\n  const routedSubmissionTrack = routed ? {...routeTrack, data: {...routeTrack.data, ...trackInfo}} : { data: trackInfo, state: 'submitted'};\n\n  dispatch(startRouteSubmission())\n\n  NativePromise.all([\n    Utils.saveSubmission(routedSubmissionTrack, null, FormsConfig.routeTrack),\n    Utils.saveSubmission(submission, form._id)\n  ])\n    .then(([submissionRouteTrack, routedSubmission]) => {\n      dispatch(receiveSubmissionAndRouteTrack(routedSubmission,submissionRouteTrack))\n      done(null);\n    })\n    .catch((error) => {\n      dispatch(failSubmissionAndRouteTrack(error))\n      done(error);\n    });\n}\n\nexport const checkRouted = (dispatch, submission) => {\n  if (_.get(submission, 'metadata.routed', false)) {\n    dispatch(failSubmission('This submission has been routed and is not available in Current/Archived/Deleted Tabs.'));\n  }\n}\n\nexport const getSubmissionAndRouteTrack = (dispatch, id, formId, formName, done = () => {}) => {\n  const formPath = `/${formId ? `form/${formId}` : `${formName}`}`;\n  const submissionUrl = `${Formio.getProjectUrl()}${formPath}/submission${id ? `/${id}` : ''}`;\n\n  dispatch(requestSubmissionAndRouteTrack(id, formId, submissionUrl));\n\n  NativePromise.all([\n    Utils.getSubmission(id, formId, formName),\n    Utils.getSubmissions({query: {'data.routedSubmission.id': id}},  {}, null, FormsConfig.routeTrack)\n  ])\n    .then(([submission, routeTrackArr]) => {\n      const routeTrack = routeTrackArr[0] || {};\n      dispatch(receiveSubmissionAndRouteTrack(submission, routeTrack ));\n      done(null, {submission, routeTrack});\n    })\n    .catch((error) => {\n      dispatch(failSubmissionAndRouteTrack(error));\n      done(error);\n    });\n};\n\nexport const getRouteTrack = (dispatch, id, done = () => {}) => {\n  dispatch(sendSubmissionTrack());\n    Utils.getSubmissions({query: {'data.routedSubmission.id': id}},  {}, null, FormsConfig.routeTrack)\n    .then((routeTrackArr) => {\n      const routeTrack = routeTrackArr[0] || {};\n      dispatch(receiveSubmissionTrack(routeTrack));\n      done(null,routeTrack);\n    })\n    .catch((error) => {\n      dispatch(failSubmissionTrack(error));\n      done(error);\n    });\n};\n\nexport const saveSubmissionTrack = (dispatch, submissionTrack, done = () => {}) => {\n  Utils.saveSubmission(submissionTrack, null, FormsConfig.routeTrack)\n    .then((result) => {\n      dispatch(receiveSubmissionTrack(result));\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failSubmissionTrack(error));\n      done(error);\n    });\n};\n\nconst addArchiveRecordToRouteTrack = (routeTrack, user) => {\n  const routeTrackData = routeTrack.data || {}\n\n  _.set(routeTrackData, 'routedSubmission.archived', true);\n  const trackRecord = {\n    archived: true,\n    archiveAction: [{\n      archiveActionUser: [user],\n      archived: true,\n      date: new Date().toISOString()\n    }]\n  }\n  _.chain(routeTrackData).get('tracking').push(trackRecord).value()\n}\n\nexport const archiveIncomingSubmission = (dispatch, submission, routeTrack, formId, user, done = () => {}) => {\n  _.set(submission, 'metadata.archived', true);\n  addArchiveRecordToRouteTrack(routeTrack, user);\n\n  const submissionId = submission._id || '';\n  const routeTrackId = routeTrack._id || '';\n\n  dispatch(startArchiveIncomingSubmission());\n\n  const routeTrackUrl = `${Formio.getProjectUrl()}/${FormsConfig.routeTrack}/submission${routeTrackId ? `/${routeTrackId}` : ''}`;\n  const submissionUrl = `${Formio.getProjectUrl()}/form/${formId}/submission${submissionId ? `/${submissionId}` : ''}`;\n\n  NativePromise.all([\n    new Formio(routeTrackUrl).saveSubmission(routeTrack),\n    new Formio(submissionUrl).saveSubmission(submission),\n  ])\n    .then(([track, archivedSubmission]) => {\n      dispatch(receiveSubmissionAndRouteTrack(track, archiveIncomingSubmission));\n      done(null);\n    })\n    .catch((error) => {\n      dispatch(failSubmissionAndRouteTrack(error))\n      done(error);\n    });\n}\n\nexport const cancelLastRoute = (dispatch, routeTrack, routedSubmission, form, done=()=>{}) => {\n  const formId = form._id;\n  const tracks = _.get(routeTrack, 'data.tracking', []);\n  const lastTrack = _.last(tracks);\n  const oneRoute = tracks.length === 1;\n  const isFormProcess = Utils.isProcess(form);\n\n  dispatch(cancelRouteRequest());\n\n  let cancelRoutePromises = [];\n\n  if (oneRoute) {\n    Utils.unsetSubmissionRouted(routeSubmission);\n    Utils.cleanSubmissionAccess(routedSubmission);\n    Utils.setSubmissionOwner(routedSubmission, _.get(routeTrack, 'data.routeInitiators[0]'));\n\n    if (isFormProcess) {\n      Utils.setProcessFormsSubmissionOwner(form, routedSubmission, _.get(routeTrack, 'data.routeInitiators[0]'), true);\n      Utils.setProcessSubmissionFirstStage(routedSubmission, form);\n    }\n\n    cancelRoutePromises = [\n      Utils.saveSubmission(routedSubmission, formId),\n      Utils.deleteSubmission(routeTrack._id, null, FormsConfig.routeTrack),\n      Utils.deleteSubmission(lastTrack.routeId, null, FormsConfig.route),\n    ];\n  }\n  else {\n    Utils.cancelLastAndRestorePrevRoute(routeTrack);\n    Utils.updateRoutedSubmissionAccess(routedSubmission, routeTrack.data, form);\n\n    if (isFormProcess) {\n      const updatedTracks = _.get(routeTrack, 'data.tracking', []);\n      const currentLastTrack = _.last(updatedTracks);\n      Utils.setProcessSubmissionStage(routedSubmission, currentLastTrack.stageId);\n    }\n    cancelRoutePromises = [\n      Utils.saveSubmission(routedSubmission, formId),\n      Utils.saveSubmission(routeTrack, null, FormsConfig.routeTrack),\n      Utils.deleteSubmission(lastTrack.routeId, null, FormsConfig.route),\n    ];\n  }\n\n  NativePromise.all(cancelRoutePromises)\n    .then(([submission, routeTrack, route])=> {\n      dispatch(receiveSubmissionAndRouteTrack(submission, oneRoute ? {} : routeTrack));\n      done();\n    })\n    .catch((err) => {\n      dispatch(failSubmissionAndRouteTrack(err));\n      done(err);\n    });\n}\n","import React from 'react';\n\nconst AlertsContext = React.createContext();\n\nconst initialState = [];\n\nexport function AlertsProvider(props) {\n  const [alerts, setAlerts] = React.useState(initialState);\n  const value = React.useMemo(() => [alerts, setAlerts], [alerts]);\n\n  return <AlertsContext.Provider value={value} {...props} />;\n}\n\nexport function useAlerts() {\n  const context = React.useContext(AlertsContext);\n\n  if (!context) {\n    throw new Error('useAlerts must be used within a AlertsProvider');\n  }\n\n  const [alerts, setAlerts] = context;\n\n  const removeAlert = (index) => {\n    const newAlerts = [...alerts];\n    newAlerts.splice(index, 1);\n    setAlerts(newAlerts);\n  };\n\n  const removeAfter = (index, timeout) => {\n    setTimeout(() => {\n      removeAlert(index);\n    }, timeout);\n  };\n\n  const addAlert = (alert, remove = true, timeout = 2000) => {\n    const index = alerts.length;\n    setAlerts([...alerts, { ...alert, key: index }]);\n\n    if (remove) {\n      removeAfter(index, timeout);\n    }\n\n    return index;\n  };\n\n  return {\n    alerts,\n    setAlerts,\n    addAlert,\n    removeAlert,\n    removeAfter,\n  };\n}\n\n","import React from 'react';\nimport { useAlerts } from './alertsContext';\n\nconst DefaultAlert = ({ type, content }) => (\n  <div className={`mr-2 shadow rounded alert alert-${type}`}>{content}</div>\n);\n\nexport const Alerts = (props) => {\n  const { Alert = DefaultAlert } = props;\n  const { alerts } = useAlerts(); \n\n  const style = {\n    position: 'absolute',\n    zIndex: 1000,\n    top: 0,\n    right: '5rem',\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: '10px',\n  };\n\n  return (\n    <div style={style}>\n      {alerts.map((alert) => <Alert {...alert} key={alert.key}/>)}\n    </div>\n  )\n};\n","import React, {useRef} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Form, Errors } from '@formio/react';\nimport _ from 'lodash';\n\nimport { Loading } from '../../../../common';\nimport { useSubmission, saveSubmission } from '../submissionContext';\nimport { useSubmissions, resetSubmissions } from '../submissionsContext';\nimport { useForm } from '../../form/formContext';\nimport { useAlerts } from '../../../alerts';\nimport { SubmissionName } from '../../partials';\nimport { useAuth } from '../../../auth';\n\nconst SubmissionView = (props) => {\n  const { hideComponents, readOnly, formName, pathStart, options: propsOptions, noRedirectOnSubmit, disableSubmissionName} = props;\n  const history = useHistory();\n  const { formId } = useParams();\n  const {addAlert} = useAlerts();\n  const {state: authState } = useAuth();\n  const { userInfo, user } = authState;\n\n  const requiredName = !!formId;\n\n  const {state: formState} = useForm();\n  const {isActive: isFormActive, error: formError, form, autoName} = formState;\n \n  const {dispatch: dispatchSubmissionsAction} = useSubmissions();\n  const {state: submissionState, dispatch: dispatchSubmissionAction} = useSubmission();\n  const {url, submission, error: submissionError, isActive: isSubmissionActive} = submissionState;\n\n  const options = { template: 'bootstrap', iconset: 'fa', readOnly: !!readOnly, ...formState.options, ...propsOptions, userId: user._id, userProfileId: userInfo._id};\n\n  const nameForm = useRef();\n  const submitBtn = useRef();\n\n  const onSubmit = (submission) => {\n    saveSubmission(dispatchSubmissionAction, submission, formId, formName, (err, submission) => {\n      if (!err) {\n        addAlert({ type: 'success', content: 'Submission is successfully updated' });\n        dispatchSubmissionsAction(resetSubmissions('submission'));\n        if (!noRedirectOnSubmit) {\n          history.push(`${formId ? `/form/${formId}/submission` : `${pathStart || '/' + formName}`}/${submission._id}`);\n        }\n      }\n    });\n  }\n\n  const isLoading = (isFormActive || isSubmissionActive || _.isEmpty(submission) || _.isEmpty(form)) && !submissionError;\n\n  if (isLoading ) {\n    return <Loading />;\n  }\n  // const Label = () => {\n  //   return formId ? \n  //   <h3>{label || `View Submission`}</h3>\n  //     : ''\n  // }\n\n  return (\n    <div>\n      {/* <Label/>  */}\n      <Errors errors={[formError, submissionError]} />\n      {requiredName && <SubmissionName\n        name={_.get(submission, 'metadata.submissionName', '')}\n        onFormReady={(form) => {nameForm.current = form;}}\n        readOnly={readOnly || disableSubmissionName || autoName}\n        onNameChange={(name) => {\n          if (name && requiredName && submitBtn.current && submitBtn.current.hasError && !submitBtn.current?.root?.errors.length) {\n            submitBtn.current.triggerChange();\n          }\n        }}\n      />}\n      <Form\n        form={form}\n        submission={submission}\n        url={url}\n        hideComponents={hideComponents}\n        onSubmit={onSubmit}\n        formReady={(form)=> {\n          submitBtn.current = form.getComponent('submit');\n        }}\n        options={{...options, hooks: {\n          customValidation: function (submission, next) {\n            if(!requiredName) {\n              next();\n            }\n\n            const submNameForm= nameForm.current;\n            const submissionName = _.get(submNameForm, 'submission.data.submissionName', '');\n\n            if (submissionName) {\n              _.set(submission, 'metadata.submissionName', submissionName);\n              next();\n            } \n            else {\n              submNameForm.getComponent('submissionName').pristine = false;\n              submNameForm.getComponent('submissionName').checkValidity();\n              submNameForm.getComponent('submissionName').focus();\n              \n              next('Please add name for this submission.');\n            }\n          }\n        }}}\n      />\n    </div>\n  );\n};\n\nexport default SubmissionView;\n","import React from 'react';\nimport { Formio } from '@formio/react';\nimport { FormsConfig } from '../../../config';\nimport * as Utils from '../../../utils';\n\nconst UserContext = React.createContext();\n\nconst initialState = {\n  addingUserToEveryoneStatus: {},\n  addingUserToEveryoneError: '',\n  isCsvUserGroupsLoading: false,\n  isCsvUserGroupsFetched: false,\n  allowCsv: false,\n};\n\nexport const everyoneGroup = 'Everyone';\nconst everyoneGroupDescription = 'All Users Group';\n\nconst addUserToEveryoneProgress ={\n  'gettingGroup':{\n    progress: 30,\n    message: 'Checking/Creating Everyone Group'\n  },\n  'savingUserInGroup':{\n    progress: 70,\n    message: 'Saving User In Everyone Group'\n  },\n  'finishing':{\n    progress: 99,\n    message: 'Finishing'\n  },\n};\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case 'USER_RESET':\n      return initialState;\n    case 'SET_ADD_USER_STATUS':\n      return {\n        ...state,\n        addingUserToEveryoneStatus: addUserToEveryoneProgress[`${action.status}`]\n      };\n    case 'ADD_USER_FAILURE':\n      return {\n        ...state,\n        addingUserToEveryoneStatus: {},\n        addingUserToEveryoneError:  action.error\n      };\n    case 'USER_GROUPS_REQUEST':\n      return {\n        ...state,\n        isCsvUserGroupsLoading: true,\n      }\n    case 'CSV_USER_GROUPS_SUCCESS':\n      return {\n        ...state,\n        isCsvUserGroupsLoading: false,\n        isCsvUserGroupsFetched: true,\n        allowCsv: !!action.userGroups.length,\n      }\n    case 'USER_GROUPS_FAIL':\n      return {\n        ...state,\n        isCsvUserGroupsLoading: false,\n        isCsvUserGroupsFetched: true,\n      }\n    default:\n      return state;\n  }\n};\n\nexport function UserProvider(props) {\n  const [state, dispatch] = React.useReducer(userReducer, initialState);\n  const value = React.useMemo(() => [state, dispatch], [state, dispatch]);\n\n  return <UserContext.Provider value={value} {...props}/>;\n}\n\nexport function useUser() {\n  const context = React.useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n\n  const [state, dispatch] = context;\n\n  return {\n    state,\n    dispatch\n  }\n}\n\nexport const resetUser = () => ({\n  type: 'USER_RESET'\n\n});\n\nconst failAddingUser = (error) => ({\n  type: 'ADD_USER_FAILURE',\n  error,\n});\n\nconst setAddingUserStatus = (status) => ({\n  type: 'SET_ADD_USER_STATUS',\n  status\n});\n\nconst startUserGroupsLoading = () => ({\n  type: 'USER_GROUPS_REQUEST',\n});\n\nconst receiveCsvUserGroups = (userGroups) => ({\n  type: 'CSV_USER_GROUPS_SUCCESS',\n  userGroups,\n});\n\nconst failGettingUserGroups = (error) => ({\n  type: 'USER_GROUPS_FAIL',\n  error,\n});\n\nconst createEveryoneGroup = (formio, dispatch) => {\n  return formio.saveSubmission({\n    data: {\n      groupName: everyoneGroup,\n      description: everyoneGroupDescription\n    },\n    state: 'submitted'\n  })\n    .then((result) => {\n      return result;\n    });\n};\n\nconst getEveryoneGroup = (dispatch, done = () => {}) => {\n  const url = `${Formio.getProjectUrl()}/${FormsConfig.usersGroup}/submission`;\n  const formio = new Formio(url);\n\n  return formio.loadSubmissions({params: {'data.groupName': everyoneGroup}})\n    .then((result) => {\n      const everyoneGroup = result[0];\n      return everyoneGroup\n        ? everyoneGroup\n        : createEveryoneGroup(formio, dispatch);\n    })\n};\n\nconst saveUserInGroup = (dispatch, user, group) => {\n  const url = `${Formio.getProjectUrl()}/${FormsConfig.userGroup}/submission`;\n  const formio = new Formio(url);\n  return formio.saveSubmission({\n    data: {\n      group,\n      user\n    },\n    state: 'submitted'\n  })\n    .then((result) => {\n      return result;\n    });\n};\n\nexport const addUserToEveryoneGroup = (dispatch, user, done = () => {}) => {\n  dispatch(setAddingUserStatus('gettingGroup'));\n\n  getEveryoneGroup(dispatch)\n    .then(everyoneGroup => {\n      dispatch(setAddingUserStatus('savingUserInGroup'));\n      return saveUserInGroup(dispatch, user, everyoneGroup);\n    })\n    .then(userGroup => {\n      dispatch(setAddingUserStatus('finishing'));\n      dispatch(resetUser());\n      done(null, userGroup);\n    })\n    .catch(error => {\n      dispatch(failAddingUser(error))\n      done(error);\n    });\n};\n\nexport const checkCsvAccess = (dispatch, { limit, query, select, sort }, params = {}, formId, formName, done = () => {}) => {\n  dispatch(startUserGroupsLoading());\n\n  return Utils.getSubmissions({ limit, query, select, sort }, params, formId, formName)\n    .then((result) => {\n      dispatch(receiveCsvUserGroups(result));\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failGettingUserGroups(error));\n      done(error);\n    });\n}\n","import React, { useEffect , useState, useCallback} from 'react';\nimport { useParams } from 'react-router-dom';\nimport {Form} from '@formio/react';\nimport _ from 'lodash';\n\nimport { FormsConfig} from '../../../../config' ;\nimport { useForm } from '../../form';\nimport { useSubmission, routeSubmission, resetRouteSettings } from '..';\nimport { setBeforeLogoutAction, useAuth } from '../../../auth';\nimport { useHistory } from 'react-router-dom';\nimport { Loading } from '../../../../common';\nimport { everyoneGroup } from '../../../users/user/userContext';\nimport { useAlerts } from '../../../alerts';\nimport * as Utils from '../../../../utils';\nimport { getProcessSubmissionStage, hasAdminRights, setProcessSubmissionStage, unsetSoleOwnership } from '../../../../utils';\n\nconst SubmissionRoute = (props) => {\n  const { state: submissionState, dispatch: dispatchSubmissionAction} = useSubmission();\n  const { state: formState} = useForm();\n  const {form, formFolder, isProcess} = formState;\n  const {submission, routeTrack, routeSettings, route, routing} = submissionState;\n  const { state: authState, dispatch: dispatchAuthAction} = useAuth();\n  const { beforeLogoutAction , is: role } = authState;\n  const isAdmin =  hasAdminRights(role);\n  const {formId, submissionId} = useParams();\n  const history = useHistory();\n  const { addAlert } = useAlerts();\n\n  const routedFormLink = `${window.location.origin}/form/${formId}/incoming/${submissionId}`\n  const [routeOptions, setOptions] = useState({routedFormLink });\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (routing) {\n      setLoading(true);\n    }\n  }, [routing]);\n\n  const hasEveryoneGroup = useCallback(() => {\n    const formUserGroups = _.get(formFolder,'data.folder.data.userGroups', [])\n    return _.some(formUserGroups, group => _.get(group, 'data.groupName', '') === everyoneGroup);\n  }, [formFolder]);\n\n  const getFormUserGroupsIds = useCallback(() => {\n    const {routeRecipients} = routeSettings;\n    let settingsGroups = [];\n    const groupRecipients = route && !_.every(routeRecipients, setting => _.get(setting, 'recipientType', '') === 'user');\n\n    const allGroups = groupRecipients\n      ? _.some(routeRecipients, setting => _.get(setting, 'recipientType', '') === 'user')\n      : true;\n\n    if (!allGroups || groupRecipients) {\n      settingsGroups = _.chain(routeRecipients)\n        .map((setting) => _.get(setting, 'group', ''))\n        .filter(group => !!group)\n        .uniq()\n        .value();\n    }\n\n    const formUserGroups =  _.get(formFolder,'data.folder.data.userGroups', []);\n\n    if (allGroups && !isProcess) {\n      return _.some(formUserGroups, group => _.get(group, 'data.groupName', '') === everyoneGroup)\n        ? ''\n        : _.chain(formUserGroups).map(group => group._id).join(',').value();\n    }\n    else  if (allGroups && isProcess) {\n      if(!groupRecipients && _.some(formUserGroups, group => _.get(group, 'data.groupName', '') === everyoneGroup)) {\n        return '';\n      }\n      else if(groupRecipients && _.some(formUserGroups, group => _.get(group, 'data.groupName', '') === everyoneGroup)) {\n        return _.chain(settingsGroups).join(',').value();\n      }\n      else {\n       return _.chain(formUserGroups).map(group => group._id).join(',').value();\n      }\n    }\n    else {\n      if (hasEveryoneGroup()) {\n        return _.chain(settingsGroups).join(',').value();\n      }\n      return _.chain(settingsGroups).filter(settingsGroup => _.some(formUserGroups, group => group._id ===settingsGroup)).join(',').value();\n    }\n  }, [formFolder, route, routeSettings, isProcess, hasEveryoneGroup]);\n\n  useEffect(()=> {\n    if (!isAdmin) {\n      setOptions({\n        readOnly: false,\n        routedForm: form, \n        standAlone: !isProcess,\n        userGroups: getFormUserGroupsIds(),\n        routedSubmission: submission,\n        user: authState.user, \n        routedFormLink,\n        routeSettings: {...routeSettings, everyoneGroup: hasEveryoneGroup()}, \n        isProcess,\n        currentStage: Utils.getCurrentStageSettings(submission, form).title,\n        nextStage: Utils.getStageSettings(_.get(routeSettings, 'routeStage', ''), form).title\n      });\n    }\n  }, [props, authState, isProcess, routedFormLink, form, submission, hasEveryoneGroup, isAdmin, formFolder,routeSettings, getFormUserGroupsIds])\n\n\n  const onRoute = (routeData)=> {\n    unsetSoleOwnership(submission);\n    \n    let prevStageId = null;\n\n    if (isProcess) {\n      prevStageId = getProcessSubmissionStage(submission);\n      const nextStage = _.get(routeSettings, 'routeStage', '');\n\n      if (nextStage) {\n        setProcessSubmissionStage(submission, nextStage);\n      }\n    }\n\n    routeSubmission(dispatchSubmissionAction, submission, routeData, routeTrack, form, prevStageId, (err) => {\n      if (!err) {\n        if (beforeLogoutAction) {\n          dispatchAuthAction(setBeforeLogoutAction(false));\n        }\n        addAlert({ type: 'success', content: 'Submission succesfully routed' });\n        history.push(`/form/${formId}/routed`);\n      }\n    })\n  }\n\n  if (isAdmin) {\n    return <div className=\"alert alert-warning \" role=\"alert\">\n      The Routing functionality is only available to users.\n    </div>\n  }\n\n  return (\n    <div>\n      {!routeOptions.user || loading\n      ? <Loading/> \n      : (<Form\n          src={FormsConfig.getSrc('route')}\n          options={routeOptions}\n          onSubmitDone={onRoute}\n          formReady={(form) => {\n            if (isProcess) {\n              form.on('backToProcess', () => {\n                resetRouteSettings(dispatchSubmissionAction);\n              });\n            }\n          }}\n        />)\n      }\n    </div>\n  );\n};\n\n\n\nexport default SubmissionRoute;\n\n\n","import React from 'react';\nimport { Formio } from '@formio/react';\n\nconst SubmissionConversionContext = React.createContext();\n\nconst initialState = {\n  url: '',\n  pdfUrl: '',\n  error: '',\n  isPdfUrlLoading: false,\n};\n\nconst submissionConversionReducer = (state, action) => {\n  switch (action.type) {\n    case 'PDF_URL_REQUEST':\n      return {\n        ...state,\n        isPdfUrlLoading: true,\n        url: action.url,\n        error: '',\n      };\n    case 'PDF_URL_SUCCESS':\n      return {\n        ...state,\n        isPdfUrlLoading: false,\n        pdfUrl: action.pdfUrl,\n        error: '',\n      };\n    case 'PDF_URL_FAIL':\n      return {\n        ...state,\n        isPdfUrlLoading: false,\n        error: action.error,\n      };\n    case 'STATE_RESET':\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport function SubmissionConversionProvider(props) {\n  const [state, dispatch] = React.useReducer(submissionConversionReducer, initialState);\n  const value = React.useMemo(() => [state, dispatch], [state, dispatch]);\n\n  return <SubmissionConversionContext.Provider value={value} {...props} />\n}\n\nexport function useSubmissionConversion() {\n  const context = React.useContext(SubmissionConversionContext);\n  if (!context) {\n    throw new Error(`useSubmissionConversion must be used within a SubmissionConversionProvider`);\n  }\n\n  const [state, dispatch] = context;\n\n  return {\n    state,\n    dispatch\n  };\n}\n\nconst pdfUrlRequest = (url) => ({\n  type: 'PDF_URL_REQUEST',\n  url\n});\n\nconst pdfUrlSuccess = (pdfUrl) => ({\n  type: 'PDF_URL_SUCCESS',\n  pdfUrl\n});\n\nconst pdfUrlFail = (error) => ({\n  type: 'PDF_URL_FAIL',\n  error\n});\n\nconst reset = () => ({\n  type: 'STATE_RESET',\n});\n\nexport const getPdfUrl = (dispatch, url, done =() => {}) => {\n  const formio = new Formio(url);\n\n  dispatch(pdfUrlRequest());\n\n  formio.getDownloadUrl()\n    .then(pdfUrl => {\n      dispatch(pdfUrlSuccess(pdfUrl));\n      done(pdfUrl);\n    })\n    .catch(err => {\n      dispatch(pdfUrlFail(err));\n      done(err);\n    });\n};\n\nexport const processUrl = (dispatch, submissionId, formId, formName = '') => {\n  const formPath = `/${formId ? `form/${formId}` : `${formName}`}`;\n  const url = `${Formio.getProjectUrl()}${formPath}/submission${submissionId ? `/${submissionId}` : ''}`;\n\n  getPdfUrl(dispatch, url);\n};\n\nexport const resetState = (dispatch) => {\n  dispatch(reset());\n}\n","import { useEffect } from 'react';\nimport _ from 'lodash';\n\nimport { useForm } from '../../form';\nimport { useAuth } from '../../../auth';\nimport { useSubmission } from '../../submission/submissionContext';\nimport { useSubmissionConversion, getPdfUrl } from '../../submission/submissionConversionContext';\nimport { Loading } from '../../../../common';\nimport { hasAdminRights } from '../../../../utils';\n\nconst SubmissionConvertButtons = () => {\n  const { state: submissionState } = useSubmission();\n  const { url } = submissionState;\n  const { state: formState } = useForm();\n  const { isProcess } = formState;\n  const forbidPdfDownload = _.get(formState, 'formFolder.data.folder.data.forbidPdfDownload');\n  const { state: authState } = useAuth();\n  const { is: role} = authState;\n  const isAdmin =  hasAdminRights(role);\n  const { state: submissionConversionState, dispatch: submissionConversionAction } = useSubmissionConversion();\n  const { isPdfUrlLoading, pdfUrl } = submissionConversionState;\n  const isPdfAllowed = isAdmin || !forbidPdfDownload;\n\n  useEffect(() => {\n    if (isPdfAllowed && url && !isProcess) {\n      getPdfUrl(submissionConversionAction, url);\n    }\n  }, [submissionConversionAction, url, isProcess, isPdfAllowed]);\n\n  if (isPdfUrlLoading) {\n    return <Loading style={{ width: '32px', height: '32px' }} />;\n  }\n\n  return (isPdfAllowed && pdfUrl)\n  ?  (<div className=\"d-flex justify-content-end\" role=\"group\" aria-label=\"Basic example\">\n      <a type=\"button\" href={pdfUrl} rel=\"noreferrer\"  target=\"_blank\" className=\"btn btn-info mr-2\">PDF</a>\n    </div>)\n  : null;\n};\n\nexport default SubmissionConvertButtons;\n","import React, { useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form, Errors } from '@formio/react';\nimport _ from 'lodash';\nimport { Utils } from 'formiojs';\n\nimport { Loading } from '../../../../common';\nimport { useSubmission, saveSubmission, setRouteSettings, setInitPage } from '../submissionContext';\nimport { useForm } from '../../form/formContext';\nimport { ProcessHeader } from '../../partials';\nimport SubmissionRoute from './SubmissionRoute';\nimport { FormsConfig } from '../../../../config';\nimport { useAuth } from '../../../auth';\nimport { formsStageId, hasAdminRights } from '../../../../utils';\nimport { useSubmissionConversion, processUrl, resetState } from '../submissionConversionContext';\nimport { SubmissionConvertButtons } from '../../convertButtons';\n\nconst ProcessSubmissionView = (props) => {\n  const { hideComponents, readOnly, formName, options: propsOptions,} = props;\n  const { formId } = useParams();\n  const processRef = useRef();\n  const processSupplementFormRef = useRef();\n  const {state: formState } = useForm();\n  const {state: authState } = useAuth();\n  const { user, userInfo, is: role } = authState;\n  const isAdmin = hasAdminRights(role);\n  const {isActive: isFormActive, error: formError, form, clonedForm} = formState;\n  const forbidPdfDownload = _.get(formState, 'formFolder.data.folder.data.forbidPdfDownload');\n\n  const {state: submissionState, dispatch: dispatchSubmissionAction} = useSubmission();\n  const {url, submission, error: submissionError, isActive: isSubmissionActive, route, processInitPage} = submissionState;\n  const {dispatch: dispatchProcessAction} = useSubmissionConversion();\n\n  const options = { template: 'bootstrap', iconset: 'fa', readOnly: !!readOnly, initPage: processInitPage,  ...formState.options, ...propsOptions, userId: user._id, userProfileId: userInfo._id, isProcess: true};\n\n  const onSubmit = (submission) => {\n    const processSupplement = processSupplementFormRef.current.submission;\n    _.set(submission, 'metadata.processSupplement', processSupplement);\n   \n    saveSubmission(dispatchSubmissionAction, submission, formId, formName);\n    dispatchSubmissionAction(setInitPage(processRef.current.page));\n  }\n\n  const isLoading = (isFormActive || isSubmissionActive || _.isEmpty(submission) || _.isEmpty(form)) && !submissionError;\n\n  const onSaveProcess = (event) => {\n    event.preventDefault();\n    processRef.current.emit('submitButton', { state: 'draft' });\n  };\n\n  const handlePageChange = (page) => {\n    if (!isAdmin && forbidPdfDownload) {\n      return;\n    }\n\n    if (page.component.stageId !== formsStageId) {\n      return resetState(dispatchProcessAction);\n    }\n\n    let formComponent;\n\n    Utils.eachComponent(page.components, (comp) => {\n      if(comp.component.type === 'form') {\n        formComponent = comp.component;\n      }\n    });\n\n    processUrl(dispatchProcessAction, submission.data[formComponent.key]._id, formComponent.form);\n  }\n\n  if (isLoading ) {\n    return <Loading />;\n  }\n\n  return (\n    <div>\n      <Errors errors={[formError, submissionError]} />\n      <ProcessHeader form={form} submission={submission}>\n        {!route && !readOnly && <button className=\"btn btn-primary\" onClick={onSaveProcess}>Save Process</button> }\n      </ProcessHeader>\n      <SubmissionConvertButtons />\n      {!route\n        ? <Form\n            form={clonedForm}\n            submission={submission}\n            url={url}\n            hideComponents={hideComponents}\n            onSubmit={onSubmit}\n            formReady={(form)=> {\n              processRef.current = form;\n              form.on('routeToStage', ({routeStage, routeRecipients}) => {\n                setRouteSettings(dispatchSubmissionAction, {routeStage, routeRecipients});\n              });\n              form.on('wizardPageSet', (page) => {\n                handlePageChange(page);\n              });\n            }}\n            options={options}\n          />\n        : <SubmissionRoute/>\n      }\n      <hr/>\n      {!route && <Form\n        submission={_.get(submission, 'metadata.processSupplement', {})}\n        src={FormsConfig.getSrc('processSupplement')}\n        formReady={(form) => {\n          processSupplementFormRef.current = form;\n        }}\n        options={{template: 'bootstrap', iconset: 'fa', noValidate: true, readOnly, user: user.data}}\n      />}\n    </div>\n  );\n};\n\nexport default ProcessSubmissionView;\n","import { NavLink, Route, Switch, useParams, Link } from 'react-router-dom'\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { Errors } from '@formio/react';\nimport _ from 'lodash';\n\n\nimport { useSubmission, getSubmission, checkRouted } from '../submissionContext';\nimport SubmissionView from './SubmissionView';\nimport SubmissionRoute from './SubmissionRoute';\nimport { useForm } from '../../form';\nimport { Loading, Title } from '../../../../common';\nimport { useAuth } from '../../../auth';\nimport { ArchivedSubmissionAlert } from '../../partials';\nimport { hasAdminRights, submissionStatuses } from '../../../../utils';\nimport ProcessSubmissionView from './ProcessSubmissionView';\nimport { SubmissionConvertButtons } from '../../convertButtons';\nimport { SubmissionConversionProvider } from '../submissionConversionContext';\n\n\nconst SubmissionPage = () => {\n  const { formId, submissionId } = useParams();\n  const { dispatch, state: submissionState } = useSubmission();\n  const { state: formState } = useForm();\n  const {isProcess} = formState;\n  const {isActive: isSubmissionActive, submission, error } = submissionState;\n  const {state: authState} = useAuth();\n  const { is: role} = authState;\n  const isAdmin = hasAdminRights(role);\n\n  useEffect(() => {\n    getSubmission(dispatch, submissionId, formId, null);\n  }, [dispatch, submissionId, formId]);\n\n  useEffect(() => {\n    if(!_.isEmpty(submission) && !isAdmin) {\n      checkRouted(dispatch, submission);\n    }\n  }, [dispatch, submission, isAdmin]);\n\n  const submissionStatus = _.get(submission, 'metadata.status', '');\n  const isArchived = useMemo(() => submissionStatus === submissionStatuses.archived, [submissionStatus]);\n  const isDeleted = useMemo(() => submissionStatus === submissionStatuses.deleted, [submissionStatus]);\n  const isDisabled = !isAdmin && (isArchived || isDeleted);\n\n  const View = useCallback(() => isProcess\n    ? <SubmissionConversionProvider><ProcessSubmissionView /></SubmissionConversionProvider>\n    : <SubmissionView readOnly={true} />, [isProcess]);\n  const Edit = useCallback(() => isProcess\n    ? <SubmissionConversionProvider><ProcessSubmissionView/></SubmissionConversionProvider>\n    : <SubmissionView readOnly={false} />, [isProcess]);\n\n  const backBtnPath = useCallback(() => {\n    return isArchived\n      ? `/form/${formId}/archived`\n      : isDeleted\n        ? `/form/${formId}/deleted`\n        : `/form/${formId}/submission`;\n  }, [isArchived, isDeleted, formId])\n\n  const navbarLinks = _.sortBy([\n    {icon: \"fa fa-chevron-left\", path: backBtnPath(), title: '', priority: 0 },\n    {icon: \"fa fa-eye\", path: `/form/${formId}/submission/${submissionId}`, condition:  !isProcess, title: 'View', priority: 10 },\n    {icon: \"fa fa-edit\", path: `/form/${formId}/submission/${submissionId}/edit`, condition: !isDisabled && !isProcess, title: 'Edit', priority: 20 },\n    {icon: \"fa fa-level-up\", path: `/form/${formId}/submission/${submissionId}/route`, condition: !isDisabled && !isProcess, notAdmin: true, title: 'Route', priority: 30 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs\">\n      {navbarLinks.map(link => {\n        if ((link.notAdmin && isAdmin )|| (_.isBoolean(link.condition) && !link.condition)) return null;\n        return (\n          <li className=\"nav-item\" key={link.title}>\n          <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true} to={link.path}  >\n            <i className={link.icon}></i> {link.title}\n          </NavLink>\n          </li>\n        )\n      })}\n    </ul>\n  );\n\n  if((isSubmissionActive || _.isEmpty(submission)) && !error) {\n    return <Loading/>;\n  }\n\n  const DeletedSubmissionAlert = () => {\n    return (\n      <div className=\"alert alert-warning \" role=\"alert\">\n        <span className=\"text-uppercase font-weight-bold\">Deleted record. </span>Go to the <Link to={`/form/${formId}/deleted`}>Deleted tab</Link> if you want to change the status of this record or delete it parmanently.\n      </div>\n    )\n  };\n\n  return (\n    <div>\n      <Title text={`${_.get(formState, 'form.title', '')} Submission`}/>\n      {isArchived && <ArchivedSubmissionAlert/>}\n      {isDeleted && <DeletedSubmissionAlert/>}\n      {!isProcess && <SubmissionConversionProvider><SubmissionConvertButtons/></SubmissionConversionProvider>}\n      <Navbar />\n      <Errors errors={[error]}/>\n      {!error && <Switch>\n        <Route\n          exact\n          path=\"/form/:formId/submission/:submissionId\"\n          component={View}\n        />\n        {!isDisabled && !isProcess && [<Route\n          path=\"/form/:formId/submission/:submissionId/edit\"\n          component={Edit}\n          key=\"edit\"\n        />,\n        <Route\n          path=\"/form/:formId/submission/:submissionId/route\"\n          component={SubmissionRoute}\n          key=\"route\"\n        />]}\n      </Switch>}\n    </div>\n  )\n};\n\nexport default SubmissionPage;\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom'\nimport { Errors, Form} from '@formio/react';\nimport { Loading, Title } from '../../../../common';\nimport { useForm, getGridForm} from '../../form';\nimport { useSubmissions, indexSubmissions } from '../submissionsContext';\nimport { FormsConfig } from '../../../../config';\nimport _ from 'lodash'\nimport {Utils} from 'formiojs';\n\nconst SubmissionsList = (props) => {\n  const {\n    FormError,\n    formName,\n    getViewPath,\n    createSubmissionPath,\n    addBtnTitle,\n    id,\n    submissionsRequestParams,\n    title,\n    hideAddBtn,\n    beforeViewSubmission =() => {}\n  } = props;\n  \n  const history = useHistory();\n  let formId  = useParams().formId || id;\n  \n  const defaultRequestParams = {\n    limit: 100000,\n    query: {},\n    select: '',\n    sort: '',\n    ...submissionsRequestParams\n  };\n  \n  const [requestParams, setRequestParams] = useState(defaultRequestParams);\n  const [paramsSet, setParamsSet] = useState(false);\n  const { state: submissionsState, dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const { state: formState, dispatch: dispatchFormEvent } = useForm();\n\n  useEffect(()=> {\n    setRequestParams((requestParams) => {\n      const updatedRequestParams = {...requestParams, ...submissionsRequestParams};\n      setParamsSet(true);\n\n      return (!_.isEqual(requestParams, updatedRequestParams)) \n        ? updatedRequestParams\n        : requestParams;\n    });\n  }, [submissionsRequestParams]);\n\n\n  const getFormattedForm = () => {\n    const form = formState.gridForm;\n\n    if (form.components){\n      const gridComponents = [];\n\n      Utils.eachComponent(formState.form.components, (comp) => {\n        if (comp.tableView) {\n          gridComponents.push({...comp, calculateValue: ''});\n        }\n      }, true);\n\n      form.components[0].components = gridComponents;\n    }\n    return form;\n  };\n\n  // const onAction = (submission, action) => {\n  //   switch(action) {\n  //     case 'view':\n  //     case 'row':\n  //       history.push(getViewPath ? getViewPath(formId, submission) : `/form/${formId}/submission/${submission._id}`);\n  //       break;\n  //     case 'edit':\n  //       history.push(getEditPath ? getEditPath(formId, submission) : `/form/${formId}/submission/${submission._id}/edit`);\n  //       break;\n  //     case 'delete':\n  //       history.push(getDeletePath ? getDeletePath(formId, submission) : `/form/${formId}/submission/${submission._id}/delete`);\n  //       break;\n  //     default:\n  //   }\n  // };\n\n  const getSubmissions = useCallback(\n    (page, query) => {\n      indexSubmissions(dispatchSubmissionsAction, page, requestParams, query, formId, formName)},\n    [dispatchSubmissionsAction, formId, formName, requestParams],\n  );\n\n  // const onPageSizeChanged = (pageSize) => {\n  //   setRequestParams({ ...requestParams, limit: +pageSize });\n  // };\n\n  useEffect(() => {\n    getSubmissions(1);\n  }, [getSubmissions, formId,requestParams]);\n\n  useEffect(() => {\n    getGridForm(dispatchFormEvent, '',FormsConfig.submissionsTable)\n  }, [dispatchFormEvent]);\n \n  const isLoading = formState.isActive || submissionsState.isActive || !paramsSet;\n\n  if (isLoading) {\n    return (<Loading />);\n  }\n\n  const gridSubmissions =  submissionsState.submissions.map(subm => subm.data);\n  const Grid = () =>  (\n    <Form\n      submission={ {data: {submissions:gridSubmissions}}}\n      form={getFormattedForm()}\n      options={{\n        noSubmit: true, \n        readOnly: true, \n        ...formState.options\n      }}\n      formReady={(form)=> {\n        form.on('row:click', (row, rowIndex)=> {\n          const submission = submissionsState.submissions[rowIndex];\n\n          if (submission) {\n            beforeViewSubmission();\n            history.push(getViewPath ? getViewPath(formId, submission) : `/form/${formId}/submission/${submission._id}`);\n          }\n        });\n      }}\n    />\n  );\n\n  const titleText = title || `Current Submissions - ${formState.form.title} Form `;\n\n  const AddBtn = () => {\n    return hideAddBtn\n      ? null\n      : (\n        <div className=\"d-flex justify-content-end mb-2\">\n          <Link className='btn btn-primary' to={createSubmissionPath || `/form/${formId || formState.id}`}>\n            <i className='glyphicon glyphicon-plus fa fa-plus' aria-hidden='true'></i>\n            &nbsp; {addBtnTitle || 'New ' + formState.form?.title}\n          </Link>\n        </div>\n      )\n  }\n  const MainContent = () =>  (\n    <div className='form-index'>\n      <Errors errors={[formState.error, submissionsState.error]} />\n      <Title text={titleText} />\n      <AddBtn/>\n      {!_.isEmpty(gridSubmissions) ? <Grid/> : 'No items to display.'}\n    </div>\n  );\n\n  if (formState.error && FormError) {\n    return(\n      <FormError error={formState.error}>\n        <MainContent />\n      </FormError>\n    );\n  }\n\n  return <MainContent />;\n}\n\nSubmissionsList.defaultProps = {\n  submissionsRequestParams: {}\n};\n\nexport default SubmissionsList;\n","import React from 'react';\nimport { Errors } from '@formio/react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSubmissions, resetSubmissions } from '../submissionsContext';\nimport _ from 'lodash';\n\nimport { Confirm } from '../../../../common';\nimport { useForm } from '../../form';\nimport { useSubmission, deleteSubmission } from '../submissionContext'\n\n\nconst SubmissionDelete = ({formName, paramName, deleteSubject, pathStart}) => {\n  const history = useHistory();\n  const { formId, submissionId} = useParams();\n  const eventId = useParams()[`${paramName}Id`];\n\n  const { state: submissionState, dispatch: dispatchSubmissionAction } = useSubmission();\n  const { dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const { state: formState } = useForm();\n\n  const performDelete = function() {\n    deleteSubmission(dispatchSubmissionAction, submissionId || eventId, formId, formName,  (err) => {\n      if (!err) {\n        dispatchSubmissionsAction(resetSubmissions());\n        history.push(`${formId ? `/form/${formId}/submission` : `${pathStart || '/' + formName}`}`);\n      }\n    });\n  }\n\n  const onYes = () => {\n    performDelete();  \n  };\n\n  const onNo = () => {\n    history.push(`${formId ? `/form/${formId}/submission` : `${pathStart || '/' + formName}`}`);\n  };\n\n  const subject = deleteSubject || `the submission '${_.get(submissionState, 'submission.metadata.submissionName', '') || submissionId || eventId}'`;\n  const message = `Are you sure you wish to delete ${subject}?`;\n\n  return (\n    <div>\n      <Errors errors={[submissionState.error, formState.error]} />\n      <Confirm\n        message={message}\n        onYes={onYes}\n        onNo={onNo}\n      />\n    </div>\n  )\n};\n\nexport default SubmissionDelete;\n","import React, { useEffect } from 'react';\nimport {  Errors } from '@formio/react';\nimport _ from 'lodash';\nimport { Loading } from '../../../common';\nimport { TrackSubmissionForm } from '.';\nimport { getRouteTrack, useSubmission } from '../submission';\nimport RouteTrackingModalWrapper from './RouteTrackingModalWrapper';\n\nconst RouteTrackingModalWithRequest = (props) => {\n  const {\n    trackingSubmissionId,\n    onModalCloseClick = () => {}\n  } = props;\n\n  const {state: submissionState, dispatch: dispatchSubmissionAction} = useSubmission();\n  const {isActive: isSubmissionActive, routeTrack, error: submissionError} = submissionState;\n\n  useEffect(() => {\n    getRouteTrack(dispatchSubmissionAction, trackingSubmissionId);\n  }, [dispatchSubmissionAction, trackingSubmissionId]);\n\n\n  const MainContent = () => {\n    if(submissionError) {\n      return <Errors errors={[submissionError]}/>;\n    }\n    else if(isSubmissionActive) {\n      return <Loading/>\n    }\n    else if(!_.isEmpty(routeTrack)) {\n      return <TrackSubmissionForm routeTrack={routeTrack}/>\n    }\n    else {\n      return null;\n    }\n  }\n  return (\n    <RouteTrackingModalWrapper onModalCloseClick={ onModalCloseClick}>\n      <MainContent/>\n    </RouteTrackingModalWrapper>\n  )\n}\n\nexport default RouteTrackingModalWithRequest;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Errors, Form } from '@formio/react';\nimport _ from 'lodash';\n\nimport { Loading, Title } from '../../../../common';\nimport { useForm } from '../../form';\nimport { useSubmissions, indexSubmissions, saveSubmissions } from '../submissionsContext';\nimport { FormsConfig } from '../../../../config';\nimport { ModalConfirmation } from '../../partials';\nimport { addSelectedRowsClass, hasAdminRights, setSubmissionStatus, submissionStatuses } from '../../../../utils';\nimport { useAlerts } from '../../../alerts';\nimport { useAuth } from '../../../auth';\n\n\nconst NamedSubmissionsList = (props) => {\n  const {\n    FormError,\n    formName,\n    getViewPath,\n    createSubmissionPath,\n    addBtnTitle,\n    id,\n    submissionsRequestParams = {},\n    title,\n    hideAddBtn\n  } = props;\n\n  const history = useHistory();\n  const formId  = useParams().formId || id;\n\n  const defaultRequestParams = {\n    limit: 100000,\n    query: {},\n    select: '',\n    sort: '-modified',\n    ...submissionsRequestParams\n  };\n  \n  const [requestParams, setRequestParams] = useState(defaultRequestParams);\n  const [paramsSet, setParamsSet] = useState(false);\n\n  const [statusAction, setStatusAction] = useState({\n    active:false,\n    selectedIds: [],\n    delete: false,\n    archive: false\n  });\n  const { state: submissionsState, dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const { state: formState} = useForm();\n  const { addAlert } = useAlerts();\n\n  const {state: authState} = useAuth();\n  const {is: role } = authState;\n  const isAdmin = hasAdminRights(role);\n\n  useEffect(()=> {\n    setRequestParams((requestParams) => {\n      const updatedRequestParams = {...requestParams, ...submissionsRequestParams};\n      setParamsSet(true);\n\n      return !_.isEqual(requestParams, updatedRequestParams) \n        ? updatedRequestParams\n        : requestParams;\n    });\n  }, [submissionsRequestParams]);\n\n  const getSubmissions = useCallback(\n    (page, query) => {\n      indexSubmissions(dispatchSubmissionsAction, page, requestParams, query, formId, formName);\n    },\n    [dispatchSubmissionsAction, formId, formName, requestParams]\n  );\n\n  useEffect(() => {\n   getSubmissions(1);\n  }, [getSubmissions, formId,requestParams]);\n\n  const isLoading = formState.isActive || submissionsState.isActive || !paramsSet;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  const gridSubmissions = submissionsState.submissions.map(subm => ({...subm, ...subm.metadata}));\n\n  const onNo = () => {\n    setStatusAction({\n      active: false,\n      selectedIds: statusAction.selectedIds,\n      delete: false,\n      archive: false\n    })\n  };\n\n  const onYes = () => {\n    const {selectedIds, archive, delete: deleteAction} = statusAction\n    const newStatus = archive \n      ? submissionStatuses.archived\n      : deleteAction \n        ? submissionStatuses.deleted \n        : '';\n\n    const updatedSubmissions = _.chain(submissionsState.submissions)\n      .filter(subm => _.some(selectedIds, id => subm._id === id))\n      .each(subm => setSubmissionStatus(subm, newStatus))\n      .value();\n\n    saveSubmissions(dispatchSubmissionsAction, updatedSubmissions, formId, null, (err) => {\n      if(!err) {\n        getSubmissions(1);\n        setStatusAction({\n          active: false,\n          selectedIds: [],\n          delete: false,\n          archive: false\n        });\n        addAlert({ type: 'success', content: `Form Submissions are successfully moved to  the ${(deleteAction && 'Deleted') || (archive && 'Archived')}`}); \n      }\n    });\n  }\n\n  const Grid = () => (\n    <Form\n      submission={{data: {submissions: gridSubmissions, selectedSubmissions: statusAction.selectedIds}}}\n      src={FormsConfig.getSrc('namedSubmissionsTable')}\n      options={{noSubmit: true, hide: {deletePermanently: true, select: isAdmin, moveToCurrent: true, track:true}, ...formState.options}}\n      formReady={(form) => {\n        form.on('open', ({_id: submissionId})=> {\n          if (submissionId) {\n            history.push(getViewPath ? getViewPath(formId, submissionId) : `/form/${formId}/submission/${submissionId}`);\n          }\n        });\n\n        form.on('page', ()=> {\n          addSelectedRowsClass(form, form.data.selectedSubmissions);\n        });\n\n        form.on('deselectAll', () => {\n          addSelectedRowsClass(form, []);\n        });\n\n        form.on('moveToArchived', () => {\n          setStatusAction({\n            active: true,\n            selectedIds:  form.data.selectedSubmissions || [],\n            delete: false,\n            archive: true\n          });\n        });\n\n        form.on('moveToDeleted', () => {\n          setStatusAction({\n            active: true,\n            selectedIds:  form.data.selectedSubmissions || [],\n            delete: true,\n            archive: false\n          })\n        });\n \n        form.on('selectRow', (data)=> {\n          const selectedSubmissions = form.data.selectedSubmissions;\n\n          form.data.selectedSubmissions = _.includes(selectedSubmissions, data._id )\n            ? [..._.filter(selectedSubmissions, id => id !== data._id)]\n            : [...selectedSubmissions, data._id];\n\n          addSelectedRowsClass(form, form.data.selectedSubmissions);\n          form.triggerChange();\n        });\n      }}\n    />\n  );\n\n  const titleText = title || `Current Submissions - ${formState.form.title} Form `;\n\n  const AddBtn = () => {\n    return hideAddBtn\n      ? null\n      : (<div className=\"d-flex justify-content-end mb-2\">\n          <Link className='btn btn-primary' to={createSubmissionPath || `/form/${formId || formState.id}`}>\n            <i className='glyphicon glyphicon-plus fa fa-plus' aria-hidden='true'></i>\n            &nbsp; {addBtnTitle || 'New ' + formState.form?.title}\n          </Link>\n        </div>)\n  };\n\n  const MainContent = () =>  (\n    <div className='form-index position-relative'>\n      {statusAction.active && <ModalConfirmation\n        onNo={onNo}\n        onYes={onYes}\n        message={(statusAction.archive && <span>Are you sure you wish to move <strong>{statusAction.selectedIds.length}selected form submission(s)</strong>  to the <strong>Archived</strong>?</span>) ||\n        (statusAction.delete && <span>Are you sure you wish to move <strong>{statusAction.selectedIds.length} selected form submission(s)</strong> to the <strong>Deleted</strong>?</span>)}\n        onModalCloseClick={onNo}\n      />}\n      <Errors errors={[formState.error, submissionsState.error]} />\n      <Title text={titleText} />\n      <AddBtn/>\n      {!_.isEmpty(gridSubmissions) ? <Grid/> : 'No items to display.'}\n    </div>\n  );\n\n  if (formState.error && FormError) {\n    return(\n      <FormError error={formState.error}>\n        <MainContent />\n      </FormError>\n    );\n  }\n\n  return <MainContent />;\n}\n\nexport default NamedSubmissionsList;\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport NamedSubmissionsList from './NamedSubmissionsList';\nimport { SubmissionsProvider } from '../submissionsContext';\nimport SubmissionPage from './SubmissionPage';\nimport { SubmissionProvider } from '../submissionContext';\nimport { useAuth } from '../../../auth';\nimport { hasAdminRights } from '../../../../utils';\n\nconst SubmissionsPage = () => {\n  const {state: authState} = useAuth();\n  const {is: role } = authState;\n  const isAdmin = hasAdminRights(role);\n\n  return (\n    <SubmissionsProvider>\n      <Switch>\n        <Route\n          exact\n          path=\"/form/:formId/submission\"\n          render={(props) => <NamedSubmissionsList hideAddBtn={isAdmin} submissionsRequestParams={isAdmin \n            ? {query: {\n                'metadata.inProcess__exists': false,\n              }} \n            : {query: {\n                'metadata.routed__exists': false,\n                'metadata.status__exists': false,\n                'metadata.inProcess__exists': false,\n              }}\n          } \n          {...props} />}\n        />\n        <Route\n          path=\"/form/:formId/submission/:submissionId\"\n          render={(props) => <SubmissionProvider><SubmissionPage {...props} /></SubmissionProvider>}\n        />\n      </Switch>\n    </SubmissionsProvider>\n  )\n};\n\nexport default SubmissionsPage;\n","import React from 'react';\nimport { Errors } from '@formio/react';\nimport { useHistory, useParams } from 'react-router';\nimport { Confirm, Progressbar } from '../../../../common';\nimport { useForm, deleteForm } from '../formContext';\nimport { useForms, resetForms } from '../formsContext';\n\nconst FormDelete = ({ name }) => {\n  const history = useHistory();\n  const { dispatch: dispatchFormsAction } = useForms();\n  const { formId } = useParams();\n  \n  const { state: formState, dispatch: dispatchFormAction } = useForm();\n  const {error, deletingForm, form,  deleteFormStatus} = formState;\n  const {progress, message} = deleteFormStatus;\n\n  const confirmationMessage = `Are you sure you wish to delete the form '${form.title}'?`;\n\n  const onYes = () => {\n    deleteForm(dispatchFormAction, formId, name, (err) => {\n      if (!err) {\n        dispatchFormsAction(resetForms());\n        history.push('/form');\n      }\n    });\n  };\n\n  const onNo = () => {\n    const prevState = history[history.length - 2];\n    if (prevState) {\n      history.push(prevState);\n    }\n  };\n\n  return (\n    <div>\n      <Errors errors={[error]} />\n      {deletingForm \n        ? (<Progressbar progress={progress} message={message}/>) \n        : (<Confirm message={confirmationMessage} onYes={onYes} onNo={onNo} />) \n      }\n    </div>\n  )\n};\n\nexport default FormDelete;\n","import React, {useRef} from 'react';\nimport { Form, Errors } from '@formio/react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { Loading, Title } from '../../../../common';\nimport { useForm } from '../formContext';\nimport {\n  useSubmission,\n  useSubmissions,\n  saveSubmission,\n  resetSubmissions,\n} from '../../submission';\nimport { SubmissionName } from '../../partials';\nimport { useAuth } from '../../../auth'\nimport { autoNameFieldKey, setProcessFormsSubmissionOwner, setProcessSubmissionFirstStage, setSubmissionName, setSubmissionOwner } from '../../../../utils';\n\nconst FormView = (props) => {\n  const {\n    submission,\n    hideComponents,\n    name,\n    pathStart,\n    formName,\n    title,\n    options: propsFormOptions,\n    addSubmissionAccess\n  } = props;\n\n  const history = useHistory();\n\n  const { formId } = useParams();\n  const { dispatch: dispatchSubmissionAction, state: submissionState } = useSubmission();\n  const { dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const {state: userState} = useAuth();\n  const {userInfo, user } = userState;\n  const requiredName = !!formId;\n\n  const { state: formState } = useForm();\n  const {\n    form,\n    clonedForm,\n    error: formError,\n    isActive,\n    url,\n    options: formOptions,\n    autofilledFields,\n    isProcess, autoName\n  } = formState;\n\n  const options = {template: 'bootstrap', iconset: 'fa',  ...formOptions, ...propsFormOptions, userId: user._id, userProfileId: userInfo._id};\n\n  const onSubmit = (submission) => {\n    if(isProcess) {\n      setProcessSubmissionFirstStage(submission, form);\n      setProcessFormsSubmissionOwner(form, submission, user);\n    }\n\n    if (addSubmissionAccess) {\n      setSubmissionOwner(submission, user);\n    }\n\n    saveSubmission(dispatchSubmissionAction, submission, formId, name, (err, submission) => {\n      if (!err) {\n        dispatchSubmissionsAction(resetSubmissions());\n        history.push(pathStart ||  `${formId ? `/form/${formId}/submission` : `${'/' + formName}`}/${submission._id}`);\n      } \n    });\n  }\n\n  const nameForm = useRef();\n  const submitBtn = useRef();\n  const formRef = useRef();\n\n  const autofillForm = () => {\n    autofilledFields.forEach(field => {\n      const autofilledField = formRef.current.getComponent(field.path);\n      const setAutoValue = (prefilledField) => {\n        if (prefilledField) {\n          const value = prefilledField.evaluate(field.autofilledValue, {userProfile: userInfo.data}, 'value');\n          prefilledField.setValue(value);\n        }\n      };\n    \n      if (_.isArray(autofilledField)) {\n        _.each(autofilledField, prefilledField => {\n          setAutoValue(prefilledField);\n        });\n      }\n      else {\n        setAutoValue(autofilledField);\n      }\n      \n    });\n\n    formRef.current.onChange();\n  }\n\n  const AutoFillBtn = () => {\n    return !!autofilledFields.length \n      ? (<div className=\"d-flex justify-content-end mt-2\">\n          <button onClick={autofillForm} className=\"btn btn-primary\" >Autofill With User Profile Data</button>\n        </div>)\n      : null;\n  }\n\n  if (isActive) {\n    return <Loading />;\n  }\n\n  return (\n    <div>\n      <Title text={title || `New ${ form.title }`}/>\n      <Errors errors={[formError, submissionState.error]} />\n      <AutoFillBtn/>\n      {requiredName && !autoName && <SubmissionName\n          onFormReady={(form) => {nameForm.current = form;}}\n          onNameChange={(name) => {\n            if (name && requiredName) {\n              if (submitBtn.current && submitBtn.current.hasError && !submitBtn.current?.root?.errors.length) {\n                submitBtn.current.triggerChange();\n              }\n            }\n          }}\n      />}\n      <Form\n        form={isProcess ? clonedForm : form}\n        submission={submission}\n        url={url}\n        formReady={(form)=> {\n          formRef.current = form;\n          submitBtn.current = form.getComponent('submit');\n        }}\n        options={{...options,\n          hooks: {\n          customValidation: function (submission, next) {\n            if (!requiredName) {\n              next();\n            }\n\n            const submNameForm= nameForm.current;\n            const submissionName = autoName ?  _.get(submission, `data.${autoNameFieldKey}`, '') : _.get(submNameForm, 'submission.data.submissionName', '');\n\n            if (submissionName) {\n              setSubmissionName(submission, submissionName)\n              next();\n            } \n            else {\n              submNameForm.getComponent('submissionName').pristine = false;\n              submNameForm.getComponent('submissionName').checkValidity();\n              submNameForm.getComponent('submissionName').focus();\n              \n              next('Please add name for this submission.');\n            }\n          }\n        }}}\n        hideComponents={hideComponents}\n        onSubmit={onSubmit}\n      />\n    </div>\n  );\n}\n\nexport default FormView;\n","import React from 'react';\nimport { Form, Utils } from '@formio/react';\nimport { Title } from '../../../../common';\nimport { useForm, saveForm, receiveFolder } from '../formContext';\nimport { useAlerts } from '../../../alerts';\nimport { FormsConfig } from '../../../../config';\nimport _ from 'lodash';\n\nconst FormFolder= () => {\n  const { addAlert } = useAlerts();\n  const { state: formState, dispatch } = useForm();\n\n  const {\n    form,\n    formFolder\n  } = formState;\n\n  const isFormFolderSubmission = !!formFolder._id;\n\n  const onSaveFormFolder = (folder) => { \n    const id = _.get(folder, 'data.folder._id')\n    const formToSave = Utils.fastCloneDeep(form);\n\n    _.set(formToSave,'properties.folder', id);\n\n    saveForm(dispatch, formToSave, (err) => {\n      if (!err) {\n        dispatch(receiveFolder(folder));\n        addAlert({ type: 'success', content: 'Form succesfully updated' });\n      }\n    });\n  }\n\n  const formData = () => {\n    const {title, _id, name} = form;\n    return  {title, _id, name};\n  }\n\n  const formFolderData = () => {\n    if (isFormFolderSubmission) {\n      formFolder.data = {...formFolder.data, form: formData()};\n\n      if (!_.get(formFolder, 'data.folder.data.folderName')) {\n        _.set(formFolder.data, 'folder', {});\n      }\n      return formFolder;\n    }\n\n    return {data: {form: formData()}};\n  };\n\n  return (\n    <div>\n      <Title text={`Form '${ form.title }' Folder`}/>\n      <Form\n        options={{editForm: form}}\n        src={FormsConfig.getSrc('folderForm')}\n        submission={formFolderData()}\n        formReady={(form)=> {\n          form.on('submitDone', (folderSubmission)=> {\n            onSaveFormFolder(folderSubmission);\n          });\n        }}\n      />\n\n    </div>\n  );\n}\n\nexport default FormFolder;","import React from 'react';\nimport { Formio } from '@formio/react';\nimport { FormsConfig } from '../../../config';\nimport NativePromise from 'native-promise-only';\nimport _ from 'lodash';\n\nconst FormContext = React.createContext();\n\nconst initialState = {\n  myFormForm: {},\n  isActive: false,\n  error: '',\n  myForm: {}\n};\n\nconst myFormReducer = function(state, action) {\n  switch (action.type) {\n    case 'MY_FORM_REQUEST':\n      return {\n        ...state,\n        isActive: true,\n        myForm: {},\n        error: '',\n      };\n    case 'MY_FORM_FAILURE':\n      return {\n        ...state,\n        isActive: false,\n        myForm: {},\n        error: action.error,\n      };  \n    case 'MY_FORM_SUCCESS':\n      return {\n        ...state,\n        isActive: false,\n        error: '',\n        myFormForm: {},\n        myForm: action.myForm\n      };\n    case 'MY_FORM_FORM_SUCCESS':\n      return {\n        ...state,\n        error: '',\n        isActive: false,\n        myFormForm: action.myFormForm\n      };\n    case 'MY_FORM_FORM_REQUEST':\n      return {\n        ...state,\n        isActive: true,\n        myFormForm: {},\n        error: '',\n      };\n    case 'MY_FORM_FORM_FAILURE':\n      return {\n        ...state,\n        isActive: false,\n        myFormForm: {},\n        error: action.error,\n      };\n    case 'FORM_SAVE_FAILURE':\n      return {\n        ...state,\n        error: action.error,\n      };\n    case 'MY_FORM_DELETE_REQUEST':\n      return {\n        ...state,\n        isActive: true,\n        error: '',\n      };\n    case 'MY_FORM_DELETE_FAILURE':\n      return {\n        ...state,\n        isActive: false,\n        error: action.error,\n      };    \n    case 'MY_FORM_RESET':\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nexport function MyFormProvider(props) {\n  const [state, dispatch] = React.useReducer(myFormReducer, initialState);\n  const value = React.useMemo(() => [state, dispatch], [state, dispatch]);\n\n  return <FormContext.Provider value={value} {...props} />;\n}\n\nexport function useMyForm() {\n  const context = React.useContext(FormContext);\n  if (!context) {\n    throw new Error('useMyForm must be used within a MyFormProvider');\n  }\n\n  const [state, dispatch] = context;\n\n  return {\n    state,\n    dispatch\n  }\n}\n\nconst requestDeleteMyForm = () => ({\n  type: 'MY_FORM_DELETE_REQUEST',\n});\n\nconst failDeleteMyForm = (err) => ({\n  type: 'MY_FORM_DELETE_FAILURE',\n  error: err,\n});\n\nconst requestMyForm = () => ({\n  type: 'MY_FORM_REQUEST',\n});\n\nconst receiveMyForm = (myForm) => ({\n  type: 'MY_FORM_SUCCESS',\n  myForm\n});\n\nconst receiveMyFormForm = (myFormForm) => ({\n  type: 'MY_FORM_FORM_SUCCESS',\n  myFormForm\n});\n\nconst requestMyFormForm = () => ({\n  type: 'MY_FORM_FORM_REQUEST',\n});\n\nconst failMyFormForm = (err) => ({\n  type: 'MY_FORM_FORM_FAILURE',\n  error: err,\n});\n\nconst failMyForm = (err) => ({\n  type: 'MY_FORM_FAILURE',\n  error: err,\n});\n\nconst resetMyForm = () => ({\n  type: 'MY_FORM_RESET',\n});\n\nconst failSaveForm = (error) => ({\n  type: 'FORM_SAVE_FAILURE',\n  error\n});\n\n\nexport const isInMyForms = (form) => {\n  const url = `${Formio.getProjectUrl()}/${FormsConfig.myForms}/submission`;\n\n  const formio = new Formio(url);\n\n  return formio.loadSubmissions({params: {'data.form._id': form._id}})\n    .then(result => {\n      return !!result.length;\n    })\n}\n\nconst saveTag = (tag) => {\n  const id = tag._id;\n  const url = `${Formio.getProjectUrl()}/${FormsConfig.myTags}/submission${id ? `/${id}` : ''}`;\n\n  const formio = new Formio(url);\n\n  return formio.saveSubmission(tag);\n}\n\nconst saveTags = (tags) => {\n  const tagPromises = tags ? tags.map(tag => saveTag({data:{tag}})) : [];\n  return NativePromise.all(tagPromises);\n}\n\nexport const transformMyFormData = (myFormData) => {\n  const {newTags, addNewTags} = myFormData;\n  const areNewTags = addNewTags && !!newTags.length;\n\n  let transformPromise = areNewTags\n    ? saveTags(newTags).then(savedTags => {\n        _.set(myFormData, 'tags', [..._.get(myFormData, 'tags', []), ...savedTags]);\n        _.unset(myFormData, 'newTags', []);\n        _.set(myFormData, 'addNewTags', false);\n        return myFormData;\n      })\n    : NativePromise.resolve(myFormData);\n\n  return transformPromise.then(result => {\n    return result;\n  })\n \n}\n\nexport const validateAndTransformMyFormData = (dispatch, myForm, validateExistance, next, done=()=> {}) => {\n  const errors = [];\n\n  return NativePromise\n    .resolve()\n    .then(() => {\n      const {tags, newTags, form} = myForm.data;\n      const areTags = tags.length || (newTags && newTags.length);\n\n      if (!areTags) {\n        errors.push({message: 'Please add at least one tag that will be associated with the form.'});\n      }\n      return validateExistance ? isInMyForms(form) : false;\n    })\n    .then(myFormExist => {\n      if (myFormExist) {\n        errors.push({message: 'The form has already been added to My Forms, please select another form.'});\n      }\n\n      if (errors.length) { \n        next(errors);\n      }\n      else { \n        return transformMyFormData(myForm.data)\n      }\n    })\n    .then(submissionData => {\n      if (submissionData && !errors.length) {\n        myForm.data = submissionData;\n        next();\n      }\n    })\n    .catch((err) => {\n      dispatch(failSaveForm(`Error while validating and transforming My Form data: ${err}`));\n      done(err); \n    })\n}\n\nexport const setMyForm = (dispatch, myForm, done=()=> {}) => {\n  dispatch(receiveMyForm(myForm));\n  done()\n}\n\nexport const getMyFormForm = (dispatch, myFormFormId, done = ()=>{}) => {\n  const url = `${Formio.getProjectUrl()}/${FormsConfig.folderForm}/submission`;\n  const formio = new Formio(url);\n\n  dispatch(requestMyFormForm());\n\n  return formio.loadSubmissions({params: {'data.form._id': myFormFormId}})\n    .then(result => {\n      dispatch(receiveMyFormForm(result[0]||{}))\n      done(null, result[0]);\n    })\n    .catch(err => {\n      dispatch(failMyFormForm(err));\n    });\n}\n\nexport const getMyForm = (dispatch, formId, done=()=>{}) => {\n  const url = `${Formio.getProjectUrl()}/${FormsConfig.myForms}/submission`;\n  const formio = new Formio(url);\n\n  dispatch(requestMyForm());\n\n  return formio.loadSubmissions({params: {'data.form.data.form._id': formId}})\n    .then(result => {\n      dispatch(receiveMyForm(result[0], {}));\n      done(null, result);\n    })\n    .catch(err => {\n      dispatch(failMyForm(`Error while getting My Form: ${err}`));\n      done(err);\n    });\n};\n\nexport const deleteMyForm = (dispatch, myFormId, done=()=>{}) => {\n  const formio = new Formio(`${Formio.getProjectUrl()}/${FormsConfig.myForms}/submission/${myFormId}`);\n\n  dispatch(requestDeleteMyForm());\n\n  return formio.deleteSubmission()\n    .then(() => {\n      dispatch(resetMyForm());\n      done(null, true);\n    })\n    .catch((err) => {\n      dispatch(failDeleteMyForm(`Error while deleting My Form: ${err}`));\n      done(err);\n    });\n}\n","import React, {useEffect, useState} from 'react';\nimport { Form, Errors } from '@formio/react';\nimport { useParams, useHistory} from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { Button, Loading } from '../../../../common';\nimport { useForm } from '../../../forms/form/formContext';\nimport { useAlerts } from '../../../alerts';\nimport { FormsConfig } from '../../../../config';\nimport { Title } from '../../../../common';\nimport { useMyForm, validateAndTransformMyFormData, getMyForm, deleteMyForm, getMyFormForm, setMyForm } from '../myFormContext';\n\nconst MyForm = () => {\n  const [showMyForm, setShow] = useState(false);\n\n  const history = useHistory();\n  const {formId} = useParams();\n  const {addAlert} = useAlerts();\n\n  const {state: formState} = useForm();\n  const {form, error: formError, isActive} = formState;\n\n  const {state: myFormState, dispatch: dispatchMyFormAction} = useMyForm();\n  const {myForm, isActive: isMyFormActive, error: myFormError, myFormForm} = myFormState;\n   \n  useEffect(() => {\n    if (formId && !showMyForm) {\n      getMyForm(dispatchMyFormAction, formId);\n    }\n  }, [dispatchMyFormAction, formId, showMyForm]);\n\n  useEffect(() => {\n    if (formId && showMyForm) {\n      getMyFormForm(dispatchMyFormAction,formId);\n    }\n  }, [dispatchMyFormAction, formId, showMyForm])\n\n  const onAddToMyFormsClick = () => {\n    setShow(true);\n  }\n\n  const onDeleteFromMyFormsClick = () => {\n    setShow(false);\n\n    deleteMyForm(dispatchMyFormAction, myForm._id, (err) => {\n      if (!err) {\n        addAlert({type: 'success', content: 'Form succesfully deleted from My Forms'});\n      }\n    });\n  };\n\n  const ManageMyFormBtn = () => {\n    if (formId && !isMyFormActive && !showMyForm) {\n      const noMyForm = _.isEmpty(myForm);\n\n      return (\n        <div className=\"d-flex flex-row-reverse\">\n          <Button \n            btnClass={noMyForm ? 'btn-primary' : 'btn-danger btn-sm'} \n            text={noMyForm ? `Add Form \"${form.title}\" To My Forms` : 'Delete Form From My Forms'}\n            onClick={noMyForm ? onAddToMyFormsClick : onDeleteFromMyFormsClick}\n          />\n        </div>\n      )\n    } \n    return null;\n  };\n\n  const Loader = () => {\n    return (isActive || isMyFormActive) ? <Loading /> : null\n  }\n\n  const MyFormEdit = () => {\n    if (!isActive && !isMyFormActive && ((formId && !_.isEmpty(myForm)) || !formId ||showMyForm )) {\n      return (\n        <Form\n          src={FormsConfig.getSrc('myForms')}\n          options={{\n            disableForm: !!formId,\n            hooks: {\n              customValidation: (submission, next) => {\n                validateAndTransformMyFormData(dispatchMyFormAction, submission, !formId, next);\n              }\n            }\n          }}\n          submission={!_.isEmpty(myFormForm) ? {data: {form: myFormForm}} : myForm}\n          formReady={(form)=> {\n            form.on('submitDone', (submission) => {\n              setShow(false);\n              setMyForm(dispatchMyFormAction,submission, () => {\n                addAlert({ type: 'success', content: 'My Form is succesfully saved' });\n              });\n\n              history.push(!formId ? '/myforms' : history.location.pathnam);\n            })\n          }}\n        />)\n    }\n    return null;\n  }\n\n  return (\n    <div>\n      <Title text={(_.isEmpty(myForm) && showMyForm) || !formId ? `New My Form` : 'My Form' }/>\n      <Errors errors={[formError, myFormError]} />\n      <ManageMyFormBtn/>\n      <Loader/>\n      <MyFormEdit/>\n    </div>\n  );\n}\n\nexport default MyForm;","import React, { useEffect } from 'react';\nimport { NavLink, Route, Switch, useParams } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { useSubmission, getSubmission, SubmissionView, SubmissionDelete } from '../../../forms/submission';\nimport { Title } from '../../../../common';\nimport { useAuth } from '../../../auth';\nimport { hasAdminRights } from '../../../../utils';\n\nconst MyTagPage = (props) => {\n  const {pathStart, formName, paramName } = props;\n\n  const eventId = useParams()[`${paramName}Id`];\n  const {state: authState} = useAuth();\n  const {is: role} = authState;\n\n  const isAdmin = hasAdminRights(role);\n\n  const {dispatch: dispatchSubmissionEvent, state: submissionState} = useSubmission();\n \n\n  useEffect(() => {\n    getSubmission(dispatchSubmissionEvent, eventId, null, formName);\n  }, [eventId, dispatchSubmissionEvent, formName]);\n\n  const Edit = () => <SubmissionView pathStart={pathStart}  readOnly={false} formName={formName}/>;\n\n  const navbarLinks = _.sortBy([ \n    {icon: \"fa fa-chevron-left\", getPath: (pathStart, eventId) => `${pathStart}`, title: '', priority: 0 },\n    {icon: \"fa fa-edit\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}`, title: 'Edit', priority: 20 },\n    {icon: \"fa fa-trash\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/delete`,  title: 'Delete', priority: 40 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs mb-2\">\n      {navbarLinks.map(link => {\n        if(link.adminOnly && !isAdmin && !link.showCondition) return null;\n        return (\n          <li className=\"nav-item\" key={link.title}>\n          <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true} to={link.getPath(pathStart, eventId)}  >\n            <i className={link.icon}></i> {link.title}\n          </NavLink>\n          </li>\n        )\n      })}\n    </ul>\n  );\n\nconst deleteSubject = () => {\n  const tag = _.get(submissionState, 'submission.data.tag', null);\n  \n  return tag ? `tag '${tag}'` : '';\n} \n\n  return (\n    <div>\n      <Title text={`My Tag`}/>\n      <Navbar />\n      <Switch>\n        <Route exact path={`${pathStart}/:${paramName}Id`} component={Edit}/>\n        <Route\n          path={`${pathStart}/:${paramName}Id/delete`}\n          render={(props) => <SubmissionDelete {...props} pathStart={pathStart} formName={formName} paramName={paramName} deleteSubject={deleteSubject()}/>}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default MyTagPage;\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { FormsConfig } from '../../../../config';\nimport { FormView, getForm, useForm } from '../../../forms/form';\nimport { FormsProvider } from '../../../forms/form/formsContext';\nimport { SubmissionProvider, SubmissionsList, SubmissionsProvider } from '../../../forms/submission';\nimport MyTagPage from './MyTagPage';\nimport { Loading } from '../../../../common';\n\n\nconst MyTagsPage = () => {\n  const paramName = 'tag';\n  const pathStart = '/myforms/tags';\n  const formName = FormsConfig.myTags;\n\n  const { dispatch: dispatchFormEvent, state: formState } = useForm();\n  const {form, isActive: isFormActive} = formState;\n\n  useEffect(() => {\n    getForm(dispatchFormEvent, null, formName);\n  }, [dispatchFormEvent, formName]);\n\n  if (isFormActive || _.isEmpty(form)) {\n    return <Loading/>\n  }\n\n  return (\n    <div>\n    <FormsProvider>\n      <SubmissionsProvider>\n        <Switch>\n          <Route\n            exact\n            path={`${pathStart}`}\n            render={(props) => {\n              return  <div>\n                  <SubmissionsList\n                    {...props}\n                    formName={formName}\n                    getViewPath={(formId, submission) => `${pathStart}/${submission._id}`}\n                    // getEditPath={(formId, submission) => `${pathStart}/${submission._id}`}\n                    // getDeletePath={(formId, submission) => `${pathStart}/${submission._id}/delete`}\n                    createSubmissionPath={`${pathStart}/create`}\n                    pathStart={pathStart}\n                    addBtnTitle={'My Tag'}\n                    title= {'My Tags'}\n                    submissionsRequestParams={{ sort: '-modified'}}\n                  />\n                </div>\n            }}\n          />\n          <Route\n            exact\n            path={`${pathStart}/create`}\n            render={(props) => (\n              <SubmissionProvider>\n                <FormView {...props} title={'New Tag'} name={formName} pathStart={pathStart}/>\n              </SubmissionProvider>\n            )}\n          />\n          <Route\n            path={`${pathStart}/:${paramName}Id`}\n            render={(props) => (\n              <SubmissionProvider>\n                <MyTagPage {...props} pathStart={pathStart} paramName={paramName} formName={formName} />\n              </SubmissionProvider>\n            )}\n          />\n        </Switch>\n      </SubmissionsProvider>\n    </FormsProvider>\n    </div>\n  );\n};\n\n\n\nexport default MyTagsPage;\n","import React from 'react';\n\nconst FilterContext = React.createContext();\n\nexport const filterNames = {\n  formsFilter: 'formsFilter',\n  myFormsFilter: 'myFormsFilter',\n  set: false\n};\n\nconst initialState = {\n  filter: {},\n  error: ''\n};\n\nconst filterReducer = (state = initialState, action) => {\n  switch (action.type) {\n      case 'FILTER_SET':\n        return {\n          ...state,\n          filter: {...action.filter},\n          error: '',\n          set: true,\n      };\n      case 'FILTER_FAILURE':\n        return {\n          ...state,\n          error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport function FilterProvider(props) {\n  const [state, dispatch] = React.useReducer(filterReducer, initialState);\n  const value = React.useMemo(() => [state, dispatch], [state, dispatch]);\n\n  return <FilterContext.Provider value={value} {...props} />;\n}\n\nexport function useFilter() {\n  const context = React.useContext(FilterContext);\n  if (!context) {\n    throw new Error('useFilter must be used within a FilterProvider');\n  }\n\n  const [state, dispatch] = context;\n\n  return {\n    state,\n    dispatch\n  }\n}\n\nconst addFilter = (filter) => ({\n  type: 'FILTER_SET',\n  filter\n});\n\nconst failFilter =  (error) => ({\n  type: 'FILTER_FAILURE',\n  error,\n});\n\nexport const setFilter = (dispatch, filter, filterName) => {\n  localStorage.setItem(filterName, JSON.stringify(filter));\n  dispatch(addFilter(filter));\n}\n\nexport const getFilter = (dispatch, filterName) => {\n  try {\n    const savedFilter = localStorage.getItem(filterName);\n    dispatch(addFilter(savedFilter ? JSON.parse(savedFilter): {})); \n  }\n  catch(e) {\n    failFilter(e);\n  }\n}\n","import { Formio } from '@formio/react';\nimport _ from 'lodash';\nimport {FormsConfig} from '../../../config';\nimport {Utils} from 'formiojs';\nimport {requestForms, receiveForms,failForms} from '../../forms/form/formsContext'\nimport { getRequestParams } from '../../../utils';\n\nconst transformFormsResult = (forms) => {\n  forms = Utils.fastCloneDeep(forms)\n\n  if (forms && forms.length) {\n    return _.map(forms, form => ({formName: _.get(form, 'data.form.data.form.name',''), formTitle: _.get(form, 'data.form.data.form.title',''), formId:_.get(form, 'data.form.data.form._id',''), \n    tags: _.map(form.data.tags || [], (tag)=> _.get(tag, 'data.tag', null))}))\n  }\n  return [];\n};\n\nexport const getMyForms = (dispatch, { limit, query, select, sort }, page = 1, params = {}, done = () => {}) => {\n  dispatch(requestForms(page, params));\n\n  const formio = new Formio(`${Formio.getProjectUrl()}/${FormsConfig.myForms}/submission`);\n  const selectData = 'data.form.data.form,data.tags';\n  select = select ? `${select},${selectData}` : selectData;\n  sort ='-modified';\n\n  const requestParams = getRequestParams(limit, query, sort, params, select, page);\n\n  return formio.loadSubmissions({ params: requestParams })\n    .then((result) => {\n      dispatch(receiveForms(transformFormsResult(result), limit));\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failForms(error));\n      done(error);\n    });\n};\n","import React, {useEffect, useCallback} from 'react'\nimport { useHistory} from 'react-router-dom';\nimport { Form} from '@formio/react';\n\nimport {Loading} from '../../../../common';\nimport {useForms} from '../../../forms/form/formsContext';\nimport {FormsConfig} from '../../../../config';\nimport {getMyForms } from '../myFormsContext';\n\nconst MyFormsList = () => {\n  const history = useHistory();\n\n  const {state: formsState, dispatch: dispatchFormsAction} = useForms();\n  const {requestParams} = formsState;\n\n  const getForms = useCallback(\n    (page, params) => {\n      getMyForms(dispatchFormsAction, requestParams, page, params);\n    },\n    [requestParams, dispatchFormsAction],\n  );\n\n  useEffect(() => {\n    getForms(1);\n  }, [getForms]);\n\n  const { isActive } = formsState;\n\n  const FormsGrid = () => {\n    return (\n      <Form\n      submission={ {data: {forms: formsState.forms}}}\n      src={FormsConfig.getSrc('myFormsTable')}\n      options={{noSubmit: true}}\n      formReady={(form)=> {\n        form.on('row:click', (row)=> {\n          history.push(`/form/${row.formId || row._id}`);\n        });\n      }}\n    />)\n  }\n\n  return (\n    <div>\n      {isActive ? <Loading /> : formsState.forms?.length ? <FormsGrid/> : 'No forms found'}\n    </div>\n  );\n};\n\nexport default MyFormsList;\n","import React, { useEffect } from 'react';\nimport { Form } from '@formio/react';\n\nimport { getFilter, setFilter, useFilter } from '../filterContext';\nimport { FormsConfig } from '../../../config';\n\nconst Filter = ({filterName, filterOptions = {}, filterFormName}) => {\n  const {state: filterState, dispatch} = useFilter();\n  const {filter} = filterState;\n\n  useEffect(() => {\n    getFilter(dispatch, filterName);\n  }, [dispatch, filterName]);\n\n  const addFilter = (filter) => {\n    setFilter(dispatch, filter, filterName);\n  };\n\n  return (\n    <Form\n      submission={{data: filter}}\n      src={FormsConfig.getSrc(filterFormName)}\n      options={filterOptions}\n      formReady={(form)=> {\n        form.on('filterForms', (filter) => {\n          addFilter(filter);\n        });\n        form.on('search', (filter) => {\n          addFilter(filter);\n        });\n        form.on('resetFilter', () => {\n          addFilter({});\n        });\n      }}\n    />\n  );\n};\n\nexport default Filter;\n","import React, { useEffect, useCallback } from 'react'\nimport { Errors } from '@formio/react';\nimport _ from 'lodash';\n\nimport { useForms, setFilterQueryParam} from '../../../forms/form/formsContext';\nimport { Title } from '../../../../common';\nimport MyFormsList from './MyFormsList';\nimport { filterNames, useFilter } from '../../../filter/filterContext';\nimport Filter from '../../../filter/components/Filter';\nimport { Link } from 'react-router-dom';\n\nconst MyFormsListPage = () => {\n  const {state: formsState, dispatch: dispatchFormsAction} = useForms();\n  const {error: formsError} = formsState;\n  const {state: filterState} = useFilter();\n  const { filter, error: filterError, set } = filterState;\n\n  const getFilterQuery = useCallback(() => {\n    if (_.isEmpty(filter)) return {};\n\n    const {tags} = filter;\n    const query = {}; \n    const tagsQuery = 'data.tags._id__in';\n\n    if (tags && tags.length) {\n      query[`${tagsQuery}`] = tags.map(tag => tag._id).join(',');\n    };\n    \n    return query;\n  }, [filter]);\n\n  useEffect(()=> {\n    if (set) {\n      setFilterQueryParam(dispatchFormsAction, getFilterQuery());\n    }\n  }, [dispatchFormsAction, filter, getFilterQuery, set]);\n\n  const ManageBtns = () => {\n    return (\n      <div className=\"d-flex justify-content-end mb-3\">\n        <Link className=\"btn btn-primary mr-3\" to=\"/myforms/tags\">Manage My Tags</Link>\n        <Link className=\"btn btn-primary\" to=\"/myforms/add\"><i className=\"fa fa-plus\"></i>&nbsp; Add My Form</Link>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Title text={'My Forms'}/>\n      <p className=\"alert alert-primary\" role=\"alert\">\n        This is a list of user forms. You can add the most frequently used forms from the general list of forms to my forms and apply tags to them. Tags make it easier for you to search and filter.\n      </p>\n      <Errors errors={[formsError, filterError]} />\n      <Filter filterName={filterNames.myFormsFilter} filterFormName ={'myFormsFilter'} />\n      <ManageBtns/>\n      <MyFormsList/>\n    </div>\n  );\n};\n\nexport default MyFormsListPage;\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {FormsProvider} from '../../../forms/form/formsContext';\nimport MyForm from './MyForm';\nimport {MyFormProvider} from '../myFormContext';\nimport {FormProvider} from '../../../forms/form';\nimport {MyTagsPage} from '../../myTags';\nimport { FilterProvider } from '../../../filter/filterContext';\nimport MyFormsListPage from './MyFormsListPage';\n\nconst MyFormsPage = () => (\n  <FormsProvider>\n    <Switch>\n      <Route exact \n        path=\"/myforms\" \n        render={ (props) => <FilterProvider><MyFormsListPage {...props} /></FilterProvider>}\n      />\n      <Route\n        exact\n        path=\"/myforms/add\"\n        render={ (props) => <FormProvider><MyFormProvider><MyForm {...props}/></MyFormProvider></FormProvider> }\n      />\n      <Route\n        path=\"/myforms/tags\"\n        render={ (props) => <FormProvider><MyTagsPage {...props}/></FormProvider> }\n      />\n    </Switch>\n  </FormsProvider>\n)\n\nexport default MyFormsPage;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Errors, Form} from '@formio/react';\nimport _ from 'lodash';\n\nimport { Loading, Title } from '../../../../common';\nimport { useForm } from '../../form';\nimport { useSubmissions, indexSubmissions, saveSubmissions } from '../../submission/submissionsContext';\nimport { FormsConfig } from '../../../../config';\nimport { useAuth } from '../../../auth';\nimport { ModalConfirmation, RouteTrackingModal } from '../../partials';\nimport { addSelectedRowsClass, removeRouteTrackArchiveUser, setRouteTrackArchiveUser } from '../../../../utils';\nimport { useAlerts } from '../../../alerts';\n\nconst RoutedSubmissionsList = (props) => {\n  const selectedRowIdProperty = 'routeTrackId';\n  const {\n    FormError,\n    id,\n    submissionsRequestParams = {},\n    archived,\n    hideTitle\n  } = props;\n  \n  const history = useHistory();\n  const formId  = useParams().formId || id;\n  const {state: authState} = useAuth();\n  const {user} = authState;\n\n  const defaultRequestParams = {\n    limit: 100000,\n    query: {\n      ...(formId ? {'data.routedForm.id': formId} : {}),\n      'data.routeInitiators._id': user._id,\n      [`data.currentRoute.archiveUsers._id${archived ? '':'__ne'}`]: user._id,\n    },\n    select: '',\n    sort: '-data.currentRoute.date',\n    ...submissionsRequestParams\n  };\n  \n  const defaultStatusAction = {\n    active:false,\n    selectedIds: [],\n    archive: false,\n    restore: false,\n  };\n\n  const [statusAction, setStatusAction] = useState(defaultStatusAction);\n  const [requestParams, setRequestParams] = useState(defaultRequestParams);\n  const [paramsSet, setParamsSet] = useState(false);\n  const [trackingSubmission, setTrackingSubmission] = useState(null);\n  const { state: submissionsState, dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const { state: formState} = useForm();\n  const { addAlert } = useAlerts();\n\n  useEffect(()=> {\n    setRequestParams((requestParams) => {\n      const updatedRequestParams = {...requestParams, ...submissionsRequestParams};\n      setParamsSet(true);\n\n      return !_.isEqual(requestParams, updatedRequestParams) \n        ? updatedRequestParams\n        : requestParams;\n    });\n  }, [submissionsRequestParams, formId, archived]);\n\n  const getSubmissions = useCallback(\n    (page, query) => {\n      indexSubmissions(dispatchSubmissionsAction, page, requestParams, query, null, FormsConfig.routeTrack);\n    },\n    [dispatchSubmissionsAction, requestParams]\n  );\n\n  useEffect(() => {\n    getSubmissions(1);\n  }, [getSubmissions, formId, archived]);\n \n  const isLoading = formState.isActive || submissionsState.isActive || !paramsSet;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  const getGridSubmissionsData = () => {\n    const routedSubmissions = _.chain(submissionsState.submissions)\n      .map(subm => {\n        return {\n          routeTrackId: subm._id,\n          submission: _.get(subm, 'data.routedSubmission'),\n          form: _.get(subm, 'data.routedForm'),\n          data: _.chain(subm)\n            .get('data.tracking', [])\n            .filter(track => _.get(track, 'senderInfo[0].from[0]._id', '') === user._id)\n            .last()\n            .value()\n        };\n      })\n      .value()\n\n    return _.map(routedSubmissions, (subm) => {\n      return {\n        routeTrackId: subm.routeTrackId,\n        routedSubmissionId: _.get(subm, 'submission.id', ''),\n        submissionName: _.get(subm, 'submission.name', ''),\n        formTitle: _.get(formId ? formState : subm, 'form.title', ''),\n        formId: formId || _.get(subm, 'form.id', ''),\n        to: _.chain(subm).get('data.recipientsInfo', []).map(owner => _.get(owner, 'to[0].data.email', '')).value(),\n        dateSent: _.get(subm, 'data.senderInfo[0].dateSent', ''),\n        dateOpened: _.chain(subm).get('data.recipientsInfo', []).filter(recipientInfo => recipientInfo.opened)\n          .map(recipientInfo => {\n            const openedDate = recipientInfo.dateOpened;\n            return {\n              date: openedDate,\n              formattedDate: new Date(openedDate),\n            }\n          })\n          .minBy('formattedDate')\n          .get('date', '')\n          .value()\n      }\n    });\n  }\n\n  const Grid = () => (\n    <Form\n      submission={ {data: {submissions: getGridSubmissionsData(), selectedSubmissions: statusAction.selectedIds}}}\n      src={FormsConfig.getSrc('routedSubmissionsTable')}\n      options={{noSubmit: true, hide: {restore: !archived,  moveToArchived: archived}, ...formState.options}}\n      formReady={(form)=> {\n        form.on('track', (row)=> {\n          const submission = submissionsState.submissions.find(subm => row.routeTrackId === subm._id);\n          setTrackingSubmission(submission);\n        })\n        form.on('open', (rowData)=> {\n          if (rowData) {\n            history.push(`/form/${rowData.formId}/routed/${rowData.routedSubmissionId}`);\n          }\n        })\n        form.on('deselectAll', () => {\n          addSelectedRowsClass(form, [], selectedRowIdProperty);\n        });\n\n        form.on('selectRow', (data)=> {\n          const selectedSubmissions = form.data.selectedSubmissions;\n          const routeTrackId = data.routeTrackId;\n\n          form.data.selectedSubmissions = _.includes(selectedSubmissions, routeTrackId)\n            ? [..._.filter(selectedSubmissions, id => id !== routeTrackId)]\n            : [...selectedSubmissions, routeTrackId];\n\n          addSelectedRowsClass(form, form.data.selectedSubmissions, selectedRowIdProperty);\n          form.triggerChange();\n        });\n\n        \n        form.on('moveToArchived', () => {\n          setStatusAction({\n            ...defaultStatusAction,\n            active: true,\n            selectedIds:  form.data.selectedSubmissions || [],\n            archive: true,\n          })\n        });\n\n        form.on('restoreArchived', () => {\n          setStatusAction({\n            ...defaultStatusAction,\n            active: true,\n            selectedIds:  form.data.selectedSubmissions || [],\n            restore: true\n          })\n        });\n      }}\n    />\n  );\n\n  const onNo = () => {\n    setStatusAction({\n      ...defaultStatusAction,\n      selectedIds: statusAction.selectedIds,\n    })\n  };\n\n  const onYes = () => {\n    const {selectedIds, restore, archive} = statusAction;\n    const updatedSubmissions = _.chain(submissionsState.submissions)\n      .filter(subm => _.some(selectedIds, id => subm._id === id))\n      .each(subm => {\n        if (archive) {\n          setRouteTrackArchiveUser(subm, user);\n        }\n        if (restore) {\n          removeRouteTrackArchiveUser(subm, user);\n        }\n      })\n      .value();\n\n    saveSubmissions(dispatchSubmissionsAction, updatedSubmissions, null, FormsConfig.routeTrack, (err) => {\n      if(!err) {\n        const {restore, archive} = statusAction;\n        getSubmissions(1);\n        setStatusAction(defaultStatusAction);\n        addAlert({ type: 'success', content: `Records are successfully ${(restore && 'restored') || (archive && 'archived') || 'updated'} `}); \n      }\n    });\n  }\n\n  const titleText = formId && !hideTitle ? `Routed Submissions - ${formState.form.title} Form ` : '';\n\n  const getConfirmationMessage = () => {\n    const {archive, restore} = statusAction;\n\n    if (archive) {\n      return <span>Are you sure you wish to <strong>archive all selected records</strong>?</span>;\n    }\n    \n    if (restore) {\n      return <span>Are you sure you wish to move <strong>all selected records</strong> to <strong>All Incoming</strong>?</span>;\n    }\n  };\n\n  const MainContent = () =>  (\n    <div className='form-index position-relative'>\n      {titleText && <Title text={titleText} />}\n       {statusAction.active && <ModalConfirmation\n        onNo={onNo}\n        onYes={onYes}\n        message={getConfirmationMessage()}\n        onModalCloseClick={onNo}\n      />}\n      <Errors errors={[formState.error, submissionsState.error]} />\n      {trackingSubmission && <RouteTrackingModal routeTrack={trackingSubmission} onModalCloseClick={()=> setTrackingSubmission(null)}/>}\n   \n      {!_.isEmpty(submissionsState.submissions) ? <Grid/> : 'No items to display.'}\n    </div>\n  );\n\n  if (formState.error && FormError) {\n    return(\n      <FormError error={formState.error}>\n        <MainContent />\n      </FormError>\n    );\n  }\n\n  return <MainContent />;\n}\n\nexport default RoutedSubmissionsList;\n","import _ from 'lodash';\n\nexport  const readOnlyRoles = {\n  cc: 'cc',\n  bcc: 'bcc',\n  prevOwner: 'prevOwner',\n\n};\nexport const routedSubmissionRoles = {\n  routeInitiator: 'routeInitiator',\n  owner: 'owner',\n  noAccess: 'noAccess',\n  ...readOnlyRoles\n}\n\nexport const getReadOnlyUserRoleData = (tracks, userId) => {\n  let userRole = null;\n  let prevOwnerTrack = 0;\n  const currentRoute =_.chain(tracks)\n    .findLast((track, trackIndex) => {\n      const ccs = _.get(track, 'senderInfo[0].cc', []);\n      const bccs = _.get(track, 'senderInfo[0].bcc', []);\n      const prevOwners = _.get(track, 'recipientsInfo', []);\n      if ( _.some(prevOwners, prevOwner => _.get(prevOwner, 'to[0]._id', '') === userId)) {\n        prevOwnerTrack = trackIndex;\n        userRole = readOnlyRoles.prevOwner;\n        return true;\n      } \n      if(_.some(ccs, cc => cc._id === userId)) {\n        userRole = readOnlyRoles.cc;\n        return true;\n      }\n      if( _.some(bccs, bcc => bcc._id === userId)) {\n        userRole = readOnlyRoles.bcc;\n        return true;\n      }\n      return false;\n    })\n    .value();\n\n    return {\n      currentRoute,\n      userRole,\n      prevOwnerTrack\n    }\n};\n\nexport const getUserRole = (routeTrack, userId) => {\n  const routeInitiators = _.get(routeTrack, 'data.routeInitiators', []);\n  const currentOwners = _.get(routeTrack, 'data.currentRoute.owners', []);\n  const currentReadOnlyUsers = _.get(routeTrack, 'data.currentRoute.readOnlyUsers', []);\n\n  if (_.some(currentOwners, owner => owner._id === userId)) {\n    return routedSubmissionRoles.owner;\n  }\n  \n  const isReadOnly = _.some(currentReadOnlyUsers, readOnlyUser => readOnlyUser._id === userId);\n\n  if (_.some(routeInitiators, routeInitiator => routeInitiator._id === userId) && !isReadOnly) {\n    return routedSubmissionRoles.routeInitiator;\n  }\n  \n  if (isReadOnly) {\n    return getReadOnlyUserRoleData(_.get(routeTrack, 'data.tracking', []), userId).userRole;\n  }\n\n  return routedSubmissionRoles.noAccess;\n}","import { NavLink, Route, Switch, useParams, Redirect } from 'react-router-dom'\nimport React, { useEffect, useMemo, useState } from 'react';\nimport {  Errors } from '@formio/react';\nimport _ from 'lodash';\n\nimport { useSubmission, getSubmissionAndRouteTrack } from '../../submission/submissionContext';\nimport { useForm } from '../../form';\nimport { Loading, Title } from '../../../../common';\nimport { ArchivedSubmissionAlert, RoutedSubmissionAlert, CurrentSubmissionRedirect} from '../../partials';\nimport { getUserRole, readOnlyRoles, routedSubmissionRoles } from '../../FormsUtils';\nimport { useAuth } from '../../../auth';\nimport { isRoutedArchived } from '../../../../utils';\nimport ProcessSubmissionView from '../../submission/components/ProcessSubmissionView';\nimport { SubmissionConvertButtons } from '../../convertButtons';\nimport { SubmissionView, SubmissionConversionProvider } from '../../submission';\n\nconst RoutedSubmissionPage = () => {\n  const { formId, submissionId } = useParams();\n  const { dispatch, state: submissionState } = useSubmission();\n  const { state: formState } = useForm();\n  const {isActive: isSubmissionActive, submission, routeTrack, error: submissionError} = submissionState;\n  const { isProcess} = formState;\n  const {state: userSate} = useAuth();\n  const {user} = userSate;\n\n  const [userRole, setUserRole] = useState(false);\n\n  const isArchived = useMemo(() => isRoutedArchived(routeTrack, user), [user, routeTrack]);\n\n  useEffect(() => {\n    getSubmissionAndRouteTrack(dispatch, submissionId, formId);\n  }, [dispatch, submissionId, formId]);\n\n  useEffect(() => {\n    if(!_.isEmpty(user) && !_.isEmpty(submission)) {\n      setUserRole(getUserRole(routeTrack, user._id));\n    }\n  }, [submissionId, formId, submission, user, routeTrack]);\n\n  const View = () => isProcess\n    ? <SubmissionConversionProvider><ProcessSubmissionView readOnly={true} /></SubmissionConversionProvider>\n    : <SubmissionView readOnly={true} />;\n\n  const navbarLinks = _.sortBy([\n    {icon: \"fa fa-chevron-left\", path: isArchived ? `/form/${formId}/archived/routed`:`/form/${formId}/routed`, title: '', priority: 0 },\n    {icon: \"fa fa-eye\", path: `/form/${formId}/routed/${submissionId}`, title: 'View', priority: 10 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs\">\n      {navbarLinks.map(link => {\n        return (\n          <li className=\"nav-item\" key={link.title}>\n          <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true} to={link.path}  >\n            <i className={link.icon}></i> {link.title}\n          </NavLink>\n          </li>\n        )\n      })}\n    </ul>\n  );\n\n  if (submissionError) {\n    return <Errors errors={[submissionError]}/>\n  }\n\n  if(isSubmissionActive || _.isEmpty(submission) || !userRole) {\n    return <Loading/>;\n  }\n\n  if (_.get(submission, 'metadata.archived', false)) {\n    return <Redirect to={`/form/${formId}/archived/${submissionId}`} />\n  }\n\n  if (userRole && userRole !== routedSubmissionRoles.routeInitiator){\n    if (userRole === routedSubmissionRoles.owner){\n      return <Redirect to={`/form/${formId}/incoming/${submissionId}`} />\n    }\n    if (_.some(readOnlyRoles, role => role === userRole) ){\n      return <Redirect to={`/form/${formId}/tracked/${submissionId}`} />\n    }\n    return <CurrentSubmissionRedirect submission={submission} formId={formId} submissionId={submissionId}/>\n  }\n\n  return (\n    <div>\n      <Title text={`${_.get(formState, 'form.title', '')}  - Routed Submission`}/>\n      {isArchived && <ArchivedSubmissionAlert/>}\n      <RoutedSubmissionAlert message={`This ${isProcess ? 'process' : 'form submission'} has been routed to other users and is available to you in read-only mode.`} routedSubmission={routeTrack}/>\n      <SubmissionConversionProvider>{!isProcess && <SubmissionConvertButtons/>}</SubmissionConversionProvider>\n      <Navbar />\n      <Switch>\n        <Route\n          exact\n          path=\"/form/:formId/routed/:submissionId\"\n          component={View}\n        />\n      </Switch>\n    </div>\n  )\n};\n\nexport default RoutedSubmissionPage;\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\n\nimport RoutedSubmissionsList from './RoutedSubmissionsList';\nimport { SubmissionsProvider } from '../../submission/submissionsContext';\nimport RoutedSubmissionPage from './RoutedSubmissionPage';\nimport { SubmissionProvider } from '../../submission/submissionContext';\n\nconst RoutedSubmissionsPage = () => (\n  <SubmissionsProvider>\n    <Switch>\n      <Route\n        exact\n        path=\"/form/:formId/routed\"\n        component={RoutedSubmissionsList}\n      />\n      <Route\n        path=\"/form/:formId/routed/:submissionId\"\n        render={(props) => <SubmissionProvider><RoutedSubmissionPage {...props} /></SubmissionProvider>}\n      />\n    </Switch>\n  </SubmissionsProvider>\n);\n\nexport default RoutedSubmissionsPage;\n","import { NavLink, Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport _ from 'lodash';\nimport RoutedSubmissionsList from './RoutedSubmissionsList';\nimport { SubmissionsProvider } from '../../submission/submissionsContext';\nimport { Title } from '../../../../common';\n\nconst AllRoutedSubmissionsPage = () => {\n  const navbarLinks = _.sortBy([ \n    {icon: \"\", path: `/routed`, title: 'All Routed', priority: 10 },\n    {icon: \"\", path: `/routed/archived`, title: 'All Routed Archived', priority: 20 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs mb-3\">\n      {navbarLinks.map(link => {\n        return (\n          <li className=\"nav-item\" key={link.title}>\n          <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true } to={link.path}  >\n            <i className={link.icon}></i> {link.title}\n          </NavLink>\n          </li>\n        )\n      })}\n    </ul>\n  );\n\n  return (\n    <>\n      <Title text={'All Routed Submissions'}/>\n      <Navbar/>\n      <SubmissionsProvider>\n        <Switch>\n          <Route\n            path=\"/routed\"\n            exact\n            render={(props) =><RoutedSubmissionsList {...props} />}\n          />\n          <Route\n            path=\"/routed/archived\"\n            exact\n            render={(props) => <SubmissionsProvider><RoutedSubmissionsList {...props} archived={true} /></SubmissionsProvider>}\n          />\n        </Switch>\n      </SubmissionsProvider>\n    </>\n)};\n\nexport default AllRoutedSubmissionsPage;\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Errors, Form} from '@formio/react';\nimport _ from 'lodash';\n\nimport { Loading, Title } from '../../../../common';\nimport { useForm } from '../../form';\nimport { useSubmissions, indexSubmissions, saveSubmissions } from '../../submission/submissionsContext';\nimport { FormsConfig } from '../../../../config';\nimport { useAuth } from '../../../auth';\nimport { ModalConfirmation, RouteTrackingModal } from '../../partials';\nimport { addSelectedRowsClass, removeRouteTrackArchiveUser, setRouteTrackArchiveUser } from '../../../../utils';\nimport { useAlerts } from '../../../alerts';\n\n\nconst IncomingSubmissionsList = (props) => {\n  const {\n    FormError,\n    archived,\n    id,\n    submissionsRequestParams,\n    hideTitle\n  } = props;\n  const selectedRowIdProperty = 'routeTrackId';\n\n  const history = useHistory();\n  const formId  = useParams().formId || id;\n  const {state: authState} = useAuth();\n  const {user} = authState;\n  const defaultRequestParams = {\n    limit: 100000,\n    query: {\n      ...(formId ? {'data.routedForm.id': formId} : {}),\n      'data.currentRoute.owners._id': user._id,\n      [`data.currentRoute.archiveUsers._id${archived ? '':'__ne'}`]: user._id,\n    },\n    select: '',\n    sort: '-data.currentRoute.date',\n    ...submissionsRequestParams\n  };\n\n  const defaultStatusAction = {\n    active:false,\n    selectedIds: [],\n    archive: false,\n    restore: false,\n  };\n  \n  const [requestParams, setRequestParams] = useState(defaultRequestParams);\n  const [paramsSet, setParamsSet] = useState(false);\n  const [trackingSubmission, setTrackingSubmission] = useState(null);\n  const [statusAction, setStatusAction] = useState(defaultStatusAction);\n\n  const { state: submissionsState, dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const { state: formState} = useForm();\n  const { addAlert } = useAlerts();\n\n  useEffect(()=> {\n    setRequestParams((requestParams) => {\n      const updatedRequestParams = {...requestParams, ...submissionsRequestParams};\n      setParamsSet(true);\n\n      return !_.isEqual(requestParams, updatedRequestParams) \n        ? updatedRequestParams\n        : requestParams;\n    });\n  }, [submissionsRequestParams, formId, archived]);\n\n  const getSubmissions = useCallback(\n    (page, query) => {\n      indexSubmissions(dispatchSubmissionsAction, page, requestParams, query, null, FormsConfig.routeTrack);\n    },\n    [dispatchSubmissionsAction, requestParams]\n  );\n\n  useEffect(() => {\n    getSubmissions(1);\n  }, [getSubmissions, formId, requestParams, archived]);\n\n  const isLoading = formState.isActive || submissionsState.isActive || !paramsSet;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  const getGridSubmissionsData = () => {\n    const routedSubmissions = submissionsState.submissions;\n\n    return _.map(routedSubmissions, (subm) => {\n      const inCopy = _.chain(subm).get('data.currentRoute.readOnlyUsers', []).some(readOnlyUser => readOnlyUser._id === user._id).value();\n      const trackingData = _.get(subm, 'data.tracking', []);\n      const currentRoute = inCopy \n        ? _.chain(trackingData)\n            .findLast(track => {\n              const ccs = _.get(track, 'senderInfo[0].cc', []);\n              const bccs = _.get(track, 'senderInfo[0].bcc', [])\n              return _.some(ccs, cc => cc._id === user._id) || _.some(bccs, bcc => bcc._id === user._id)\n            })\n            .value()\n        : _.last(trackingData);\n\n      return {\n        routeTrackId: subm._id,\n        routedSubmissionId: _.get(subm, 'data.routedSubmission.id', ''),\n        submissionName: _.get(subm, 'data.routedSubmission.name', ''),\n        formId: formId ||  _.get(subm, 'data.routedForm.id', ''),\n        formTitle: formId ?  _.get(formState, 'form.title', '') : _.get(subm, 'data.routedForm.title', ''),\n        from: _.get(currentRoute, 'senderInfo[0].from[0].data.email'),\n        dateSent: _.get(subm, 'data.currentRoute.date', ''),\n        inCopy, \n        dateOpened: _.chain(currentRoute).get('recipientsInfo', [])\n          .filter(recipientInfo => {\n            return inCopy\n             ? recipientInfo.opened\n             : recipientInfo.opened && _.get(recipientInfo, 'to[0]._id', '') === user._id\n          })\n          .map(recipientInfo => {\n            const openedDate = recipientInfo.dateOpened;\n            return {\n              date: openedDate,\n              formattedDate: new Date(openedDate),\n            }\n          })\n          .minBy('formattedDate')\n          .get('date', '')\n          .value()\n       }})\n\n  }\n  const gridSubmissions = submissionsState.submissions.map(subm => ({...subm.data}));\n\n  const addStyleToUnopenedRecords = (gridComp) => {\n    gridComp.dataTableReady.promise.then(() => {\n      const gridBody = _.get(gridComp, 'formioGrid.tbody', {});\n      const rows = _.get(gridBody, 'refs.row', []);\n      const rowsData = gridBody.data;\n\n      _.each(rowsData,(data, index) => {\n        if (!data.dateOpened && rows[index]) {\n          rows[index].classList.add('font-weight-bold');\n        }\n      })\n    })\n  }\n\n  const Grid = () => (\n    <Form\n      submission={ {data: {submissions: getGridSubmissionsData(), selectedSubmissions: statusAction.selectedIds}}}\n      src={FormsConfig.getSrc('routedSubmissionsTable')}\n      options={{viewIncoming: true, hide: {restore: !archived, moveToArchived: archived}, noSubmit: true, ...formState.options}}\n      formReady={(form)=> {\n        const gridComp = form.getComponent('submissions');\n\n        form.on('change', ()=> {\n          addStyleToUnopenedRecords(gridComp);\n        });\n\n        form.on('page', ()=> {\n          addStyleToUnopenedRecords(gridComp);\n        });\n   \n        form.on('track', (row)=> {\n          const submission = submissionsState.submissions.find(subm => row.routeTrackId === subm._id );\n          setTrackingSubmission(submission);\n        });\n\n        form.on('open', (rowData)=> {\n          if (rowData) {\n            //archived ? `/form/${rowData.formId}/archived/incoming/${rowData.routedSubmissionId}` :\n            history.push( `/form/${rowData.formId}/incoming/${rowData.routedSubmissionId}`);\n          }\n        });\n\n        form.on('page', ()=> {\n          addSelectedRowsClass(form, form.data.selectedSubmissions, selectedRowIdProperty);\n        });\n\n        form.on('deselectAll', () => {\n          addSelectedRowsClass(form, [], selectedRowIdProperty);\n        });\n\n        form.on('selectRow', (data)=> {\n          const selectedSubmissions = form.data.selectedSubmissions;\n          const routeTrackId = data.routeTrackId;\n\n          form.data.selectedSubmissions = _.includes(selectedSubmissions, routeTrackId)\n            ? [..._.filter(selectedSubmissions, id => id !== routeTrackId)]\n            : [...selectedSubmissions, routeTrackId];\n\n          addSelectedRowsClass(form, form.data.selectedSubmissions, selectedRowIdProperty);\n          form.triggerChange();\n        });\n\n        \n        form.on('moveToArchived', () => {\n          setStatusAction({\n            ...defaultStatusAction,\n            active: true,\n            selectedIds:  form.data.selectedSubmissions || [],\n            archive: true,\n          })\n        });\n\n        form.on('restoreArchived', () => {\n          setStatusAction({\n            ...defaultStatusAction,\n            active: true,\n            selectedIds:  form.data.selectedSubmissions || [],\n            restore: true\n          })\n        });\n      }}\n    />\n  );\n\n  const onNo = () => {\n    setStatusAction({\n      ...defaultStatusAction,\n      selectedIds: statusAction.selectedIds,\n    })\n  };\n\n  const onYes = () => {\n    const {selectedIds, restore, archive} = statusAction;\n    const updatedSubmissions = _.chain(submissionsState.submissions)\n      .filter(subm => _.some(selectedIds, id => subm._id === id))\n      .each(subm => {\n        if (archive) {\n          setRouteTrackArchiveUser(subm, user);\n        }\n        if (restore) {\n          removeRouteTrackArchiveUser(subm, user);\n        }\n      })\n      .value();\n\n    saveSubmissions(dispatchSubmissionsAction, updatedSubmissions, null, FormsConfig.routeTrack, (err) => {\n      if(!err) {\n        const {restore, archive} = statusAction;\n        getSubmissions(1);\n        setStatusAction(defaultStatusAction);\n        addAlert({ type: 'success', content: `Records are successfully ${(restore && 'restored') || (archive && 'archived') || 'updated'} `}); \n      }\n    });\n  } \n\n  const titleText = formId && !hideTitle ? `Incoming Submissions - ${formState.form.title} Form ` : '';\n\n  const getConfirmationMessage = () => {\n    const {archive, restore} = statusAction;\n\n    if (archive) {\n      return <span>Are you sure you wish to <strong>archive all selected records</strong>?</span>;\n    }\n    \n    if (restore) {\n      return <span>Are you sure you wish to move <strong>all selected records</strong> to <strong>All Incoming</strong>?</span>;\n    }\n  };\n\n\n  const MainContent = () =>  {\n    return (\n    <div className='form-index position-relative'>\n      {titleText && <Title text={titleText} />}\n      {statusAction.active && <ModalConfirmation\n        onNo={onNo}\n        onYes={onYes}\n        message={getConfirmationMessage()}\n        onModalCloseClick={onNo}\n      />}\n      <Errors errors={[formState.error, submissionsState.error]} />\n      {trackingSubmission && <RouteTrackingModal routeTrack={trackingSubmission} onModalCloseClick={()=> setTrackingSubmission(null)} />}\n      {!_.isEmpty(gridSubmissions) ? <Grid/> : 'No items to display.'}\n    </div>\n  )};\n\n \n\n  if (formState.error && FormError) {\n    return(\n      <FormError error={formState.error}>\n        <MainContent />\n      </FormError>\n    );\n  }\n\n  return <MainContent />;\n}\n\nIncomingSubmissionsList.defaultProps = {\n  submissionsRequestParams: {}\n};\n\nexport default IncomingSubmissionsList;\n","import { NavLink, Route, Switch, useParams, Redirect, useHistory } from 'react-router-dom'\nimport React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport {  Errors } from '@formio/react';\nimport _ from 'lodash';\n\nimport { useSubmission, getSubmissionAndRouteTrack,saveSubmissionTrack, saveSubmission} from '../../submission/submissionContext';\nimport SubmissionRoute from '../../submission/components/SubmissionRoute';\nimport { useForm } from '../../form';\nimport { Loading, Title } from '../../../../common';\nimport { ArchivedSubmissionAlert, RoutedSubmissionAlert, CurrentSubmissionRedirect} from '../../partials';\nimport { setBeforeLogoutAction, useAuth } from '../../../auth';\nimport { getIncomingUnopenedSubmissonsCount, useIncomingCount } from '../../../incomingCount';\nimport { getUserRole, readOnlyRoles, routedSubmissionRoles } from '../../FormsUtils';\nimport { getCutLocationPath, isRoutedArchived, setSoleOwnership, unsetSoleOwnership } from '../../../../utils';\nimport ProcessSubmissionView from '../../submission/components/ProcessSubmissionView';\nimport { SubmissionConvertButtons } from '../../convertButtons';\nimport { SubmissionView, SubmissionConversionProvider } from '../../submission';\n\nconst IncomingSubmissionPage = () => {\n  const history = useHistory();\n  const location = history.location.pathname;\n  const { formId, submissionId } = useParams();\n  const { dispatch, state: submissionState } = useSubmission();\n  const { state: formState } = useForm();\n  const {isProcess} = formState;\n  const {isActive: isSubmissionActive, submission, routeTrack, error: submissionError} = submissionState;\n  const {dispatch: dispatchAuthAction, state: userSate} = useAuth();\n  const {user, beforeLogoutActionExecution} = userSate;\n  const {dispatch: dispatchIncomingCountAction} = useIncomingCount();\n\n  const [userRole, setUserRole] = useState(false);\n  const [openedSet, setOpened] = useState(false); \n  const isOwner = useMemo(() => userRole === routedSubmissionRoles.owner, [userRole]);\n  const isArchived = useMemo(() => isRoutedArchived(routeTrack, user), [user, routeTrack]);\n  const currentTrack = useMemo(() => _.chain(routeTrack).get('data.tracking', []).last().value(), [routeTrack]);\n\n  const groupRoutingData = useMemo(() => {\n    const routeOwners = _.get(routeTrack, 'data.currentRoute.owners', []);\n    const blockedOwners = _.get(submission, 'data.submissionAccessData.blockedOwners', []);\n    const currentOwners = _.get(submission, 'data.submissionAccessData.owners', []);\n    const currentOwner = !!blockedOwners.length ? currentOwners[0] : null;\n\n    return {\n      groupRouting: routeOwners.length > 1,\n      groupSize: routeOwners.length,\n      owners: _.map(routeOwners, owner => _.get(owner, 'data.email', '')),\n      currentOwner,\n      isUserCurrentOwner: !!blockedOwners.length ? user._id === currentOwner._id : false\n    }\n  }, [routeTrack, submission, user]);\n\n  const onlyRead = useMemo(() => {\n    return isOwner && groupRoutingData.groupRouting && !groupRoutingData.isUserCurrentOwner\n  }, [isOwner, groupRoutingData]);\n\n  const saveUpdatedSubmission = useCallback((done = ()=>{})=> {\n    return saveSubmission(dispatch, submission, formId, null, done);\n  }, [dispatch, formId, submission]);\n\n  const dispatchBeforeLogoutAction = useCallback((action) => {\n    dispatchAuthAction(setBeforeLogoutAction(action));\n  }, [dispatchAuthAction])\n\n  const executeSoleOwnershipRemoval = useCallback(() => {\n    unsetSoleOwnership(submission);\n    saveUpdatedSubmission((err, submission) => {\n      if (!err) {\n        dispatchBeforeLogoutAction(false);\n      }\n    });\n  }, [submission, saveUpdatedSubmission, dispatchBeforeLogoutAction]);\n\n  useEffect(() => {\n    getSubmissionAndRouteTrack(dispatch, submissionId, formId, null, (err, data) => {\n      if(!err) {\n        const {submission} = data;\n        const blockedOwners = _.get(submission, 'data.submissionAccessData.blockedOwners', []);\n\n        if(!!blockedOwners.length && _.get(submission, 'data.submissionAccessData.owners[0]._id', []) === user._id) {\n          dispatchBeforeLogoutAction(true);\n        }\n      }\n    });\n  }, [dispatch, submissionId,formId, dispatchBeforeLogoutAction, user]);\n\n  useEffect(() => {\n    if (groupRoutingData.isUserCurrentOwner && beforeLogoutActionExecution) {\n      executeSoleOwnershipRemoval();\n    }\n\n    return () => {\n      if (groupRoutingData.isUserCurrentOwner && (getCutLocationPath(location, 5) !== getCutLocationPath(history.location.pathname, 5))) {\n        executeSoleOwnershipRemoval();\n      }\n    }\n  }, [executeSoleOwnershipRemoval, beforeLogoutActionExecution,groupRoutingData, location, history]);\n\n  useEffect(() => {\n    if (isOwner && !_.isEmpty(user) && !_.isEmpty(submission)) {\n      const recipientInfo = _.chain(currentTrack).get('recipientsInfo', []).find(recipient => _.get(recipient, 'to[0]._id', '') === user._id).value();\n\n      if (recipientInfo && !_.get(recipientInfo, 'opened', false) && !openedSet) {\n        _.set(recipientInfo, 'opened', true);\n        _.set(recipientInfo, 'dateOpened', new Date().toISOString());\n\n        saveSubmissionTrack(dispatch, routeTrack, (err)=> {\n          if(!err) {\n            getIncomingUnopenedSubmissonsCount(dispatchIncomingCountAction, user._id);\n            setOpened(true)\n          }\n        });\n      } else {\n        setOpened(true);\n      }\n    }\n  }, [dispatch, submissionId, formId, routeTrack, submission, currentTrack, isOwner, user, dispatchIncomingCountAction, openedSet]);\n\n  useEffect(() => {\n    if(!_.isEmpty(user) && !_.isEmpty(submission)) {\n      setUserRole(getUserRole(routeTrack, user._id));\n    }\n  }, [submissionId, formId, submission, user, routeTrack]);\n\n  const View = useCallback(() => isProcess\n    ? <SubmissionConversionProvider><ProcessSubmissionView readOnly={onlyRead}/></SubmissionConversionProvider>\n    : <SubmissionView noRedirectOnSubmit={true} readOnly={true} />, [isProcess, onlyRead]);\n  const Edit = useCallback(() => isProcess\n    ? <SubmissionConversionProvider><ProcessSubmissionView /></SubmissionConversionProvider>\n    : <SubmissionView noRedirectOnSubmit={true} disableSubmissionName={true} readOnly={false} />, [isProcess]);\n\n  const navbarLinks = _.sortBy([\n    {icon: \"fa fa-chevron-left\", path: isArchived ? `/form/${formId}/archived/incoming`: `/form/${formId}/incoming`, title: '',  priority: 0 },\n    {icon: \"fa fa-eye\", path: `/form/${formId}/incoming/${submissionId}`, condition:  !isProcess, title: 'View',  priority: 10 },\n    {icon: \"fa fa-edit\", path: `/form/${formId}/incoming/${submissionId}/edit`, title: 'Edit', condition: !isArchived && !isProcess && !onlyRead, priority: 20 },\n    {icon: \"fa fa-level-up\", path: `/form/${formId}/incoming/${submissionId}/route`, title: 'Route', condition: !isArchived && !isProcess && !onlyRead , priority: 30 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs\">\n      {navbarLinks.map(link => {\n        if (_.isBoolean(link.condition) && !link.condition) return null;\n        return (\n          <li className=\"nav-item\" key={link.title}>\n          <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true} to={link.path}  >\n            <i className={link.icon}></i> {link.title}\n          </NavLink>\n          </li>\n        )\n      })}\n    </ul>\n  );\n\n  if (submissionError) {\n    return <Errors errors={[submissionError]}/>\n  }\n\n  if (isSubmissionActive || _.isEmpty(submission) || !userRole) {\n    return <Loading/>;\n  }\n\n  if (userRole && !isOwner){\n    if (userRole === routedSubmissionRoles.routeInitiator){\n      return <Redirect to={`/form/${formId}/routed/${submissionId}`} />;\n    }\n\n    if (_.some(readOnlyRoles, role => role === userRole) ){\n      return <Redirect to={`/form/${formId}/tracked/${submissionId}`} />;\n    }\n\n    return <CurrentSubmissionRedirect submission={submission} formId={formId} submissionId={submissionId}/>;\n  }\n\n  const takeSoleOwnership = () => {\n    const {_id} = user;\n\n    setSoleOwnership(submission, _id);\n    saveUpdatedSubmission((err, submission) => {\n      if (!err) {\n        dispatchBeforeLogoutAction(true);\n      }\n    });\n  }\n\n  const getMessage = () => {\n    const isGroupRouting = groupRoutingData.groupRouting;\n    const currentOwner = groupRoutingData.currentOwner;\n    const isUserCurrentOwner = groupRoutingData.isUserCurrentOwner;\n\n    if (isOwner && isGroupRouting) {\n      return <div>\n        <span>This {isProcess ? 'process' : 'form submission'} has been routed to a group of users. You are one of <strong>{groupRoutingData.groupSize} owners</strong> of this {isProcess ? 'process' : 'form submission'}. </span>\n        {!currentOwner && <span>Only one owner at a time may access the actions or edit the attached form submission(s). By clicking on the <strong>View Actions</strong> button you will open the process but <strong>temporally lock out the other owners</strong>.</span>}\n        {!currentOwner && <button className=\"d-block my-3 btn btn-primary btn-sm\" onClick={takeSoleOwnership}>View Actions</button>}\n        {currentOwner && isUserCurrentOwner && <p className=\"my-2\">You have taken the <strong>full ownership</strong> for this {isProcess ? 'process' : 'form submission'} and locked out the other ownership participants.</p>}\n        {currentOwner && !isUserCurrentOwner && <p className=\"my-2\">This {isProcess ? 'process' : 'form submission'} is currently opened by <strong>{_.get(groupRoutingData, 'currentOwner.data.email', '')}</strong>. You cannot get full ownership of it. Please try later.</p>}\n        <hr/>\n        <div className=\"my-3\">\n          <span>Current ownership participants:</span>\n          {_.map(groupRoutingData.owners, owner => <span className=\"mx-2 font-weight-bold\" key={owner}><i className=\"fa fa-user-o\" aria-hidden=\"true\"></i><span className=\"ml-2\">{owner}</span></span>)}\n        </div>\n      </div>\n    }\n\n\n    if ( isOwner && !isGroupRouting ) {\n      return <span>This {isProcess ? 'process' : 'form submission'} has been routed to you and you are the <strong>sole owner</strong> of it.</span>;\n    }\n  }\n\n  return (\n    <div>\n      <Title text={`${_.get(formState, 'form.title', '')} -  Incoming Submission`}/>\n      {isArchived && <ArchivedSubmissionAlert/>}\n      <RoutedSubmissionAlert message={getMessage()} routedSubmission={routeTrack}/>\n      {!isProcess && <SubmissionConversionProvider><SubmissionConvertButtons/></SubmissionConversionProvider>}\n      <Navbar />\n      <Switch>\n        <Route\n          exact\n          path=\"/form/:formId/incoming/:submissionId\"\n          component={View}\n        />\n        {isOwner && !isArchived && !isProcess && !onlyRead && [<Route\n          path=\"/form/:formId/incoming/:submissionId/edit\"\n          component={Edit}\n          key=\"edit\"\n        />,\n        <Route\n          path=\"/form/:formId/incoming/:submissionId/route\"\n          key=\"route\"\n          component={SubmissionRoute}\n        />]}\n      </Switch>\n    </div>\n  )\n};\n\nexport default IncomingSubmissionPage;\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport IncomingSubmissionsList from './IncomingSubmissionsList';\nimport IncomingSubmissionPage from './IncomingSubmissionPage';\nimport { SubmissionProvider } from '../../submission/submissionContext';\nimport { SubmissionsProvider } from '../../submission/submissionsContext';\n\nconst IncomingSubmissionsPage = () => (\n  <SubmissionsProvider>\n    <Switch>\n      <Route\n        exact\n        path=\"/form/:formId/incoming\"\n        component={IncomingSubmissionsList}\n      />\n      <Route\n        path=\"/form/:formId/incoming/:submissionId\"\n        render={(props) => <SubmissionProvider><IncomingSubmissionPage {...props} /></SubmissionProvider>}\n      />\n    </Switch>\n  </SubmissionsProvider>\n);\n\nexport default IncomingSubmissionsPage;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Errors, Form} from '@formio/react';\nimport _ from 'lodash';\n\nimport { Loading} from '../../../../common';\nimport { useForm } from '../../form';\nimport { useSubmissions, indexSubmissions} from '../../submission/submissionsContext';\nimport { FormsConfig } from '../../../../config';\nimport { RouteTrackingModalWithRequest } from '../../partials';\nimport { SubmissionProvider } from '../../submission';\n\n\nconst AllSpecialList = (props) => {\n  const {\n    formName,\n    id,\n    submissionsRequestParams = {},\n\n  } = props;\n\n  const history = useHistory();\n  const formId  = useParams().formId || id;\n\n  const defaultRequestParams = {\n    limit: 1000000,\n    query: {},\n    select: '',\n    sort: '-modified',\n    ...submissionsRequestParams\n  };\n  \n  const [requestParams, setRequestParams] = useState(defaultRequestParams);\n  const [paramsSet, setParamsSet] = useState(false);\n\n  const [trackingSubmissionId, setTrackingSubmissionId] = useState(null);\n\n  const { state: submissionsState, dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const { state: formState} = useForm();\n\n  useEffect(()=> {\n    setRequestParams((requestParams) => {\n      const updatedRequestParams = {...requestParams, ...submissionsRequestParams};\n      setParamsSet(true);\n\n      return !_.isEqual(requestParams, updatedRequestParams) \n        ? updatedRequestParams\n        : requestParams;\n    });\n  }, [submissionsRequestParams]);\n\n  const getSubmissions = useCallback(\n    (page, query) => {\n      indexSubmissions(dispatchSubmissionsAction, page, requestParams, query, formId, formName);\n    },\n    [dispatchSubmissionsAction, formId, formName, requestParams]\n  );\n\n  useEffect(() => {\n   getSubmissions(1);\n  }, [getSubmissions, formId,requestParams]);\n\n  const isLoading = formState.isActive || submissionsState.isActive || !paramsSet;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  const gridSubmissions = submissionsState.submissions.map(subm => ({...subm, ...subm.metadata}));\n\n  const Grid = () => (\n    <Form\n      submission={{data: {submissions: gridSubmissions}}}\n      src={FormsConfig.getSrc('namedSubmissionsTable')}\n      options={{noSubmit: true, hide: { select: true}, ...formState.options}}\n      formReady={(form) => {\n        form.on('open', ({_id: submissionId}) => {\n          if (submissionId) {\n            history.push(`/form/${formId}/incoming/${submissionId}`);\n          }\n        });\n\n        form.on('track', ({_id: submissionId})=> {\n          setTrackingSubmissionId(submissionId);\n        });\n      }}\n    />\n  );\n\n  return <div className='form-index position-relative'>\n      <Errors errors={[formState.error, submissionsState.error]} />\n      {trackingSubmissionId && <SubmissionProvider><RouteTrackingModalWithRequest trackingSubmissionId={trackingSubmissionId} onModalCloseClick={()=> setTrackingSubmissionId(null)}/></SubmissionProvider>}\n      {!_.isEmpty(gridSubmissions) ? <Grid/> : 'No items to display.'}\n    </div>\n}\n\nexport default AllSpecialList;\n","import React, { useState } from 'react';\nimport { Form } from '@formio/react';\nimport { FormsConfig } from '../../../../config';\nimport { useAuth } from '../../../auth';\nimport AllSpecialList from './AllSpecialList';\n\nconst AllSpecial = (props) => {\n  const { readOnly} = props;\n  const {state: authState } = useAuth();\n  const { user} = authState;\n  const options = { template: 'bootstrap', iconset: 'fa', readOnly: !!readOnly,  userId: user._id};\n  const [specialParams, setSpecialParams] = useState(null);\n\nconst onSettingsChange = function (data, changeInfo, changed) {\n  if(changed) {\n    setSpecialParams(null);\n  }\n}\n  return (\n    <div>\n      <Form\n        src={FormsConfig.getSrc('allSpecial')}\n        onChange={onSettingsChange}\n        formReady={(form)=> {\n          form.on('showSpecial', (params) => {\n            setSpecialParams(params)\n          });\n        }}\n        options={options}\n      />\n    {specialParams && <AllSpecialList \n      id={specialParams.formId} \n      submissionsRequestParams={{\n      query: {\n        'metadata.routed__exists': true,\n        'data.submissionAccessData.allOwnerIds': user._id,\n        ...specialParams.query\n      }}} \n    />}\n\n    </div>\n  );\n};\n\nexport default AllSpecial;\n","import { NavLink, Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport _ from 'lodash';\nimport IncomingSubmissionsList from './IncomingSubmissionsList';\nimport { SubmissionsProvider } from '../../submission/submissionsContext';\nimport { Title } from '../../../../common';\nimport AllSpecial from './AllSpecial';\n\nconst AllIncomingSubmissionsPage = () => {\n  const navbarLinks = _.sortBy([ \n    {icon: \"\", path: `/incoming`, title: 'All Incoming', priority: 10 },\n    {icon: \"\", path: `/incoming/archived`, title: 'All Incoming Archived', priority: 30 },\n    {icon: \"\", path: `/incoming/special`, title: 'All Special', priority: 20 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs mb-3\">\n      {navbarLinks.map(link => {\n        return (\n          <li className=\"nav-item\" key={link.title}>\n          <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true } to={link.path}  >\n            <i className={link.icon}></i> {link.title}\n          </NavLink>\n          </li>\n        )\n      })}\n    </ul>\n  );\n\n  return (\n    <>\n      <Title text={'All Incoming Submissions'}/>\n      <Navbar/>\n      <SubmissionsProvider>\n        <Switch>\n          <Route\n            path=\"/incoming\"\n            exact\n            render={(props) =><IncomingSubmissionsList {...props} />}\n          />\n          <Route\n            path=\"/incoming/archived\"\n            exact\n            render={(props) => <SubmissionsProvider><IncomingSubmissionsList {...props} archived={true} /></SubmissionsProvider>}\n          />\n          <Route\n            path=\"/incoming/special\"\n            exact\n            render={(props) => <SubmissionsProvider><AllSpecial/></SubmissionsProvider>}\n          />\n        </Switch>\n      </SubmissionsProvider>\n    </>\n)};\n\nexport default AllIncomingSubmissionsPage;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Errors, Form} from '@formio/react';\nimport _ from 'lodash';\n\nimport { Loading, Title} from '../../../../common';\nimport { useForm } from '../../form';\nimport { useSubmissions, indexSubmissions, saveSubmissions } from '../../submission/submissionsContext';\nimport { FormsConfig } from '../../../../config';\nimport { useAlerts } from '../../../alerts';\nimport { ModalConfirmation } from '../../partials';\nimport { addSelectedRowsClass, setSubmissionStatus, submissionStatuses, unsetSubmissionStatus } from '../../../../utils';\n\nconst ArchivedSubmissionsList = (props) => {\n  const {\n    submissionsRequestParams = {},\n    hideTitle\n  } = props;\n  \n  const history = useHistory();\n  const formId  = useParams().formId;\n\n  const defaultRequestParams = {\n    limit: 100000,\n    query: {},\n    select: '',\n    sort: '-modified',\n    ...submissionsRequestParams\n  };\n\n  const defaultStatusAction = {\n    active:false,\n    selectedIds: [],\n    delete: false,\n    moveToCurrent: false,\n  };\n  \n  const [requestParams, setRequestParams] = useState(defaultRequestParams);\n  const [paramsSet, setParamsSet] = useState(false);\n\n  const [statusAction, setStatusAction] = useState(defaultStatusAction);\n\n  const { addAlert } = useAlerts();\n  const { state: submissionsState, dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const { state: formState} = useForm();\n\n  useEffect(()=> {\n    setRequestParams((requestParams) => {\n      const updatedRequestParams = {...requestParams, ...submissionsRequestParams};\n      setParamsSet(true);\n\n      return !_.isEqual(requestParams, updatedRequestParams) \n        ? updatedRequestParams\n        : requestParams;\n    });\n  }, [submissionsRequestParams]);\n\n  const getSubmissions = useCallback(\n    (page, query) => {\n      indexSubmissions(dispatchSubmissionsAction, page, requestParams, query, formId);\n    },\n    [dispatchSubmissionsAction, formId, requestParams]\n  );\n\n  useEffect(() => {\n    getSubmissions(1);\n  }, [getSubmissions, formId,requestParams]);\n \n  const isLoading = formState.isActive || submissionsState.isActive || !paramsSet;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  const gridSubmissions = submissionsState.submissions.map(subm => ({...subm, ...subm.metadata}));\n\n  const onNo = () => {\n    setStatusAction({\n      ...defaultStatusAction,\n      selectedIds: statusAction.selectedIds,\n    })\n  };\n\n  const onYes = () => {\n    const {delete: deleteAction, moveToCurrent, selectedIds} = statusAction;\n    const newStatus = deleteAction ? submissionStatuses.deleted : '';\n    const updatedSubmissions = _.chain(submissionsState.submissions)\n      .filter(subm => _.some(selectedIds, id => subm._id === id))\n      .each(subm => {\n        newStatus \n        ? setSubmissionStatus(subm, newStatus)\n        : unsetSubmissionStatus(subm)\n      })\n      .value();\n\n    saveSubmissions(dispatchSubmissionsAction, updatedSubmissions, formId, null, (err) => {\n      if(!err) {\n        getSubmissions(1);\n        setStatusAction(defaultStatusAction);\n        addAlert({ type: 'success', content: `Form Submissions are successfully moved to the ${(moveToCurrent && 'Current') || (deleteAction && 'Deleted')}`}); \n      }\n    });\n  } \n\n  const Grid = () => (\n    <Form\n      submission={{data: {submissions: gridSubmissions, selectedSubmissions: statusAction.selectedIds}}}\n      src={FormsConfig.getSrc('namedSubmissionsTable')}\n      options={{noSubmit: true, hide: {deletePermanently: true, moveToArchived: true, track:true}, ...formState.options}}\n      formReady={(form)=> {\n        form.on('open', ({_id: submissionId})=> {\n          if (submissionId) {\n            history.push(`/form/${formId}/submission/${submissionId}`);\n          }\n        });\n\n        form.on('page', ()=> {\n          addSelectedRowsClass(form, form.data.selectedSubmissions);\n        });\n\n        form.on('deselectAll', () => {\n          addSelectedRowsClass(form, []);\n        });\n\n        form.on('moveToDeleted', () => {\n          setStatusAction({\n            ...defaultStatusAction,\n            active: true,\n            selectedIds:  form.data.selectedSubmissions || [],\n            delete: true,\n          })\n        });\n\n        form.on('moveToCurrent', () => {\n          setStatusAction({\n            ...defaultStatusAction,\n            active: true,\n            selectedIds:  form.data.selectedSubmissions || [],\n            moveToCurrent: true,\n          })\n        });\n\n        form.on('selectRow', (data)=> {\n          const selectedSubmissions = form.data.selectedSubmissions;\n\n          form.data.selectedSubmissions = _.includes(selectedSubmissions, data._id )\n            ? [..._.filter(selectedSubmissions, id => id !== data._id)]\n            : [...selectedSubmissions, data._id];\n\n          addSelectedRowsClass(form, form.data.selectedSubmissions);\n          form.triggerChange();\n        });\n      }}\n    />\n  );\n\n  const titleText = `Archived Submissions - ${formState.form.title} Form `;\n\n  const getConfirmationMessage = () => {\n    const {delete: deleteAction, moveToCurrent} = statusAction;\n\n    if (deleteAction) {\n      return <span>Are you sure you wish to move <strong>all selected form submission(s)</strong> from the <strong>Archived</strong> to the <strong>Deleted</strong>?</span>;\n    }\n    \n    if (moveToCurrent) {\n      return <span>Are you sure you wish to move <strong>all selected form submission(s)</strong> from the <strong>Archived</strong> to the <strong>Current</strong>?</span>;\n    }\n  };\n\n  const MainContent = () =>  (\n    <div className='form-index position-relative'>\n       {statusAction.active && <ModalConfirmation\n        onNo={onNo}\n        onYes={onYes}\n        message={getConfirmationMessage()}\n        onModalCloseClick={onNo}\n      />}\n      <Errors errors={[formState.error, submissionsState.error]} />\n      {!hideTitle && <Title text={titleText} />}\n      {!_.isEmpty(gridSubmissions) ? <Grid/> : 'No items to display.'}\n    </div>\n  );\n\n  return <MainContent/>;\n}\n\n\nexport default ArchivedSubmissionsList;\n","import { NavLink, Route, Switch, useParams } from 'react-router-dom';\nimport React from 'react';\nimport _ from 'lodash';\n\nimport { SubmissionsProvider } from '../../submission/submissionsContext';\nimport { submissionStatuses } from '../../../../utils';\nimport  ArchivedSubmissionsList  from './ArchivedSubmissionsList';\nimport { IncomingSubmissionsList } from '../../incomingSubmission';\nimport { RoutedSubmissionsList } from '../../routedSubmission';\nimport { Title } from '../../../../common';\nimport { useForm } from '../../form';\n\nconst ArchivedSubmissionsPage = () => {\n  const { formId } = useParams();\n  const {state: formState} = useForm();\n\n  const navbarLinks = _.sortBy([\n    {icon: \"\", path: `/form/${formId}/archived`,  title: 'Current', priority: 10 },\n    {icon: \"\", path: `/form/${formId}/archived/incoming`, exact: false,  title: 'Incoming', priority: 10 },\n    {icon: \"\", path: `/form/${formId}/archived/routed`, exact: false,  title: 'Routed', priority: 20 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs mb-3\">\n      {navbarLinks.map(link => {\n        return (\n          <li className=\"nav-item\" key={link.title}>\n          <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true } to={link.path}  >\n            <i className={link.icon}></i> {link.title}\n          </NavLink>\n          </li>\n        )\n      })}\n    </ul>\n  );\n\n  return (\n    <>\n    <Title text={`Archived Submissions - ${formState.form.title} Form `}/>\n    <Navbar/>\n    <SubmissionsProvider>\n      <Switch>\n      <Route\n          exact\n          path=\"/form/:formId/archived/incoming\"\n          render={(props) => <IncomingSubmissionsList {...props} hideTitle={true} archived={true}/>}\n        />\n        <Route\n          exact\n          path=\"/form/:formId/archived/routed\"\n          render={(props) => <RoutedSubmissionsList {...props} hideTitle={true} archived={true}/>}\n        />\n        <Route\n          exact\n          path=\"/form/:formId/archived\"\n          render={(props) => <ArchivedSubmissionsList hideTitle={true} submissionsRequestParams={{query: {\n            'metadata.routed__exists': false,\n            'metadata.status': submissionStatuses.archived\n          }}} \n          {...props} />}\n        />\n      </Switch>\n    </SubmissionsProvider>\n    </>\n  )\n};\n\nexport default ArchivedSubmissionsPage;\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Errors, Form} from '@formio/react';\nimport _ from 'lodash';\n\nimport { Loading, Title } from '../../../../common';\nimport { useForm } from '../../form';\nimport { useSubmissions, indexSubmissions } from '../../submission/submissionsContext';\nimport { FormsConfig } from '../../../../config';\nimport { useAuth } from '../../../auth';\nimport { RouteTrackingModal } from '../../partials';\nimport { getReadOnlyUserRoleData, readOnlyRoles } from '../../FormsUtils';\n\n\nconst TrackedSubmissionsList = (props) => {\n  const {\n    FormError,\n    getViewPath,\n    id,\n    submissionsRequestParams,\n  } = props;\n\n  const history = useHistory();\n  const formId  = useParams().formId || id;\n  const {state: authState} = useAuth();\n  const {user} = authState;\n  const defaultRequestParams = {\n    limit: 100000,\n    query: {\n      ...(formId ? {'data.routedForm.id': formId} : {}),\n      'data.currentRoute.readOnlyUsers._id': user._id,\n\n    },\n    select: '',\n    sort: '-data.currentRoute.date',\n    ...submissionsRequestParams\n  };\n  \n  const [requestParams, setRequestParams] = useState(defaultRequestParams);\n  const [paramsSet, setParamsSet] = useState(false);\n  const [trackingSubmission, setTrackingSubmission] = useState(null);\n  const { state: submissionsState, dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const { state: formState} = useForm();\n\n  useEffect(()=> {\n    setRequestParams((requestParams) => {\n      const updatedRequestParams = {...requestParams, ...submissionsRequestParams};\n      setParamsSet(true);\n\n      return !_.isEqual(requestParams, updatedRequestParams) \n        ? updatedRequestParams\n        : requestParams;\n    });\n  }, [submissionsRequestParams, formId]);\n\n  const getSubmissions = useCallback(\n    (page, query) => {\n      indexSubmissions(dispatchSubmissionsAction, page, requestParams, query, null, FormsConfig.routeTrack);\n    },\n    [dispatchSubmissionsAction, requestParams]\n  );\n\n  useEffect(() => {\n    getSubmissions(1);\n  }, [getSubmissions, formId,requestParams]);\n \n  const isLoading = formState.isActive || submissionsState.isActive || !paramsSet;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  const getGridSubmissionsData = () => {\n    const routedSubmissions = submissionsState.submissions;\n\n    return _.map(routedSubmissions, (subm) => {\n      const trackingData = _.get(subm, 'data.tracking', []);\n      const roles = readOnlyRoles;\n      const {userRole, prevOwnerTrack, currentRoute} = getReadOnlyUserRoleData(trackingData, user._id)\n         \n      const inCopy = [roles.cc, roles.bcc].includes(userRole);\n      return {\n        routeTrackId: subm._id,\n        routedSubmissionId: _.get(subm, 'data.routedSubmission.id', ''),\n        submissionName: _.get(subm, 'data.routedSubmission.name', ''),\n        formId: formId ||  _.get(subm, 'data.routedForm.id', ''),\n        formTitle: formId ?  _.get(formState, 'form.title', '') : _.get(subm, 'data.routedForm.title', ''),\n        from: _.get(currentRoute, 'senderInfo[0].from[0].data.email'),\n        dateSent: _.get(subm, 'data.currentRoute.date', ''),\n        dateRerouted: userRole === roles.prevOwner ? _.get(trackingData[prevOwnerTrack+1] || {}, 'senderInfo[0].dateSent', '') : '',\n        inCopy, \n        dateOpened: _.chain(currentRoute).get('recipientsInfo', [])\n          .filter(recipientInfo => {\n            return inCopy\n             ? recipientInfo.opened\n             : recipientInfo.opened && _.get(recipientInfo, 'to[0]._id', '') === user._id\n          })\n          .map(recipientInfo => {\n            const openedDate = recipientInfo.dateOpened;\n            return {\n              date: openedDate,\n              formattedDate: new Date(openedDate),\n            }\n          })\n          .minBy('formattedDate')\n          .get('date', '')\n          .value()\n       }})\n  }\n  const gridSubmissions = submissionsState.submissions.map(subm => ({...subm.data}));\n\n  const Grid = () => (\n    <Form\n      submission={ {data: {submissions: getGridSubmissionsData()}}}\n      src={FormsConfig.getSrc('routedSubmissionsTable')}\n      options={{viewTracked: true, noSubmit: true, ...formState.options}}\n      formReady={(form)=> {\n        form.on('track', (row)=> {\n          const submission = submissionsState.submissions.find(subm => row.routeTrackId === subm._id );\n          setTrackingSubmission(submission);\n        });\n\n        form.on('open', (rowData)=> {\n          if (rowData) {\n            history.push(getViewPath ? getViewPath(rowData) : `/form/${rowData.formId}/tracked/${rowData.routedSubmissionId}`);\n          }\n        });\n      }}\n    />\n  );\n\n  const titleText = formId ?  `Tracked Submissions - ${formState.form.title} Form ` : 'All Routed Submissions';\n\n  const MainContent = () =>  (\n    <div className='form-index position-relative'>\n      <Errors errors={[formState.error, submissionsState.error]} />\n      {trackingSubmission && <RouteTrackingModal routeTrack={trackingSubmission} onModalCloseClick={()=> setTrackingSubmission(null)} />}\n      <Title text={titleText} />\n      {!_.isEmpty(gridSubmissions) ? <Grid/> : 'No items to display.'}\n    </div>\n  );\n\n  if (formState.error && FormError) {\n    return(\n      <FormError error={formState.error}>\n        <MainContent />\n      </FormError>\n    );\n  }\n\n  return <MainContent />;\n}\n\nTrackedSubmissionsList.defaultProps = {\n  submissionsRequestParams: {}\n};\n\nexport default TrackedSubmissionsList;\n","import { NavLink, Route, Switch, useParams, Redirect } from 'react-router-dom'\nimport React, { useEffect, useState } from 'react';\nimport {  Errors } from '@formio/react';\nimport _ from 'lodash';\n\nimport { useSubmission, getSubmissionAndRouteTrack } from '../../submission/submissionContext';\nimport { useForm } from '../../form';\nimport { Loading, Title } from '../../../../common';\nimport { RoutedSubmissionAlert, CurrentSubmissionRedirect} from '../../partials';\nimport { useAuth } from '../../../auth';\nimport { getUserRole, readOnlyRoles, routedSubmissionRoles } from '../../FormsUtils';\nimport { SubmissionConvertButtons } from '../../convertButtons';\nimport { SubmissionView, SubmissionConversionProvider } from '../../submission';\nimport ProcessSubmissionView from '../../submission/components/ProcessSubmissionView';\n\nconst TrackedSubmissionPage = () => {\n  const roles = readOnlyRoles;\n\n  const { formId, submissionId } = useParams();\n  const { dispatch, state: submissionState } = useSubmission();\n  const { state: formState } = useForm();\n  const {isProcess} = formState;\n  const {isActive: isSubmissionActive, submission, routeTrack,  error: submissionError} = submissionState;\n  const {state: userSate} = useAuth();\n  const {user} = userSate;\n\n  const [userRole, setUserRole] = useState(null);\n\n  useEffect(() => {\n    getSubmissionAndRouteTrack(dispatch, submissionId, formId);\n  }, [dispatch, submissionId, formId]);\n\n  useEffect(() => {\n    if(!_.isEmpty(user) && !_.isEmpty(submission)) {\n      setUserRole(getUserRole(routeTrack, user._id));\n    }\n  }, [submissionId, formId, submission, user, routeTrack]);\n\n  const View = () => isProcess\n    ? <SubmissionConversionProvider><ProcessSubmissionView readOnly={true} /></SubmissionConversionProvider>\n    : <SubmissionView readOnly={true} />;\n\n  const navbarLinks = _.sortBy([\n    {icon: \"fa fa-chevron-left\", path: `/form/${formId}/tracked`, title: '', priority: 0 },\n    {icon: \"fa fa-eye\", path: `/form/${formId}/tracked/${submissionId}`, title: 'View', priority: 10 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs\">\n      {navbarLinks.map(link => {\n        if(link.role && link.role !== userRole) return null;\n        return (\n          <li className=\"nav-item\" key={link.title}>\n          <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true} to={link.path}  >\n            <i className={link.icon}></i> {link.title}\n          </NavLink>\n          </li>\n        )\n      })}\n    </ul>\n  );\n\n  if (submissionError) {\n    return <Errors errors={[submissionError]}/>\n  }\n\n  if (isSubmissionActive || _.isEmpty(submission) || !userRole) {\n    return <Loading/>;\n  }\n\n  if (userRole && !_.some(readOnlyRoles, role => role === userRole)){\n    if (userRole === routedSubmissionRoles.owner){\n      return <Redirect to={`/form/${formId}/incoming/${submissionId}`} />\n    }\n    if (userRole === routedSubmissionRoles.routeInitiator){\n      return <Redirect to={`/form/${formId}/routed/${submissionId}`} />\n    }\n    return <CurrentSubmissionRedirect submission={submission} formId={formId} submissionId={submissionId}/>\n  }\n\n  const getMessage = () => {\n    if ( userRole === roles.prevOwner ) {\n      return <span>This {isProcess ? 'process' : 'form submission'} has been rerouted to other users and is available in <strong>read-only</strong> mode.</span>\n    }\n    if (userRole === roles.cc) {\n      return <span>You are in <strong>carbon copy</strong> to this {isProcess ? 'process' : 'form submission'} routing. The ${isProcess ? 'process' : 'form submission'} is available in <strong>read-only</strong> mode.</span>\n    }\n    if (userRole === roles.bcc) {\n      return <span>You are in <strong>blind carbon copy</strong> to this {isProcess ? 'process' : 'form submission'} routing. The ${isProcess ? 'process' : 'form submission'} is available in <strong>read-only</strong> mode.</span>\n    }\n  }\n\n  return (\n    <div>\n      <Title text={`${_.get(formState, 'form.title', '')} - Tracked Submission`}/>\n      <RoutedSubmissionAlert message={getMessage()} routedSubmission={routeTrack}/>\n      <SubmissionConversionProvider>{!isProcess && <SubmissionConvertButtons/>}</SubmissionConversionProvider>\n      <Navbar />\n      <Switch>\n        <Route\n          exact\n          path=\"/form/:formId/tracked/:submissionId\"\n          component={View}\n        />\n      </Switch>\n    </div>\n  )\n};\n\nexport default TrackedSubmissionPage;\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport TrackedSubmissionsList from './TrackedSubmissionsList';\nimport TrackedSubmissionPage from './TrackedSubmissionPage';\nimport { SubmissionProvider } from '../../submission/submissionContext';\nimport { SubmissionsProvider } from '../../submission/submissionsContext';\n\nconst TrackedSubmissionsPage = () => (\n  <SubmissionsProvider>\n    <Switch>\n      <Route\n        exact\n        path=\"/form/:formId/tracked\"\n        component={TrackedSubmissionsList}\n      />\n      <Route\n        path=\"/form/:formId/tracked/:submissionId\"\n        render={(props) => <SubmissionProvider><TrackedSubmissionPage {...props} /></SubmissionProvider>}\n      />\n    </Switch>\n  </SubmissionsProvider>\n);\n\nexport default TrackedSubmissionsPage;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Errors, Form} from '@formio/react';\nimport _ from 'lodash';\n\nimport { Loading, Title } from '../../../../common';\nimport { useForm } from '../../form';\nimport { useSubmissions, indexSubmissions } from '../../submission/submissionsContext';\nimport { FormsConfig } from '../../../../config';\nimport { RouteTrackingModal } from '../../partials';\n\nconst DataRoutesList = (props) => {\n  const {\n    FormError,\n    id,\n    submissionsRequestParams,\n  } = props;\n  \n  const history = useHistory();\n  const formId  = useParams().formId || id;\n\n  const defaultRequestParams = {\n    limit: 100000,\n    query: formId ? {'data.routedForm.id': formId} : {},\n    select: '',\n    sort: '-data.currentRoute.date',\n    ...submissionsRequestParams\n  };\n  \n  const [requestParams, setRequestParams] = useState(defaultRequestParams);\n  const [paramsSet, setParamsSet] = useState(false);\n\n  const [trackingSubmission, setTrackingSubmission] = useState(null);\n  const { state: submissionsState, dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const { state: formState} = useForm();\n\n  useEffect(()=> {\n    setRequestParams((requestParams) => {\n      const updatedRequestParams = {...requestParams, ...submissionsRequestParams};\n      setParamsSet(true);\n\n      return !_.isEqual(requestParams, updatedRequestParams) \n        ? updatedRequestParams\n        : requestParams;\n    });\n  }, [submissionsRequestParams, formId]);\n\n  const getSubmissions = useCallback(\n    (page, query) => {\n      indexSubmissions(dispatchSubmissionsAction, page, requestParams, query, null, FormsConfig.routeTrack);\n    },\n    [dispatchSubmissionsAction, requestParams]\n  );\n\n  useEffect(() => {\n    getSubmissions(1);\n  }, [getSubmissions, formId,requestParams]);\n \n  const isLoading = formState.isActive || submissionsState.isActive  || !paramsSet;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  const getGridSubmissionsData = () => {\n    const routedSubmissions = _.chain(submissionsState.submissions)\n      .map(subm => {\n        return {\n          routeTrackId: subm._id,\n          submission: _.get(subm, 'data.routedSubmission'),\n          form: _.get(subm, 'data.routedForm'),\n          data: _.chain(subm)\n            .get('data.tracking', [])\n            .last()\n            .value()\n        };\n      })\n      .value()\n\n    return _.map(routedSubmissions, (subm) => {\n      return {\n        routeTrackId: subm.routeTrackId,\n        routedSubmissionId: _.get(subm, 'submission.id', ''),\n        submissionName: _.get(subm, 'submission.name', ''),\n        formTitle: _.get(formId ? formState : subm, 'form.title', ''),\n        formId: formId || _.get(subm, 'form.id', ''),\n        to: _.chain(subm).get('data.recipientsInfo', []).map(owner => _.get(owner, 'to[0].data.email', '')).value(),\n        dateSent: _.get(subm, 'data.senderInfo[0].dateSent', ''),\n        from:  _.chain(subm).get('data.senderInfo[0].from[0].data.email', []).value()\n      }\n    });\n  }\n\n  const Grid = () => (\n    <Form\n      submission={ {data: {submissions: getGridSubmissionsData()}}}\n      src={FormsConfig.getSrc('routedSubmissionsTable')}\n      options={{adminView: true, hide: {select: true},noSubmit: true, ...formState.options}}\n      formReady={(form)=> {\n        form.on('track', (row)=> {\n          const submission = submissionsState.submissions.find(subm => row.routeTrackId === subm._id);\n          setTrackingSubmission(submission);\n        })\n        form.on('open', (rowData)=> {\n          if (rowData) {\n            history.push(`/form/${rowData.formId}/routes/${rowData.routedSubmissionId}`);\n          }\n        })\n      }}\n    />\n  );\n\n  const titleText =formId ? `Routed Submissions - ${formState.form.title} Form ` : 'All Routed Submissions';\n\n  const MainContent = () =>  (\n    <div className='form-index position-relative'>\n      <Errors errors={[formState.error, submissionsState.error]} />\n      {trackingSubmission && <RouteTrackingModal routeTrack={trackingSubmission} onModalCloseClick={()=> setTrackingSubmission(null)}/>}\n      <Title text={titleText} />\n      {!_.isEmpty(submissionsState.submissions) ? <Grid/> : 'No items to display.'}\n    </div>\n  );\n\n  if (formState.error && FormError) {\n    return(\n      <FormError error={formState.error}>\n        <MainContent />\n      </FormError>\n    );\n  }\n\n  return <MainContent />;\n}\n\nDataRoutesList.defaultProps = {\n  submissionsRequestParams: {}\n};\n\nexport default DataRoutesList;\n","import { useParams, useHistory } from 'react-router-dom'\nimport React, { useEffect, useState , useMemo, useCallback} from 'react';\nimport {  Errors } from '@formio/react';\nimport _ from 'lodash';\n\nimport { useSubmission, getSubmissionAndRouteTrack, cancelLastRoute, saveSubmission } from '../../submission/submissionContext';\nimport { useForm } from '../../form';\nimport { Confirm, Loading, Title } from '../../../../common';\nimport { TrackSubmissionForm } from '../../partials';\nimport { useAlerts } from '../../../alerts';\nimport { getSoleOwner, unsetSoleOwnership } from '../../../../utils';\n\n\nconst DataRoutePage = () => {\n  const history = useHistory();\n  const { formId, submissionId } = useParams();\n  const { dispatch, state: submissionState } = useSubmission();\n  const { state: formState } = useForm();\n  const { isActive: isSubmissionActive, submission, routeTrack, error: submissionError} = submissionState;\n  const [cancelRoute, setCancelRoute] = useState(false);\n  const [removeOwner, setRemoveOwner] = useState(false);\n  const {addAlert} = useAlerts();\n\n  const currentOwner = useMemo(() => {\n    const currentOwnerData = getSoleOwner(submission);\n\n    return {\n      exists: !!currentOwnerData,\n      data: currentOwnerData,\n    }\n  }, [submission])\n\n  useEffect(() => {\n    getSubmissionAndRouteTrack(dispatch, submissionId, formId);\n  }, [dispatch, submissionId, formId]);\n\n  const executeTemporalOwnershipRemoval = useCallback(() => {\n      unsetSoleOwnership(submission);\n      saveSubmission(dispatch, submission, formId, null, () => {\n        setRemoveOwner(false);\n        addAlert({type: 'success', content: 'The current ownership successfully cancelled'});\n      });\n  }, [submission, dispatch, formId, addAlert]);\n\n\n  const lastRouteId = useMemo(()=> _.chain(routeTrack).get('data.tracking', []).last().get('routeId').value(),[routeTrack])\n  if (submissionError) {\n    return <Errors errors={[submissionError]}/>\n  }\n\n  if(isSubmissionActive || _.isEmpty(submission) || _.isEmpty(routeTrack)) {\n    return <Loading/>;\n  }\n\n  const onCancelRoute = () => {\n    unsetSoleOwnership(submission);\n\n    cancelLastRoute(dispatch, routeTrack, submission, formState.form, (err) => {\n      if(!err) {\n        addAlert({type: 'success', content: 'Route succesfully canceled'});\n        history.push(`/form/${formId}/routes`);\n      }\n    })\n  }\n \n  return (\n    <div>\n      <Title text={`${_.get(formState, 'form.title', '')}  - Submission Route`}/>\n      { currentOwner.exists && removeOwner\n        ? <Confirm\n            message={`The removal of full ownership from ${_.get(currentOwner, 'data.data.email', '')} will allow other process ownership participants take the full ownership of the process and edit the process forms submissions. Are you sure, you wish to continue?`}\n            onYes={executeTemporalOwnershipRemoval}\n            onNo={() => setRemoveOwner(false)}\n          />\n        : currentOwner.exists && <button className=\"btn btn-primary my-2\"  onClick={() => setRemoveOwner(true)}>Remove Current Owner - {_.get(currentOwner, 'data.data.email', '')}</button>}\n      <div className=\"alert alert-primary\" role=\"alert\">\n        <TrackSubmissionForm routeTrack={routeTrack} showRoutesIds={true}/>\n      </div>\n      {cancelRoute \n        ? <Confirm\n            message={`After cancellation, the route recipients will lose their current permissions to the form submission. Are you sure you wish to cancel the route ${lastRouteId}?`}\n            onYes={onCancelRoute}\n            onNo={() => setCancelRoute(false)}\n          />\n        : <button className=\"btn btn-primary\" onClick={() => setCancelRoute(true)}>Cancel Last Route <br/>(ID:  {lastRouteId})</button>\n      }\n    </div>\n  )\n};\n\nexport default DataRoutePage;\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\n\nimport DataRoutesList from './DataRoutesList';\nimport { SubmissionsProvider } from '../../submission/submissionsContext';\nimport DataRoutePage from './DataRoutePage';\nimport { SubmissionProvider } from '../../submission/submissionContext';\n\nconst DataRoutesPage = () => (\n  <SubmissionsProvider>\n    <Switch>\n      <Route\n        exact\n        path=\"/form/:formId/routes\"\n        component={DataRoutesList}\n      />\n      <Route\n        path=\"/form/:formId/routes/:submissionId\"\n        render={(props) => <SubmissionProvider><DataRoutePage {...props} /></SubmissionProvider>}\n      />\n    </Switch>\n  </SubmissionsProvider>\n);\n\nexport default DataRoutesPage;\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Errors, Form} from '@formio/react';\nimport _ from 'lodash';\n\nimport { Loading, Title} from '../../../../common';\nimport { useForm } from '../../form';\nimport { useSubmissions, indexSubmissions, saveSubmissions, deleteSubmissions } from '../../submission/submissionsContext';\nimport { FormsConfig } from '../../../../config';\nimport { ModalConfirmation } from '../../partials';\nimport { addSelectedRowsClass, setSubmissionStatus, submissionStatuses, unsetSubmissionStatus } from '../../../../utils';\nimport { useAlerts } from '../../../alerts';\n\nconst DeletedSubmissionsList = (props) => {\n  const {\n    submissionsRequestParams = {},\n  } = props;\n  \n  const history = useHistory();\n  const formId  = useParams().formId;\n\n  const defaultRequestParams = {\n    limit: 100000,\n    query: {},\n    select: '',\n    sort: '-modified',\n    ...submissionsRequestParams\n  };\n  \n  const defaultStatusAction = {\n    active:false,\n    selectedIds: [],\n    deletePermanently: false,\n    archive: false,\n    moveToCurrent: false,\n  };\n  const [requestParams, setRequestParams] = useState(defaultRequestParams);\n  const [paramsSet, setParamsSet] = useState(false);\n\n  const [statusAction, setStatusAction] = useState(defaultStatusAction);\n\n  const { addAlert } = useAlerts();\n\n  const { state: submissionsState, dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const { state: formState} = useForm(defaultStatusAction);\n\n  useEffect(()=> {\n    setRequestParams((requestParams) => {\n      const updatedRequestParams = {...requestParams, ...submissionsRequestParams};\n      setParamsSet(true);\n\n      return !_.isEqual(requestParams, updatedRequestParams) \n        ? updatedRequestParams\n        : requestParams;\n    });\n  }, [submissionsRequestParams]);\n\n  const getSubmissions = useCallback(\n    (page, query) => {\n      indexSubmissions(dispatchSubmissionsAction, page, requestParams, query, formId);\n    },\n    [dispatchSubmissionsAction, formId, requestParams]\n  );\n\n  useEffect(() => {\n    getSubmissions(1);\n  }, [getSubmissions, formId,requestParams]);\n \n  const isLoading = formState.isActive || submissionsState.isActive || !paramsSet;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  const gridSubmissions = submissionsState.submissions.map(subm => ({...subm, ...subm.metadata}));\n\n  const onStatusChanged = () => {\n    getSubmissions(1);\n    setStatusAction(defaultStatusAction);\n  }\n\n  const onNo = () => {\n    setStatusAction({\n      ...defaultStatusAction,\n      selectedIds: statusAction.selectedIds,\n    })\n  };\n\n  const onYes = () => {\n    const {deletePermanently, archive, moveToCurrent, selectedIds} = statusAction;\n\n    if (moveToCurrent || archive) {\n      const newStatus = archive ? submissionStatuses.archived : '';\n\n      const updatedSubmissions = _.chain(submissionsState.submissions)\n        .filter(subm => _.some(selectedIds, id => subm._id === id))\n        .each(subm => {\n          newStatus \n          ? setSubmissionStatus(subm, newStatus)\n          : unsetSubmissionStatus(subm)\n        })\n        .value();\n\n      saveSubmissions(dispatchSubmissionsAction, updatedSubmissions, formId, null, (err) => {\n        if(!err) {\n          onStatusChanged();\n          addAlert({ type: 'success', content: `Form Submissions are successfully moved to the ${(moveToCurrent && 'Current') || (archive && 'Archived')}`}); \n        }\n      });\n    } \n    else if (deletePermanently) {\n      deleteSubmissions(dispatchSubmissionsAction, selectedIds, formId, (err) => {\n        if(!err) {\n          onStatusChanged();\n          addAlert({ type: 'success', content: 'Form Submissions are successfully deleted'});\n        }\n      });\n    }\n  }\n\n  const Grid = () => (\n    <Form\n      submission={ {data: {submissions: gridSubmissions, selectedSubmissions: statusAction.selectedIds}}}\n      src={FormsConfig.getSrc('namedSubmissionsTable')}\n      options={{noSubmit: true, hide: {moveToDeleted: true, track:true}, ...formState.options}}\n      formReady={(form)=> {\n        form.on('open', ({_id: submissionId})=> {\n          if (submissionId) {\n            history.push(`/form/${formId}/submission/${submissionId}`);\n          }\n        });\n\n        form.on('page', ()=> {\n          addSelectedRowsClass(form, form.data.selectedSubmissions);\n        });\n\n        form.on('deselectAll', () => {\n          addSelectedRowsClass(form, []);\n        });\n\n        form.on('moveToArchived', () => {\n          setStatusAction({\n            ...defaultStatusAction,\n            active: true,\n            selectedIds:  form.data.selectedSubmissions || [],\n            archive: true,\n          })\n        });\n\n        form.on('moveToCurrent', () => {\n          setStatusAction({\n            ...defaultStatusAction,\n            active: true,\n            selectedIds:  form.data.selectedSubmissions || [],\n            moveToCurrent: true,\n          })\n        });\n\n        form.on('deletePermanently', () => {\n          setStatusAction({\n            ...defaultStatusAction,\n            active: true,\n            selectedIds:  form.data.selectedSubmissions || [],\n            deletePermanently: true,\n          })\n        });\n \n        form.on('selectRow', (data)=> {\n          const selectedSubmissions = form.data.selectedSubmissions;\n\n          form.data.selectedSubmissions = _.includes(selectedSubmissions, data._id )\n            ? [..._.filter(selectedSubmissions, id => id !== data._id)]\n            : [...selectedSubmissions, data._id];\n\n          addSelectedRowsClass(form, form.data.selectedSubmissions);\n          form.triggerChange();\n        });\n      }}\n    />\n  );\n\n  const titleText = `Deleted Submissions - ${formState.form.title} Form `;\n\n  const getConfirmationMessage = () => {\n    const {deletePermanently, archive, moveToCurrent} = statusAction;\n\n    if (deletePermanently) {\n      return <span>You will not be able to restore form submissions after permanent deletion. Are you sure you wish to delete <strong>all selected form submission(s) permanently</strong>?</span>;\n    }\n\n    if (archive) {\n      return <span>Are you sure you wish to move <strong>all selected form submission(s)</strong> from the <strong>Deleted</strong> to the <strong>Archived</strong>?</span>;\n    }\n\n    if (moveToCurrent) {\n      return <span>Are you sure you wish to move <strong>all selected form submission(s)</strong> from the <strong>Deleted</strong> to the <strong>Current</strong>?</span>;\n    }\n  };\n\n  const MainContent = () =>  (\n    <div className='form-index position-relative'>\n      {statusAction.active && <ModalConfirmation\n        onNo={onNo}\n        onYes={onYes}\n        message={getConfirmationMessage()}\n        onModalCloseClick={onNo}\n      />}\n      <Errors errors={[formState.error, submissionsState.error]} />\n      <Title text={titleText} />\n      {!_.isEmpty(gridSubmissions) ? <Grid/> : 'No items to display.'}\n    </div>\n  );\n\n  return <MainContent/>;\n}\n\n\nexport default DeletedSubmissionsList;\n","import { Route, Switch } from 'react-router-dom';\nimport React from 'react';\n\nimport { SubmissionsProvider } from '../../submission/submissionsContext';\nimport { submissionStatuses } from '../../../../utils';\nimport  DeletedSubmissionsList  from './DeletedSubmissionsList';\n\nconst DeletedSubmissionsPage = () => (\n  <SubmissionsProvider>\n    <Switch>\n      <Route\n        exact\n        path=\"/form/:formId/deleted\"\n        render={(props) => <DeletedSubmissionsList submissionsRequestParams={{query: {\n          'metadata.routed__exists': false,\n          'metadata.status': submissionStatuses.deleted\n        }}} \n        {...props} />}\n      />\n    </Switch>\n  </SubmissionsProvider>\n);\n\nexport default DeletedSubmissionsPage;\n","import { Templates, Formio } from '@formio/react';\nimport BuilderUtils from 'formiojs/utils/builder.js';\nimport Webform from 'formiojs/Webform.js';\nimport {Utils} from 'formiojs';\nimport _ from 'lodash';\nimport { formsStageId } from '../../../../utils';\n\n\nconst WebformBuilder = Formio.Builders.getBuilder('webform');\nclass ProcessBuilder extends WebformBuilder {\n  constructor() {\n    let element, options;\n    if (arguments[0] instanceof HTMLElement || arguments[1]) {\n      element = arguments[0];\n      options = arguments[1];\n    }\n    else {\n      options = arguments[0];\n    }\n    \n    // Reset skipInit in case PDFBuilder has set it.\n    options.skipInit = false;\n    options.display = 'wizard';\n\n    super(element, options);\n\n    this.page = this.options.page = 0;\n\n    // Need to create a component order for each group.\n    for (const group in this.groups) {\n      if (this.groups[group] && this.groups[group].components) {\n        this.groups[group].componentOrder = Object.keys(this.groups[group].components)\n          .map(key => this.groups[group].components[key])\n          .filter(component => component && !component.ignore)\n          .sort((a, b) => a.weight - b.weight)\n          .map(component => component.key);\n      }\n    }\n\n    this.options.hooks.attachPanel = (element, component) => {\n      if (component.refs.removeComponent) {\n        this.addEventListener(component.refs.removeComponent, 'click', () => {\n          const pageIndex = this.pages.findIndex((page) => page.key === component.key);\n          const componentIndex = this._form.components.findIndex((comp) => comp.key === component.key);\n          if (pageIndex !== -1) {\n            this.removePage(pageIndex, componentIndex);\n          }\n        });\n      }\n    };\n\n    const originalRenderComponentsHook = this.options.hooks.renderComponents;\n    this.options.hooks.renderComponents = (html, { components, self }) => {\n      if (self.type === 'form' && !self.root) {\n        return html;\n      }\n      else {\n        return originalRenderComponentsHook(html, { components, self });\n      }\n    };\n\n    const originalAttachComponentsHook = this.options.hooks.attachComponents;\n    this.options.hooks.attachComponents = (element, components, container, component) => {\n      if (component.type === 'form' && !component.root) {\n        return element;\n      }\n\n      return originalAttachComponentsHook(element, components, container, component);\n    };\n\n    // Wizard pages don't replace themselves in the right array. Do that here.\n    this.on('saveComponent', (component, originalComponent) => {\n      const webformComponents = this.webform.components.map(({ component }) => component);\n      if (this._form.components.includes(originalComponent)) {\n        this._form.components[this._form.components.indexOf(originalComponent)] = component;\n        this.rebuild();\n      }\n      else if (webformComponents.includes(originalComponent)) {\n        this._form.components.push(component);\n        this.rebuild();\n      }\n      else {\n        // Fallback to look for panel based on key.\n        const formComponentIndex = this._form.components.findIndex((comp) => originalComponent.key === comp.key);\n        if (formComponentIndex !== -1) {\n          this._form.components[formComponentIndex] = component;\n          this.rebuild();\n        }\n      }\n    }, true);\n  }\n\n  allowDrop(element) {\n    return (this.webform && this.webform.refs && this.webform.refs.webform === element) ? false : true;\n  }\n\n  get formsStageId() {\n    return formsStageId;\n  }\n\n  get pages() {\n    return _.filter(this._form.components, { type: 'panel' });\n  }\n\n  get currentPage() {\n    const pages = this.pages;\n    return (pages && (pages.length >= this.page)) ? pages[this.page] : null;\n  }\n\n  set form(value) {\n    this._form = value;\n    if (!this._form.components || !Array.isArray(this._form.components)) {\n      this._form.components = [];\n    }\n\n    const {stagesSettings } = value.properties;\n    this.stage = this.options.stage = _.get(stagesSettings, '[0].id', '');\n    const stagesCount = stagesSettings.length;\n\n\n    if (this.pages.length === 0) {\n      // const components = this._form.components.filter((component) => component.type !== 'button');\n      this._form.components = [...this.getDefaultStages(0, stagesCount, stagesSettings)];\n    }\n    else {\n      const stagesIds = _.chain(stagesSettings).map(stage => stage.id).value();\n      const groupedPages = _.chain(this._form.components)\n        .filter(page => _.includes([...stagesIds, this.formsStageId], page.stageId))\n        .groupBy('stageId')\n        .value();\n\n      const reorderedPages = _.map(stagesIds, stageId => groupedPages[stageId] || []);\n      reorderedPages.push(groupedPages[this.formsStageId])\n      this._form.components = _.flatten(reorderedPages) ;\n\n      const currentStagesIds = _.chain(this._form.components).filter(page => page.stageId !== this.formsStageId).groupBy('stageId').keys().value();\n      const currentStagesCount = currentStagesIds.length;\n\n      if (currentStagesCount < stagesCount) {\n        const formComponents = _.map([...stagesIds, this.formsStageId], (stageId, index) => {\n          const stageComponents = _.filter(this._form.components, page => page.stageId === stageId);\n          return !!stageComponents.length ? stageComponents : this.getPageConfig(1, [], stageId) \n        });\n        this._form.components = _.flatten(formComponents);\n      } \n    }\n    this.addAccessControlFields();\n\n    this.rebuild();\n  }\n\n\n  addAccessControlFields() {\n    const accessControlComp = _.get(this.options, 'accessControlComp', {});\n\n    const accessControlCompKey = accessControlComp.key;\n    _.each(this._form.components, (panel, index) => {\n      panel.components = _.filter(panel.components, comp => comp.key !== accessControlCompKey);\n      if(index === 0) {\n        panel.components.push(accessControlComp);\n      }\n    });\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  get schema() {\n    _.assign(this.currentPage, this.webform._form.components[0]);\n\n    const webform = new Webform(this.options);\n    webform.setForm(this._form, { noEmit: true });\n    return webform.schema;\n  }\n\n  render() {\n    return this.renderTemplate('builderWizard', {\n      sidebar: this.renderTemplate('builderSidebar', {\n        scrollEnabled: this.sideBarScroll,\n        groupOrder: this.groupOrder,\n        groupId: `builder-sidebar-${this.id}`,\n        groups: this.groupOrder.map((groupKey) => this.renderTemplate('builderSidebarGroup', {\n          group: this.groups[groupKey],\n          groupKey,\n          groupId: `builder-sidebar-${this.id}`,\n          subgroups: this.groups[groupKey].subgroups.map((group) => this.renderTemplate('builderSidebarGroup', {\n            group,\n            groupKey: group.key,\n            groupId: `group-container-${groupKey}`,\n            subgroups: []\n          })),\n        })),\n      }),\n      pages: this.pages,\n      stages: this.stagesSettings,\n      form: this.webform.render(),\n      formsStage: this.isFormsStage()\n    });\n  }\n\n  attach(element) {\n    this.loadRefs(element, {\n      addPage: 'multiple',\n      gotoPage: 'multiple',\n      gotoStage: 'multiple',\n      gotoFormsStage: 'multiple',\n    });\n\n    this.refs.addPage.forEach(link => {\n      this.addEventListener(link, 'click', (event) => {\n        event.preventDefault();\n        this.addPage();\n      });\n    });\n\n    this.refs.gotoPage.forEach((link, index) => {\n      this.addEventListener(link, 'click', (event) => {\n        event.preventDefault();\n        this.setPage(+event.target.dataset.index);\n      });\n    });\n\n    this.refs.gotoStage.forEach((link, index) => {\n      this.addEventListener(link, 'click', (event) => {\n        event.preventDefault();\n        const stageId = _.get(this.stagesSettings, `[${index}].id`, '')\n        this.stage = this.options.stage  = stageId;\n        this.setPage(_.findIndex(this.pages, page => page.stageId === stageId));\n      });\n    });\n\n    this.refs.gotoFormsStage.forEach((link, index) => {\n      this.addEventListener(link, 'click', (event) => {\n        event.preventDefault();\n        this.stage = this.formsStageId;\n        \n        this.setPage(_.findIndex(this.pages, page => page.stageId === this.formsStageId));\n      });\n    });\n\n    return super.attach(element);\n  }\n\n  rebuild() {\n    const page = this.currentPage;\n    this.webform.setForm({\n      display: 'form',\n      type: 'form',\n      components: page ? [page] : [],\n    }, { keepAsReference: true });\n    return this.redraw();\n  }\n\n  get stagesSettings() {\n    return  _.get(this._form, 'properties.stagesSettings', [])\n  }\n\n  isFormsStage() {\n    return this.stage === this.formsStageId;\n  }\n\n  addPage(page) {\n    const pagePrevIndex = _.findLastIndex(this.pages, page => page.stageId === this.stage);\n    const pageIndex = _.filter(this.pages, page => page.stageId === this.stage).length + 1;\n    const existingPage = page && page.schema;\n\n    const newPage = existingPage\n      ? Utils.fastCloneDeep(page.schema) \n      : this.getPageConfig(pageIndex, [], this.stage);\n\n    BuilderUtils.uniquify(this._form.components, newPage);\n\n    existingPage \n    ? this._form.components.push(newPage)\n    : this._form.components.splice(pagePrevIndex+1, 0, newPage);\n\n    this.emitSaveComponentEvent(\n      newPage,\n      newPage,\n      this._form,\n      'components',\n      (this._form.components.length - 1),\n      true,\n      newPage\n    );\n\n    this.emit('change', this._form);\n    return this.rebuild();\n  }\n\n  removePage(pageIndex, componentIndex) {\n    this._form.components.splice(componentIndex, 1);\n    this.emit('change', this._form);\n    if (pageIndex === 0) {\n      this.addAccessControlFields();\n    }\n\n    if (pageIndex === this.pages.length) {\n      // If the last page is removed.\n      const isLastStagePage =  !_.some(this._form.components, panel => panel.stageId === this.stage);\n      if (isLastStagePage) {\n        this._form.components.push(this.getPageConfig(1, [], this.stage));\n        this.addAccessControlFields();\n        return this.rebuild();\n      }\n      else {\n        return this.setPage(pageIndex - 1);\n      }\n    }\n    else {\n      const isLastStagePage =  !_.some(this._form.components, panel => panel.stageId === this.stage);\n      if (isLastStagePage) {\n        this._form.components.splice(pageIndex, 0, this.getPageConfig(1, [], this.stage));\n        this.addAccessControlFields();\n      }\n\n      this.setPage(_.findIndex(this._form.components, panel => panel.stageId === this.stage));\n      return this.rebuild();\n    }\n  }\n\n  setPage(index) {\n    if (index === this.page) {\n      return;\n    }\n    this.page = this.options.page = index;\n    return this.rebuild();\n  }\n\n  getDefaultStages(startIndex = 0, stagesCount = 0, stagesSettings = []) {\n    const stages = [];\n    for(let stage = startIndex; stage<(startIndex + stagesCount); stage++) {\n      stages.push(this.getDefaultStage(stagesSettings[stage].id));\n    }\n    stages.push(this.getPageConfig(1, [],this.formsStageId));\n    return _.flatten(stages);\n  }\n\n  getDefaultStage(stageId) {\n    return [this.getPageConfig(1, [], stageId)];\n  }\n\n  getPageConfig(index, components = [], stageId) {\n    const panelSettings = {\n      type: 'panel',\n      components,\n      stageId,\n      buttonSettings: {\n        previous: false,\n        cancel: false,\n        next: false\n      },\n    };\n    \n    return stageId === this.formsStageId\n      ? {\n          title: `Form ${index}`,\n          label: `Form ${index}`,\n          key: `form${index}Stage${stageId}`,\n          ...panelSettings\n        }\n      : {\n          title: `Page ${stageId}-${index}`,\n          label: `Page ${stageId}-${index}`,\n          key: `page${index}Stage${stageId}`,\n          ...panelSettings\n        };\n  }\n\n  pasteComponent(component) {\n    if (component instanceof ProcessBuilder) {\n      return;\n    }\n    if (this._form.components.find(comp => _.isEqual(component.component, comp))) {\n      this.addPage(component);\n    }\n    else {\n      return super.pasteComponent(component);\n    }\n  }\n}\n\nTemplates.current.builderWizard.form = (ctx) => {\n  return `<div class=\"formio builder row formbuilder\">\n  <div class=\"col-xs-4 col-sm-3 col-md-2 formcomponents\">\n    ${ctx.sidebar}\n  </div>\n  <div class=\"col-xs-8 col-sm-9 col-md-10 formarea\">\n    <span class=\"badge badge-light\">\n      Stages\n    </span>\n    <div class=\"d-flex flex-row\">\n      <ol class=\"breadcrumb w-100\">\n        ${ctx.stages.map(function(stage) {\n        return  `<li>\n          <span title=\"${stage.title}\" class=\"mr-2 badge ${stage.id === ctx.self.stage ? 'badge-primary' : 'badge-info'} wizard-page-label\" ref=\"gotoStage\">${stage.title}</span>\n        </li>`\n        }).join('') }\n      \n      </ol>\n      <div class=\"breadcrumb d-block border-left border-light\" title=\"Process Forms\"  >\n        <span title=\"Process Forms\" class=\"badge badge-secondary ${ctx.formsStage ? 'text-dark' : '' } p-1 wizard-page-label\" ref=\"gotoFormsStage\">PROCESS FORMS</span>\n      </div>\n    </div>\n    <span  class=\"badge badge-light\">\n      Stage Panels\n    </span>\n    <ol class=\"breadcrumb\">\n      ${ctx.pages.map(function(page, pageIndex) {\n      return  page.stageId === ctx.self.stage ? `<li>\n        <span title=\"${page.title}\" data-index=\"${pageIndex}\" class=\"mr-2 badge ${ctx.formsStage && pageIndex === ctx.self.page ? 'text-dark' : '' } ${ctx.formsStage ? 'badge-secondary' : pageIndex === ctx.self.page ? 'badge-primary' : 'badge-info'} wizard-page-label\" ref=\"gotoPage\">${page.title}</span>\n      </li>` : '';\n      }).join('') }\n      <li>\n        <span title=\"${ctx.t(ctx.formsStage ? 'Add Form Page':'Create Page')}\" class=\"mr-2 badge badge-success wizard-page-label\" ref=\"addPage\">\n          <i class=\"${ctx.iconClass('plus')}\"></i> ${ctx.t(ctx.formsStage ? 'Form':'Page')}\n        </span>\n      </li>\n    </ol>\n    <div ref=\"form\">\n      ${ctx.form}\n    </div>\n  </div>\n</div>`\n}\n\nexport default ProcessBuilder;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useReducer,  useState} from 'react';\nimport{ FormBuilder} from '@formio/react';\nimport _set from 'lodash/set';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _camelCase from 'lodash/camelCase';\nimport { Formio, Form } from '@formio/react';\nimport { FormsConfig } from '../../../../config';\nimport _ from 'lodash';\nimport ProcessBuilder from './ProcessBuilder';\n\n\nFormio.Builders.addBuilders({wizard:ProcessBuilder}); \n\nconst reducer = (form, {type, value}) => {\n  const formCopy = _cloneDeep(form);\n  switch (type) {\n    case 'formChange':\n      for (let prop in value) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (value.hasOwnProperty(prop)) {\n          form[prop] = value[prop];\n        }\n      }\n      return form;\n    case 'replaceForm':\n      return _cloneDeep(value);\n    case 'title':\n      if (type === 'title' && !form._id) {\n        formCopy.name = _camelCase(value);\n        formCopy.path = _camelCase(value).toLowerCase();\n      }\n      break;\n    default:\n      break;\n  }\n\n  _set(formCopy, type, value);\n  return formCopy;\n};\n\nconst ProcessEdit = (props) => {\n  const [form, dispatchFormAction] = useReducer(reducer, _cloneDeep(props.form));\n  const [showSettings, toggleSettings] = useState(false);\n \n  useEffect(() => {\n    const newForm = props.form;\n    if (newForm && (form._id !== newForm._id || form.modified !== newForm.modified)) {\n      dispatchFormAction({type: 'replaceForm', value: newForm});\n    }\n  }, [props.form, form]);\n\n  const saveForm = () => {\n    const {saveForm} = props;\n    if (saveForm && typeof saveForm === 'function') {\n      saveForm(form);\n    }\n  };\n\n  const handleChange = (path, event) => {\n    const {target} = event;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    dispatchFormAction({type: path, value});\n  };\n\n  const formChange = (newForm, newSchema) => {\n    dispatchFormAction({type: 'formChange', value: newSchema});\n  };\n\n  const {saveText, options, builder} = props;\n  const builderOptions= {\n    ...options,\n    builder: {\n      custom: {\n        title: 'Navigation',\n        weight: -5,\n        default: true,\n      },\n      basic: {\n        title: 'Basic',\n        weight: -5,\n        default: false,\n      },\n    },\n    accessControlComp: props.accessControlComp\n  }\n\n  return (\n    <div>\n      <div className=\"row \">\n        <div className=\"col-lg-2 col-md-4 col-sm-4\">\n          <div id=\"form-group-title\" className=\"form-group\">\n            <label htmlFor=\"title\" className=\"control-label field-required\">Title</label>\n            <input\n              type=\"text\"\n              className=\"form-control\" id=\"title\"\n              placeholder=\"Enter the form title\"\n              value={form.title || ''}\n              onChange={event => handleChange('title', event)}\n            />\n          </div>\n        </div>\n        <div className=\"col-lg-2 col-md-4 col-sm-4\">\n          <div id=\"form-group-name\" className=\"form-group\">\n            <label htmlFor=\"name\" className=\"control-label field-required\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              placeholder=\"Enter the form machine name\"\n              value={form.name || ''}\n              onChange={event => handleChange('name', event)}\n            />\n          </div>\n        </div>\n        <div className=\"col-lg-2 col-md-4 col-sm-4\">\n          <div id=\"form-group-path\" className=\"form-group\">\n            <label htmlFor=\"path\" className=\"control-label field-required\">Path</label>\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"path\"\n                placeholder=\"path\"\n                style={{'textTransform': 'lowercase', width:'120px'}}\n                value={form.path || ''}\n                onChange={event => handleChange('path', event)}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3 col-md-4 col-sm-4 row align-items-center\">\n          <a \n            className=\"nav-link mt-2 ml-2\"\n            title=\"Stages Settings\"\n            href=\"#\"\n            onClick={() => toggleSettings(!showSettings)}\n          >\n            <i className=\"fa fa-solid fa-gear fa-2x\"></i>\n          </a>\n        </div>\n        <div id=\"save-buttons\" className=\"col-lg-3 col-md-5 col-sm-5 save-buttons pull-right\">\n          <span className=\"btn btn-primary pull-right px-5\" onClick={() => saveForm()}>\n            {saveText}\n          </span>\n        </div>\n      </div>\n      {showSettings && <Form\n        submission={{data: {stages: _.chain(form).get('properties.stagesSettings', []).cloneDeep().value()}}}\n        src={FormsConfig.getSrc('processSettings')}\n        formReady={(form) => {\n          form.on('saveStages', (data) => {\n            dispatchFormAction({type: 'properties.stagesSettings', value: _.get(data, 'stages', [])})\n            toggleSettings(false);\n          })\n        }}\n      />}\n      <FormBuilder\n        key={form._id}\n        form={form}\n        options={builderOptions}\n        builder={builder}\n        onChange={formChange}\n      />\n    </div>\n  );\n};\n\nProcessEdit.defaultProps = {\n  form: {\n    title: '',\n    name: '',\n    path: '',\n    display: 'wizard',\n    type: 'form',\n    properties: {process: true, stages: 2, stagesSettings: [{title: 'stage 1', id: '1'}, {title: 'stage 2', id: '2'}]}, \n    components: [],\n    accessControlComp: {}\n  }\n};\n\nexport default ProcessEdit;","import React, { useEffect } from 'react';\nimport { Errors } from '@formio/react';\nimport ProcessEdit from './ProcessEdit';\nimport { useForm, saveForm, loadAccessControlComponent } from '../../form/formContext';\nimport { useAlerts } from '../../../alerts';\nimport _ from 'lodash';\nimport { Loading, Title } from '../../../../common';\n\nconst ProcessEditPage = (props) => {\n  const { state: formState, dispatch } = useForm();\n  const { addAlert } = useAlerts();\n  const { loadingAccessControlComp, accessControlCompError, accessControlComp} = formState;\n\n  useEffect(() => {\n    loadAccessControlComponent(dispatch);\n  }, [dispatch]);\n\n  const onSaveForm = (form) => saveForm(dispatch, form, (err, form) => {\n    if (!err) {\n      addAlert({ type: 'success', content: 'Form succesfully updated' });\n    }\n  });\n\n  if (loadingAccessControlComp) {\n    return <Loading/>\n  }\n\n  return (\n    <div>\n     <Title text={`Edit ${formState.form?.title} Process`}/>\n      <hr />\n      <Errors errors={[formState.error, accessControlCompError]} />\n      <ProcessEdit form={_.cloneDeep(formState.form)} saveText=\"Save Process\" saveForm={onSaveForm} accessControlComp={accessControlComp} />\n    </div>\n  )\n};\n\nexport default ProcessEditPage;","import React, { useEffect } from 'react';\nimport {Errors } from '@formio/react';\nimport ProcessEdit from './ProcessEdit';\nimport { useHistory } from 'react-router-dom';\nimport { useForm, saveForm, loadAccessControlComponent, resetForm} from '../../form/formContext';\nimport { Loading, Title } from '../../../../common';\n\nconst ProcessCreatePage = () => {\n  const history = useHistory();\n  const { state: formState, dispatch: dispatchFormAction } = useForm();\n  const { loadingAccessControlComp, accessControlCompError, accessControlComp } = formState;\n\n  useEffect(() => {\n    loadAccessControlComponent(dispatchFormAction);\n  }, [dispatchFormAction]);\n\n  const onSaveForm = (form) => {\n    saveForm(dispatchFormAction, form, (err, form) => {\n      if (!err) {\n        dispatchFormAction(resetForm());\n        history.push(`/form/${form._id}/edit`);\n      }\n    })};\n\n  if (loadingAccessControlComp) {\n    return <Loading/>\n  }\n\n  return (\n    <div>\n      <Title text={'Create Process'}/>\n      <hr />\n      <Errors errors={[formState.error, accessControlCompError]} />\n      <ProcessEdit saveForm={onSaveForm} saveText='Create Process' accessControlComp={accessControlComp}/>\n    </div>\n  );\n};\n\nexport default ProcessCreatePage;\n","import _  from \"lodash\";\n\nconst suppportedDataTypes = [\n  'number',\n  'datetime',\n  'checkbox',\n];\n\nconst getField = (query) => {\n  return `data.${query.field.path}`;\n}\n\nconst getValue = (query) => {\n  return suppportedDataTypes.includes(query.field.type)\n    ? query[`${query.field.type}_value`]\n    : query.value;\n}\n\nconst getDateTimeValue = (query) => {\n  const operator = query.operator;\n  const value = getValue(query);\n  const field = getField(query);\n\n  switch (operator) {\n    case 'gt':\n      return {\n        '$gt': [\n          `$${field}`,\n          {\n            '$dateFromString': {\n              'dateString': value\n            }\n          }\n        ]\n      };\n    case 'gte':\n      return {\n        '$gte': [\n          `$${field}`,\n          {\n            '$dateFromString': {\n              'dateString': value\n            }\n          }\n        ]\n      };\n    case 'lt':\n      return {\n        '$lt': [\n          `$${field}`,\n          {\n            '$dateFromString': {\n              'dateString': value\n            }\n          }\n        ]\n      };\n    case 'lte':\n      return {\n        '$lte': [\n          `$${field}`,\n          {\n            '$dateFromString': {\n              'dateString': value\n            }\n          }\n        ]\n      };\n    default:\n      return null;\n  }\n}\n\nconst getQueryValue = (query) => {\n  const value = getValue(query);\n  const operator = query.operator;\n\n  switch (operator) {\n    case 'notEqual':\n      return {\n        '$ne': value\n      };\n    case 'startsWith':\n      return {\n        '$regex': `^${value}`,\n        '$options': 'i'\n      };\n    case 'contain':\n      return {\n        '$regex': `^.*${value}.*$`,\n        '$options': 'i'\n      };\n    case 'notContain':\n      return {\n        '$regex': `^((?!${value}).)*$`,\n        '$options': 'i'\n      };\n    case 'endsWith':\n      return {\n        '$regex': `${value}$`,\n        '$options': 'i'\n      };\n    case 'matches':\n      return {\n        '$regex': value,\n        '$options': 'i'\n      };\n    case 'gt':\n      return {\n        '$gt': value\n      };\n    case 'gte':\n      return {\n        '$gte': value\n      };\n    case 'lt':\n      return {\n        '$lt': value\n      };\n    case 'lte':\n      return {\n        '$lte': value\n      };\n    default:\n      return value;\n  }\n}\n\nexport const getExportQuery = (data) => {\n  const exportQuery = {};\n\n  const queries = data.queries.filter((query) => {\n    const value = getValue(query);\n    return value || _.isBoolean(value);\n  });\n\n  const emptyQueires = data.queries\n    .filter(query => query.operator === 'empty');\n\n  queries\n    .filter(query => query.field.type !== 'datetime')\n    .forEach(query => {\n      exportQuery[getField(query)] = getQueryValue(query);\n    });\n\n  const dateTimeQueries = queries\n    .filter(query => query.field.type === 'datetime')\n\n  const dateTimeExpressions = dateTimeQueries\n    .map(getDateTimeValue);\n\n  if (dateTimeExpressions.length) {\n    exportQuery['$expr'] = {\n      '$and': dateTimeExpressions\n    };\n  }\n\n  dateTimeQueries\n    .forEach(query => {\n      exportQuery[getField(query)] = {\n        '$ne': null\n      }\n    });\n\n  if (emptyQueires.length) {\n    exportQuery['$and'] = [];\n  }\n\n  emptyQueires\n    .forEach(query => {\n      const emptyObject = {};\n      emptyObject[getField(query)] = '';\n      const nullObject = {};\n      nullObject[getField(query)] = null;\n      exportQuery['$and'].push({\n        '$or': [emptyObject, nullObject]\n      });\n    })\n\n  return exportQuery;\n};\n","import { Form } from '@formio/react';\nimport { useParams } from 'react-router-dom';\nimport { useForm } from '../../form';\nimport * as Utils from '../../../../utils';\nimport { FormsConfig } from '../../../../config';\nimport { Title } from '../../../../common';\nimport { getExportQuery } from '../../../../utils/CsvUtils';\n\nconst CsvSubmissionsPage = () => {\n  const params = useParams();\n  const { state } = useForm();\n\n  const options = {\n    template: 'bootstrap',\n    inconset: 'fa',\n    form: state.form,\n    isProcess: state.isProcess\n  };\n\n  const formComponents = state.isProcess\n    ? state.form.components\n      .filter(comp => comp.stageId === '-1')\n      .map(comp => comp.components[0])\n    : [];\n\n  if (formComponents.length) {\n    options.processFormIds = formComponents\n      .map(comp => comp.form).join(',');\n  }\n\n  const onCsvDownload = (data) => {\n    const exportQuery = getExportQuery(data);\n    const formId = state.isProcess\n      ? data.processForm._id\n      : params.formId;\n    const title = state.isProcess\n      ? `${state.form.title} - ${data.processForm.title}`\n      : state.form.title;\n    Utils.exportSubmissions(exportQuery, formId, title);\n  }\n\n  return (\n    <div>\n      <Title text={state.form.title}/>\n      <Form\n        src={FormsConfig.getSrc('csvFilters')}\n        formReady={(form)=> {\n          form.on('csvDownload', onCsvDownload);\n        }}\n        options={options}\n      />\n\n    </div>\n  );\n};\n\nexport default CsvSubmissionsPage;\n","import React, { useEffect } from 'react';\nimport { NavLink, Route, Switch, useParams } from 'react-router-dom';\nimport { Errors} from '@formio/react';\nimport _ from 'lodash';\n\nimport SubmissionsPage from '../../submission/components/SubmissionsPage';\nimport {getFormAndCheck, useForm, checkAccess, getFormFolder} from '../formContext';\nimport FormDelete from './FormDelete';\nimport FormView from './FormView';\nimport {SubmissionProvider, SubmissionsProvider} from '../../submission';\nimport {useAuth} from '../../../auth';\nimport FormFolder from './FormFolder';\nimport {Loading} from '../../../../common';\nimport {MyForm, MyFormProvider} from '../../../myForms/myForm';\nimport { RoutedSubmissionsPage } from '../../routedSubmission';\nimport { IncomingSubmissionsPage } from '../../incomingSubmission';\nimport { ArchivedSubmissionsPage } from '../../archivedSubmission';\nimport { TrackedSubmissionsPage } from '../../trackedSubmission/components';\nimport DataRoutesPage from '../../formDataRoutes/components/DataRoutesPage';\nimport { DeletedSubmissionsPage } from '../../deletedSubmission';\nimport { ProcessEditPage } from '../../process';\nimport CsvSubmissionsPage from '../../csvSubmissions/components/CsvSubmissionsPage';\nimport { checkCsvAccess, useUser } from '../../../users/user/userContext';\nimport { FormsConfig } from '../../../../config';\nimport { hasAdminRights } from '../../../../utils';\n\n\nconst FormNavigation = () => {\n  const {formId} = useParams();\n\n  const {dispatch, state: formState} = useForm();\n  const {hasFormAccess, checkingAccess, accessCheckError, form, isActive: isFormActive, loadingFormFolder, formFolderError, error: formError, isProcess, formFolder} = formState;\n  const {state: authState} = useAuth();\n  const {is: role, user } = authState;\n  const { state: userState, dispatch: userDispatch } = useUser();\n  const { isUserGroupsLoading, isUserGroupsFetched, allowCsv } = userState;\n\n  const isAdmin = hasAdminRights(role);\n\n  useEffect(() => {\n    if (!isAdmin) {\n      checkAccess(dispatch, formId);\n    }\n  }, [dispatch, formId, isAdmin]);\n\n  useEffect(() => {\n    if (hasFormAccess || isAdmin) {\n      getFormAndCheck(dispatch, formId);\n      getFormFolder(dispatch, formId);\n    }\n  }, [dispatch, formId, hasFormAccess, isAdmin]);\n\n  useEffect(() => {\n    const folderUserGroups = _.get(formFolder, 'data.userGroups', []);\n    const userId = _.get(user, '_id', '');\n    const allowCsvUserGroups = folderUserGroups\n      .filter(userGroup => userGroup.data.allowCsv && userGroup.data.csvForms.includes(formState.id));\n\n    if (!isAdmin && allowCsvUserGroups.length && userId && !isUserGroupsLoading && !isUserGroupsFetched) {\n      const userGroups = allowCsvUserGroups.map(userGroup => userGroup._id).join(',');\n      const query = {\n        'data.group._id__in': userGroups,\n        'data.user._id': userId,\n      };\n      checkCsvAccess(userDispatch, { limit: 1000000, query }, { }, null, FormsConfig.userGroup);\n    }\n  }, [userDispatch, user, isAdmin, formFolder, isUserGroupsFetched, isUserGroupsLoading, formState.id])\n\n  if ((checkingAccess || isFormActive || _.isEmpty(form) || loadingFormFolder) && !formError) {\n    return <Loading/>;\n  }\n\n  if (!hasFormAccess && !isAdmin) {\n    return  <Errors errors={[accessCheckError || 'You are not authorized to view this page.']} />\n  }\n\n  const navbarLinks = _.sortBy([\n    {icon: \"fa fa-chevron-left\", getPath: (pathStart, eventId) => '/form', title: '', priority: 0 },\n    {icon: \"fa fa-pencil\", getPath: (pathStart, formId) => `/form/${formId}`, title: 'Enter Data', notAdmin: true, priority: 10 },\n    {icon: \"fa fa-list-alt\", getPath: (pathStart, formId) => `/form/${formId}/submission`, exact:false, title: isAdmin ? 'Current Data' : 'Current', priority: 20 },\n    {icon: \"fa fa-arrow-circle-up\", getPath: (pathStart, formId) => `/form/${formId}/routed`, exact:false, notAdmin: true,title: 'Routed', priority: 30 },\n    {icon: \"fa fa-arrow-circle-up\", getPath: (pathStart, formId) => `/form/${formId}/routes`, exact:false, adminOnly: true,title: 'Data Routes', priority: 35 },\n    {icon: \"fa fa-arrow-circle-down\", getPath: (pathStart, formId) => `/form/${formId}/incoming`, exact:false,notAdmin: true, title: 'Incoming', priority: 40 },\n    {icon: \"fa fa-th-list\", getPath: (pathStart, formId) => `/form/${formId}/tracked`, exact:false, notAdmin: true,title: 'Tracked', priority: 45 },\n    {icon: \"fa fa-check-square-o\", getPath: (pathStart, formId) => `/form/${formId}/myform`, exact: true, notAdmin: true, title: 'Manage My Form', priority: 50 },\n    {icon: \"fa fa-edit\", getPath: (pathStart, formId) => `/form/${formId}/folder`, adminOnly: true, title: 'Form Folder', exact: false, priority: 60 },\n    {icon: \"fa fa-edit\", getPath: (pathStart, formId) => `/form/${formId}/edit`, adminOnly: true, hide: !isProcess, title: 'Edit Process', priority: 65 },\n    {icon: \"fa fa-trash\", getPath: (pathStart, formId) => `/form/${formId}/delete`, adminOnly: true, title: 'Delete Form', priority: 70 },\n    {icon: \"fa fa-file-archive-o\", getPath: (pathStart, formId) => `/form/${formId}/archived`, exact: false, notAdmin: true, title: 'Archived', priority: 75},\n    {icon: \"fa fa-trash\", getPath: (pathStart, formId) => `/form/${formId}/deleted`, exact: false, notAdmin: true, title: 'Deleted', priority: 80 },\n    {icon: \"fa fa-download\", getPath: (pathStart, formId) => `/form/${formId}/csv`, exact: true, hide: !isAdmin && !allowCsv, title: 'CSV', priority: 85},\n  ], (link) => link.priority );\n\n  const Navbar = () => {\n    return (\n      <ul className=\"nav nav-tabs mb-2\">\n        {navbarLinks.map(link => {\n          if ((link.adminOnly && !isAdmin) || (link.notAdmin && isAdmin) || link.hide) return null;\n\n          return (\n            <li className=\"nav-item\" key={link.title}>\n              <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true} to={link.getPath('', formId)}  >\n                <i className={link.icon}></i> {link.title}\n              </NavLink>\n            </li>\n          )\n        })}\n      </ul>\n    )\n  };\n\n  const adminRoutes = [\n    { path:'/form/:formId/edit', component: ProcessEditPage,  hide: !isProcess},\n    { path:'/form/:formId/delete', component: FormDelete },\n    { path: '/form/:formId/folder', component: FormFolder },\n    { path: '/form/:formId/routes', component: DataRoutesPage},\n    { path: '/form/:formId/csv', component: CsvSubmissionsPage },\n  ];\n\n  const userRoutes = [\n    <Route path=\"/form/:formId/routed\" key=\"routed\" component={RoutedSubmissionsPage} />,\n    <Route path=\"/form/:formId/incoming\" key=\"incoming\" component={IncomingSubmissionsPage} />,\n    <Route path=\"/form/:formId/tracked\" key=\"tracked\" component={TrackedSubmissionsPage} />,\n    <Route path=\"/form/:formId/archived\" key=\"archived\" component={ArchivedSubmissionsPage} />,\n    <Route path=\"/form/:formId/deleted\" key=\"deleted\" component={DeletedSubmissionsPage} />,\n    <Route path=\"/form/:formId/myform\" key=\"myform\" render={(props) => (\n      <MyFormProvider>\n        <MyForm {...props}/>\n      </MyFormProvider>\n    )}/>,\n    <Route\n      exact\n      path=\"/form/:formId\"\n      key=\"newSubmission\"\n      render={ (props) => (\n        <SubmissionsProvider>\n          <SubmissionProvider>\n            <FormView {...props} addSubmissionAccess={true} />\n          </SubmissionProvider>\n        </SubmissionsProvider>\n      )}\n    />,\n    \n  ];\n\n  if (allowCsv) {\n    userRoutes.push(<Route path=\"/form/:formId/csv\" key=\"csv\" component={CsvSubmissionsPage} />);\n  }\n\n  return (\n    <div>\n      <Navbar/>\n      <Errors errors={[formError, formFolderError]} />\n      {!formError && <Switch>\n        <Route path=\"/form/:formId/submission\" component={SubmissionsPage} />\n        {isAdmin\n          ? adminRoutes.map(route => route.hide ? null : <Route path={route.path}  key={route.path} component={route.component}/>)\n          : userRoutes\n        }\n      </Switch>}\n    </div>\n  );\n};\n\nexport default FormNavigation;\n","import React, { useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {  Form } from '@formio/react';\n\nimport { Loading } from '../../../../common';\nimport { useForms, indexForms,  getFoldersForms} from '../formsContext';\nimport { FormsConfig } from '../../../../config';\nimport { useAuth } from '../../../auth';\nimport { hasAdminRights } from '../../../../utils';\n\nconst FormsList = () => {\n  const history = useHistory();\n  const {state: formsState, dispatch: dispatchFormsAction} = useForms();\n  const {requestParams} = formsState;\n  const {state: authState} = useAuth();\n  const {is: role} = authState;\n\n  const isAdmin = hasAdminRights(role);\n\n  const getForms = useCallback(\n    (page, params) => {\n      const args = [dispatchFormsAction, requestParams, page, params];\n      isAdmin ? indexForms(...args) : getFoldersForms(...args);;\n    },\n    [requestParams, dispatchFormsAction, isAdmin]\n  );\n\n  useEffect(() => {\n    getForms(1);\n  }, [getForms, requestParams]);\n\n  const {isActive} = formsState;\n\n  const FormsGrid = () => {\n    return (\n      <Form\n        submission={{data: {forms: formsState.forms}}}\n        src={FormsConfig.getSrc(isAdmin ? 'adminFormsTable':'formsTable')}\n        options={{noSubmit: true}}\n        formReady={(form)=> {\n          form.on('row:click', (row)=> {\n            history.push(isAdmin ? `/form/${row.formId || row._id}/submission` : `/form/${row.formId || row._id}`);\n          })\n        }}\n      />\n    )\n  }\n\n  return (\n    <div>\n      {isActive \n        ? <Loading /> \n        : formsState.forms?.length \n          ? <FormsGrid/> \n          : 'No forms found'\n      } \n    </div>\n  );\n};\n\nexport default FormsList;\n","import React, { useEffect, useCallback } from 'react'\nimport { Errors } from '@formio/react';\nimport _ from 'lodash';\n\nimport { Progressbar } from '../../../../common';\nimport { useForms,addFormAccessControlFields, setFilterQueryParam} from '../formsContext';\nimport { Title } from '../../../../common';\nimport { useAuth } from '../../../auth';\nimport { useAlerts } from '../../../alerts';\nimport FormsList from './FormsList';\nimport { filterNames, useFilter } from '../../../filter/filterContext';\nimport Filter from '../../../filter/components/Filter';\nimport { Link } from 'react-router-dom';\nimport { hasAdminRights } from '../../../../utils';\n\nconst FormsListPage = () => {\n  const {state: formsState, dispatch: dispatchFormsAction} = useForms();\n  const {formsUpdateProgress, formsUpdating, error: formsError, requestParamsSet} = formsState;\n  const {state: authState} = useAuth();\n  const {is: role} = authState;\n  const {state: filterState} = useFilter();\n  const { filter, error: filterError, set: filterSet } = filterState;\n  const { addAlert } = useAlerts();\n\n  const isAdmin = hasAdminRights(role);\n\n  const getFilterQuery = useCallback(() => {\n    if(_.isEmpty(filter)) return {};\n\n    const {folder, noFolder, searchQuery, searchProperty} = filter;\n    const query = {}; \n\n    if (isAdmin){\n      const folderQuery = 'properties.folder';\n      const noFolderQuery = 'properties.folder__exists';\n      const propertySearchQuery = `${searchProperty}__regex`;\n \n      if (folder && folder._id && !noFolder) {\n        query[`${folderQuery}`] = folder._id;\n      };\n      if (noFolder) {\n        query[`${noFolderQuery}`] = false;\n      };\n      if (searchQuery && searchProperty) {\n        query[`${propertySearchQuery}`] = `/${searchQuery.trim()}/ig`;\n      }\n    }\n    else {\n      const folderQuery = 'data.folder._id';\n      const propertySearchQuery = `data.form.${searchProperty}__regex`;\n       \n      if (folder && folder._id) {\n        query[`${folderQuery}`] = folder._id;\n      };\n      if (searchQuery && searchProperty) {\n        query[`${propertySearchQuery}`] = `/${searchQuery.trim()}/ig`;\n      }\n    }\n    return query;\n  }, [filter, isAdmin]);\n\n  useEffect(()=> {\n    if (filterSet) {\n      setFilterQueryParam(dispatchFormsAction, getFilterQuery());\n    }\n  }, [dispatchFormsAction, filter, getFilterQuery, filterSet]);\n \n  const updateAccessControlFields = () => {\n    addFormAccessControlFields(dispatchFormsAction, (err) => {\n      addAlert({ type: 'success', content: 'Form are succesfully updated' });\n    });\n  }\n\n  const AdminBtns = () => {\n    return isAdmin\n      ? (\n        <div className=\"d-flex justify-content-between\">\n          <button onClick={updateAccessControlFields} className=\"btn btn-dark btn-sm mb-3\">Update Form Access Control Fields</button>\n          <Link className=\"btn btn-primary btn-sm mb-3 px-4\" to=\"/form/create\"><i className=\"fa fa-plus\"></i>&nbsp; Create Process</Link>\n        </div>\n      )\n      : null;\n  };\n\n  return (\n    <div>\n      <Title text={'Forms'}/>\n      <p className=\"alert alert-primary\" role=\"alert\">This is a list of all the forms and resources for the project. You can <b>filter and sort the rows</b> in the table using the menu on the right side of each column header. It is also possible to <b>hide / show columns</b>.</p>\n      <Errors errors={[formsError, filterError]} />\n      {formsUpdating\n        ? <Progressbar title={'Forms Access Control Component Update'} progress={formsUpdateProgress} message={`${formsUpdateProgress}% . . . Please wait. It can take some minutes`}/>\n        : <>\n          <AdminBtns/>\n          <Filter filterName={filterNames.formsFilter} filterOptions = {{isAdmin}} filterFormName ={'formsFilter'} />\n          {filterSet && requestParamsSet && <FormsList/>}\n        </>\n      }\n    </div>\n  );\n};\n\nexport default FormsListPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { FormsProvider } from '../formsContext';\nimport { FormProvider } from '../formContext';\nimport FormPage from './FormPage';\nimport FormsListPage from './FormsListPage';\nimport { FilterProvider } from '../../../filter/filterContext';\nimport { ProcessCreatePage } from '../../process'\nimport { UserProvider } from '../../../users/user/userContext';\n\nconst FormsPage = () => (\n   <FormsProvider>\n    <Switch>\n      <Route\n        exact\n        render={ (props) => <FilterProvider><FormsListPage {...props} /></FilterProvider>}\n        path=\"/form\"\n      />\n      <Route\n        exact\n        path=\"/form/create\"\n        render={ (props) => <FormProvider><ProcessCreatePage {...props} /></FormProvider> }\n      />\n      <Route\n        path=\"/form/:formId\"\n        render={ (props) => <UserProvider><FormProvider><FormPage {...props} /></FormProvider></UserProvider> }\n      />\n\n    </Switch>\n   </FormsProvider>\n)\n\nexport default FormsPage;\n","import React, { useEffect } from 'react';\nimport { NavLink, Route, Switch, useParams } from 'react-router-dom';\nimport { useSubmission, getSubmission, SubmissionView, SubmissionDelete } from '../../../forms/submission';\nimport _ from 'lodash';\n\nconst MemberPage = (props) => {\n  const {pathStart, formName, paramName } = props;\n  const eventId = useParams()[`${paramName}Id`];\n\n  const { dispatch: dispatchSubmissionEvent, state: submissionState} = useSubmission();\n\n  useEffect(() => {\n    getSubmission(dispatchSubmissionEvent, eventId, null, formName);\n  }, [eventId, dispatchSubmissionEvent, formName]);\n\n  const View = () => <SubmissionView pathStart={pathStart} readOnly={true} formName={formName} hideLabel/>; \n  const Edit = () => <SubmissionView pathStart={pathStart}  readOnly={false} formName={formName} hideLabel/>;\n\n  const navbarLinks = _.sortBy([ \n    {icon: \"fa fa-chevron-left\", getPath: (pathStart, eventId) => `${pathStart}`, title: '', priority: 0 },\n    {icon: \"fa fa-eye\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}`, title: 'View Group Member', priority: 10 },\n    {icon: \"fa fa-edit\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/edit`, title: 'Edit  Group Member', priority: 20 },\n    {icon: \"fa fa-trash\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/delete`, title: 'Delete  Group Member', priority: 50 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs mb-2\">\n      {navbarLinks.map(link => (\n        <li className=\"nav-item\" key={link.title}>\n        <NavLink className=\"nav-link\" exact to={link.getPath(pathStart, eventId)}  >\n          <i className={link.icon}></i> {link.title}\n        </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n  const deleteSubject = () => {\n    const submissionData = submissionState.submission?.data;\n    if (submissionData) {\n      const {group, user} = submissionData;\n      return `${user.data.email} from the group '${group.data.groupName}'`;\n    }\n    return;\n  }\n\n  return (\n    <div>\n      <Navbar/>\n      <Switch>\n        <Route exact path={`${pathStart}/:${paramName}Id`} component={View}/>\n        <Route path={`${pathStart}/:${paramName}Id/edit`} component={Edit}/>\n        <Route\n          path={`${pathStart}/:${paramName}Id/delete`}\n          render={(props) => <SubmissionDelete {...props} formName={formName} paramName={paramName} pathStart={pathStart} deleteSubject={deleteSubject()}/>}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default MemberPage;\n","import _ from 'lodash';\nimport React, { useCallback, useEffect} from 'react';\nimport { Route, Switch, useParams } from 'react-router-dom';\nimport { FormsConfig } from '../../../../config';\nimport { FormView, getForm, useForm, setFormOptions } from '../../../forms/form';\nimport { FormsProvider } from '../../../forms/form/formsContext';\nimport { SubmissionProvider, SubmissionsList, SubmissionsProvider, useSubmission } from '../../../forms/submission';\nimport MemberPage from './MemberPage';\nimport {Utils} from 'formiojs';\nimport { Loading } from '../../../../common';\n\nconst MembersPage = () => {\n  const paramName = 'member';\n  const { groupId } = useParams();\n  const pathStart = `/groups/${groupId}/members`;\n  const formName = FormsConfig.userGroup;\n\n  const {dispatch: dispatchFormEvent, state: formState} = useForm();\n  const {form, isActive: isFormActive} = formState;\n\n  const {state: submissionState} = useSubmission();\n  const groupName = _.get(submissionState, 'submission.data.groupName', '');\n\n  const transformFormComponents = useCallback((form) => {\n    if (form.components) {\n      const groupComp = Utils.getComponent(form.components, 'group');\n\n      if (groupComp) {\n        groupComp.tableView = false;\n      }\n    }\n    return form;\n  }, []);\n\n  useEffect(() => {\n    getForm(dispatchFormEvent, null, formName, transformFormComponents);\n  }, [dispatchFormEvent, formName, transformFormComponents]);\n\n  useEffect(() => {\n    setFormOptions(dispatchFormEvent, {disableGroup: true});\n  }, [dispatchFormEvent]);\n\n  if (isFormActive || _.isEmpty(form)) {\n    return <Loading/>\n  }\n  return (\n    <div>\n      <FormsProvider>\n        <SubmissionsProvider>\n          <Switch>\n            <Route\n              exact\n              path={`${pathStart}`}\n              render={(props) => {\n                return  <SubmissionsList\n                  {...props}\n                  formName={formName}\n                  getViewPath={(formId, submission) => `${pathStart}/${submission._id}`}\n                  getEditPath={(formId, submission) => `${pathStart}/${submission._id}/edit`}\n                  getDeletePath={(formId, submission) => `${pathStart}/${submission._id}/delete`}\n                  createSubmissionPath={`${pathStart}/create`}\n                  pathStart={pathStart}\n                  submissionsRequestParams ={{query: {'data.group.data.groupName': groupName}}}\n                  addBtnTitle={'Member'}\n                  title={`${groupName} Group Members`}\n                />\n              }}\n            />\n            <Route\n              exact\n              path={`${pathStart}/create`}\n              render={(props) => (\n                <SubmissionProvider>\n                  <FormView {...props} name={formName} submission={{data: {group: submissionState.submission}}} pathStart={pathStart}/>\n                </SubmissionProvider>\n              )}\n            />\n            <Route\n              path={`${pathStart}/:${paramName}Id`}\n              render={(props) => (\n                <SubmissionProvider>\n                  <MemberPage {...props} pathStart={pathStart} paramName={paramName} formName={formName}/>\n                </SubmissionProvider>\n              )}\n            />\n          </Switch>\n        </SubmissionsProvider>\n      </FormsProvider>\n    </div>\n  );\n};\n\n\n\nexport default MembersPage;\n","import React, { useEffect } from 'react';\nimport { NavLink, Route, Switch, useParams } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { useSubmission, getSubmission, SubmissionView, SubmissionDelete} from '../../../forms/submission';\nimport {MembersPage} from '../../members';\nimport { FormProvider } from '../../../forms/form';\n\nconst GroupPage = (props) => {\n  const {pathStart, formName, paramName} = props;\n  const eventId = useParams()[`${paramName}Id`];\n\n  const { dispatch: dispatchSubmissionEvent, state: submissionState } = useSubmission();\n\n  useEffect(() => {\n    getSubmission(dispatchSubmissionEvent, eventId, null, formName);\n  }, [eventId, dispatchSubmissionEvent, formName]);\n\n  const View = () => <SubmissionView pathStart={pathStart} readOnly={true} formName={formName}/>; \n  const Edit = () => <SubmissionView pathStart={pathStart}  readOnly={false} formName={formName}/>;\n\n  const navbarLinks = _.sortBy([ \n    {icon: \"fa fa-chevron-left\", getPath: (pathStart, eventId) => `${pathStart}`, title: '', priority: 0 },\n    {icon: \"fa fa-eye\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}`, title: 'View', priority: 10 },\n    {icon: \"fa fa-edit\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/edit`, title: 'Edit', priority: 20 },\n    {icon: \"fa fa-user-plus\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/members`, exact: false, title: 'Members', priority: 30 },\n    {icon: \"fa fa-trash\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/delete`, title: 'Delete', priority: 40 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs mb-2\">\n      {navbarLinks.map(link => (\n        <li className=\"nav-item\" key={link.title}>\n          <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true} to={link.getPath(pathStart, eventId)}  >\n            <i className={link.icon}></i> {link.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n\n  const deleteSubject = () => {\n    const submissionData = submissionState.submission?.data;\n\n    if (submissionData) {\n      const {groupName} = submissionData;\n      return `the group '${groupName}'`;\n    }\n    return;\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <Switch>\n        <Route exact path={`${pathStart}/:${paramName}Id`} component={View}/>\n        <Route path={`${pathStart}/:${paramName}Id/edit`} component={Edit}/>\n        <Route\n          path={`${pathStart}/:${paramName}Id/delete`}\n          render={(props) => <SubmissionDelete {...props} formName={formName} pathStart={pathStart} paramName={paramName} deleteSubject={deleteSubject()}/>}\n        />\n        <Route path={`${pathStart}/:${paramName}Id/members`} render={(props) => <FormProvider><MembersPage {...props} groupSubmission={_.get(submissionState, 'submission', {})} /></FormProvider>}/>\n      </Switch>\n    </div>\n  );\n};\n\nGroupPage.defaultProps = {\n  eventNavbarLinks: [],\n};\n\nexport default GroupPage;\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { FormsConfig } from '../../../../config';\nimport { FormView, getForm, useForm } from '../../../forms/form';\nimport { FormsProvider } from '../../../forms/form/formsContext';\nimport { SubmissionProvider, SubmissionsList, SubmissionsProvider } from '../../../forms/submission';\nimport GroupPage from './GroupPage';\nimport { Loading } from '../../../../common';\n\nconst GroupsPage = (props) => {\n  const paramName = 'group';\n  const pathStart = '/groups';\n  const formName = FormsConfig.usersGroup;\n\n  const { dispatch: dispatchFormEvent, state: formState } = useForm();\n  const {form, isActive: isFormActive} = formState;\n\n\n  useEffect(() => {\n    getForm(dispatchFormEvent, null, formName);\n  }, [dispatchFormEvent, formName]);\n\n  if (isFormActive || _.isEmpty(form)) {\n    return <Loading/>\n  }\n  return (\n    <FormsProvider>\n      <SubmissionsProvider>\n        <Switch>\n          <Route\n            exact\n            path={`${pathStart}`}\n            render={(props) => {\n              return  <SubmissionsList\n                {...props}\n                formName={formName}\n                getViewPath={(formId, submission) => `${pathStart}/${submission._id}`}\n                getEditPath={(formId, submission) => `${pathStart}/${submission._id}/edit`}\n                getDeletePath={(formId, submission) => `${pathStart}/${submission._id}/delete`}\n                createSubmissionPath={`${pathStart}/create`}\n                pathStart={pathStart}\n                addBtnTitle={'Group'}\n                title={'Groups'}\n              />\n            }}\n          />\n          <Route\n            exact\n            path={`${pathStart}/create`}\n            render={(props) => (\n              <SubmissionProvider>\n                <FormView {...props} name={formName} pathStart={pathStart}/>\n              </SubmissionProvider>\n            )}\n          />\n          <Route\n            path={`${pathStart}/:${paramName}Id`}\n            render={(props) => (\n              <SubmissionProvider>\n                <GroupPage {...props} pathStart={pathStart} paramName={paramName} formName={formName} />\n              </SubmissionProvider>\n            )}\n          />\n        </Switch>\n      </SubmissionsProvider>\n    </FormsProvider>\n  );\n};\n\nexport default GroupsPage;\n","import React, { useEffect } from 'react';\nimport { NavLink, Route, Switch, useParams } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { useSubmission, getSubmission, SubmissionView, SubmissionDelete } from '../../../forms/submission';\n\nconst UserGroupPage = (props) => {\n  const {pathStart, formName, paramName } = props;\n  const eventId = useParams()[`${paramName}Id`];\n\n  const { dispatch: dispatchSubmissionEvent, state:submissionState } = useSubmission();\n\n  useEffect(() => {\n    getSubmission(dispatchSubmissionEvent, eventId, null, formName);\n  }, [eventId, dispatchSubmissionEvent, formName]);\n\n  const View = () => <SubmissionView pathStart={pathStart} readOnly={true} formName={formName} hideLabel/>; \n  const Edit = () => <SubmissionView pathStart={pathStart}  readOnly={false} formName={formName} hideLabel/>;\n\n  const navbarLinks = _.sortBy([ \n    {icon: \"fa fa-chevron-left\", getPath: (pathStart, eventId) => `${pathStart}`, title: '', priority: 0 },\n    {icon: \"fa fa-eye\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}`, title: 'View User Group', priority: 10 },\n    {icon: \"fa fa-edit\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/edit`, title: 'Edit User Group', priority: 20 },\n    {icon: \"fa fa-trash\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/delete`, title: 'Delete User Group', priority: 50 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs mb-2\">\n      {navbarLinks.map(link => (\n        <li className=\"nav-item\" key={link.title}>\n          <NavLink className=\"nav-link\" exact to={link.getPath(pathStart, eventId)}  >\n            <i className={link.icon}></i> {link.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n\n  const deleteSubject = () => {\n    const submissionData = submissionState.submission?.data;\n    if (submissionData) {\n      const {group, user} = submissionData;\n      return `the group '${group.data.groupName}' for the user '${user.data.email}'`;\n    }\n    return;\n  }\n  return (\n    <div>\n      <Navbar/>\n      <Switch>\n        <Route exact path={`${pathStart}/:${paramName}Id`} component={View}/>\n        <Route path={`${pathStart}/:${paramName}Id/edit`} component={Edit}/>\n        <Route\n          path={`${pathStart}/:${paramName}Id/delete`}\n          render={(props) => <SubmissionDelete {...props} formName={formName} paramName={paramName} deleteSubject={deleteSubject()} pathStart={pathStart}/>}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default UserGroupPage;\n","import _ from 'lodash';\nimport React, { useCallback, useEffect } from 'react';\nimport { Route, Switch, useParams } from 'react-router-dom';\nimport {Utils} from 'formiojs';\n\nimport { FormsConfig } from '../../../../config';\nimport { FormView, getForm, useForm, setFormOptions } from '../../../forms/form';\nimport { FormsProvider } from '../../../forms/form/formsContext';\nimport { SubmissionProvider, SubmissionsList, SubmissionsProvider, useSubmission } from '../../../forms/submission';\nimport UserGroupPage from './UserGroupPage';\nimport { Loading } from '../../../../common';\n\n\nconst UserGroupsPage = () => {\n  const paramName = 'groups';\n  const { userId } = useParams();\n  const pathStart = `/users/${userId}/groups`;\n  const formName = FormsConfig.userGroup;\n\n  const { dispatch: dispatchFormEvent, state: formState} = useForm();\n  const {form, isActive: isFormActive} = formState;\n\n  const {state: submissionState} = useSubmission();\n  const userEmail = _.get(submissionState, 'submission.data.email', '');\n\n  const transformFormComponents = useCallback((form) => {\n    if (form.components) {\n      const groupComp = Utils.getComponent(form.components, 'user');\n\n      if (groupComp) {\n        groupComp.tableView = false;\n      }\n    }\n    return form;\n  }, []);\n\n  useEffect(() => {\n    getForm(dispatchFormEvent, null, formName, transformFormComponents);\n  }, [dispatchFormEvent, formName, transformFormComponents]);\n\n  useEffect(() => {\n    setFormOptions(dispatchFormEvent, {disableMember: true});\n  }, [dispatchFormEvent]);\n\n  if(isFormActive || _.isEmpty(form)) {\n    return <Loading/>\n  }\n\n  return (\n    <div>\n    <FormsProvider>\n      <SubmissionsProvider>\n        <Switch>\n          <Route\n            exact\n            path={`${pathStart}`}\n            render={(props) => {\n              return  <SubmissionsList\n                {...props}\n                formName={formName}\n                getViewPath={(formId, submission) => `${pathStart}/${submission._id}`}\n                getEditPath={(formId, submission) => `${pathStart}/${submission._id}/edit`}\n                getDeletePath={(formId, submission) => `${pathStart}/${submission._id}/delete`}\n                createSubmissionPath={`${pathStart}/create`}\n                pathStart={pathStart}\n                submissionsRequestParams ={{query: {'data.user.data.email': userEmail}}}\n                addBtnTitle={'Group'}\n                title={`${userEmail} Groups`}\n              />\n            }}\n          />\n          <Route\n            exact\n            path={`${pathStart}/create`}\n            render={(props) => (\n              <SubmissionProvider>\n                <FormView {...props} name={formName} submission={{data: {user: submissionState.submission}}} pathStart={pathStart} title={'Add Group'}/>\n              </SubmissionProvider>\n            )}\n          />\n          <Route\n            path={`${pathStart}/:${paramName}Id`}\n            render={(props) => (\n              <SubmissionProvider>\n                <UserGroupPage {...props} pathStart={pathStart} paramName={paramName} formName={formName}/>\n              </SubmissionProvider>\n            )}\n          />\n        </Switch>\n      </SubmissionsProvider>\n    </FormsProvider>\n    </div>\n  );\n};\n\n\n\nexport default UserGroupsPage;\n","import React, { useEffect } from 'react';\nimport { NavLink,  Route, Switch, useParams } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { useSubmission, getSubmission, SubmissionView, SubmissionDelete } from '../../../forms/submission';\nimport {UserGroupsPage} from '../../userGroups';\nimport { FormProvider } from '../../../forms/form';\nimport { Title } from '../../../../common';\n\nconst UserPage = (props) => {\n  const {pathStart, formName, paramName } = props;\n  const eventId = useParams()[`${paramName}Id`];\n\n  const { dispatch: dispatchSubmissionEvent, state: submissionState } = useSubmission();\n  const submission = _.get(submissionState, 'submission', {});\n\n  useEffect(() => {\n    getSubmission(dispatchSubmissionEvent, eventId, null, formName);\n  }, [eventId, dispatchSubmissionEvent, formName]);\n\n  const View = () => <SubmissionView pathStart={pathStart} readOnly={true} formName={formName}/>; \n  const Edit = () => <SubmissionView pathStart={pathStart} readOnly={false} formName={formName}/>;\n\n  const navbarLinks = _.sortBy([ \n    {icon: \"fa fa-chevron-left\", getPath: (pathStart, eventId) => `${pathStart}`, title: '', priority: 0 },\n    {icon: \"fa fa-eye\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}`, title: 'View', priority: 10 },\n    {icon: \"fa fa-edit\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/edit`, title: 'Edit', priority: 20 },\n    {icon: \"fa fa-user-plus\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/groups`, exact: false, title: 'Groups', priority: 30 },\n    {icon: \"fa fa-trash\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/delete`, title: 'Delete', priority: 40 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs mb-2\">\n      {navbarLinks.map(link => (\n        <li className=\"nav-item\" key={link.title}>\n          <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true} to={link.getPath(pathStart, eventId)}  >\n            <i className={link.icon}></i> {link.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n\nconst deleteSubject = () => {\n  if (submission.data) {\n    const {email} = submission.data;\n    return `the user ${email}`;\n  }\n  return;\n} \n\n  return (\n    <div>\n      <Title text={`User`}/>\n      <Navbar />\n      <Switch>\n        <Route exact path={`${pathStart}/:${paramName}Id`} component={View}/>\n        <Route path={`${pathStart}/:${paramName}Id/edit`} component={Edit}/>\n        <Route\n          path={`${pathStart}/:${paramName}Id/delete`}\n          render={(props) => <SubmissionDelete {...props} pathStart={pathStart} formName={formName} paramName={paramName} deleteSubject={deleteSubject()}/>}\n\n        />\n        <Route path={`${pathStart}/:${paramName}Id/groups`} render={(props) => <FormProvider><UserGroupsPage {...props} groupSubmission={submission} /></FormProvider>}/>\n      </Switch>\n    </div>\n  );\n};\n\nexport default UserPage;\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { FormsConfig } from '../../../../config';\nimport {  getForm, useForm } from '../../../forms/form/formContext';\nimport { FormsProvider } from '../../../forms/form/formsContext';\nimport { SubmissionProvider, SubmissionsList, SubmissionsProvider } from '../../../forms/submission';\nimport UserPage from './UserPage';\nimport { Loading } from '../../../../common';\n\nconst UsersPage = (props) => {\n  const paramName = 'user';\n  const pathStart = '/users';\n  const formName = FormsConfig.user;\n\n  const { dispatch: dispatchFormEvent, state: formState} = useForm();\n  const {form, isActive: isFormActive} = formState;\n\n  useEffect(() => {\n    getForm(dispatchFormEvent, null, formName);\n  }, [dispatchFormEvent, formName]);\n\n  if (isFormActive || _.isEmpty(form)) {\n    return <Loading/>\n  }\n\n  return (\n    <div>\n    <FormsProvider>\n      <SubmissionsProvider>\n        <Switch>\n          <Route\n            exact\n            path={`${pathStart}`}\n            render={(props) => {\n             return  <div>\n               <SubmissionsList\n                {...props}\n                formName={formName}\n                getViewPath={(formId, submission) => `${pathStart}/${submission._id}`}\n                getEditPath={(formId, submission) => `${pathStart}/${submission._id}/edit`}\n                getDeletePath={(formId, submission) => `${pathStart}/${submission._id}/delete`}\n                pathStart={pathStart}\n                addBtnTitle={'User'}\n                title= {'Users'}\n                hideAddBtn={true}\n              />\n              </div>\n            }}\n          />\n          <Route\n            path={`${pathStart}/:${paramName}Id`}\n            render={(props) => (\n              <SubmissionProvider>\n                <UserPage {...props} pathStart={pathStart} paramName={paramName} formName={formName} />\n              </SubmissionProvider>\n            )}\n          />\n        </Switch>\n      </SubmissionsProvider>\n    </FormsProvider>\n    </div>\n  );\n};\n\n\n\nexport default UsersPage;\n","import React, { useEffect } from 'react';\nimport { NavLink, Route, Switch, useParams } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { useSubmission, getSubmission, SubmissionView, SubmissionDelete } from '../../../forms/submission';\nimport { Loading, Title } from '../../../../common';\nimport { useAuth } from '../../../auth';\nimport { hasAdminRights } from '../../../../utils';\n\nconst EmployeePage = (props) => {\n  const { pathStart, formName, paramName } = props;\n  const eventId = useParams()[`${paramName}Id`];\n\n  const { state: authState} = useAuth();\n  const {is: role, userInfo} = authState;\n  const isUserProfile = _.isEqual(eventId, userInfo._id);\n\n  const isAdmin = hasAdminRights(role);\n\n  const { dispatch: dispatchSubmissionEvent, state: submissionState } = useSubmission();\n  \n  const {isActive: isSubmissionActive} = submissionState;\n\n  useEffect(() => {\n    getSubmission(dispatchSubmissionEvent, eventId, null, formName);\n  }, [eventId, dispatchSubmissionEvent, formName]);\n\n  const View = () => <SubmissionView pathStart={pathStart}  options={{isUserProfile}} readOnly={true} formName={formName}/>; \n  const Edit = () => <SubmissionView pathStart={pathStart}  options={{isUserProfile}} readOnly={false} formName={formName}/>;\n\n  const navbarLinks = _.sortBy([ \n    {icon: \"fa fa-chevron-left\", getPath: (pathStart, eventId) => `${pathStart}`, title: '', priority: 0 },\n    {icon: \"fa fa-eye\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}`, title: 'View', priority: 10 },\n    {icon: \"fa fa-edit\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/edit`, adminOnly: true, showCondition: isUserProfile,title: 'Edit', priority: 20 },\n    {icon: \"fa fa-trash\", getPath: (pathStart, eventId) => `${pathStart}/${eventId}/delete`, adminOnly: true, title: 'Delete', priority: 40 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs mb-2\">\n      {navbarLinks.map(link => {\n        if (link.adminOnly && !isAdmin && !link.showCondition) return null;\n\n        return (\n          <li className=\"nav-item\" key={link.title}>\n            <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true} to={link.getPath(pathStart, eventId)} >\n              <i className={link.icon}></i> {link.title}\n            </NavLink>\n          </li>\n        )\n      })}\n    </ul>\n  );\n\n  const deleteSubject = () => {\n    const employee = _.get(submissionState, 'submission.data', null);\n\n    if (employee) {\n      const {email: employeeEmail, firstName, lastName} = employee;\n\n      return `the profile for ${firstName} ${lastName} (${employeeEmail})`;\n    }\n    return;\n  } \n\n  if (isSubmissionActive) {\n    return <Loading/>;\n  }\n\n  return (\n    <div>\n      <Title text={`Employee Profile`}/>\n      <Navbar />\n      <Switch>\n        <Route exact path={`${pathStart}/:${paramName}Id`} component={View}/>\n        {isAdmin || isUserProfile\n          ? (<Route path={`${pathStart}/:${paramName}Id/edit`} component={Edit}/>)\n          : null\n        }\n        {isAdmin  \n          ? (<Route\n              path={`${pathStart}/:${paramName}Id/delete`}\n              render={(props) => <SubmissionDelete {...props} pathStart={pathStart} formName={formName} paramName={paramName} deleteSubject={deleteSubject()}/>}\n            />)\n          : null\n        }\n      </Switch>\n    </div>\n  );\n};\n\nexport default EmployeePage;\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { FormsConfig } from '../../../../config';\nimport { FormView, getForm, useForm } from '../../../forms/form';\nimport { FormsProvider } from '../../../forms/form/formsContext';\nimport { SubmissionProvider, SubmissionsList, SubmissionsProvider } from '../../../forms/submission';\nimport EmployeePage from './EmployeePage';\nimport { Loading } from '../../../../common';\nimport _ from 'lodash';\n\nconst EmployeesPage = () => {\n  const paramName = 'employee';\n  const pathStart = '/employees';\n  const formName = FormsConfig.userProfile;\n\n  const { dispatch: dispatchFormEvent, state: formState} = useForm();\n  const {form, isActive: isFormActive} = formState;\n\n  useEffect(() => {\n    getForm(dispatchFormEvent, null, formName);\n  }, [dispatchFormEvent, formName]);\n\n  if (isFormActive || _.isEmpty(form)) {\n    return <Loading/>\n  }\n\n  return (\n    <div>\n      <FormsProvider>\n        <SubmissionsProvider>\n          <Switch>\n            <Route\n              exact\n              path={`${pathStart}`}\n              render={(props) => {\n                return  (<div>\n                    <SubmissionsList\n                      {...props}\n                      formName={formName}\n                      getViewPath={(formId, submission) => `${pathStart}/${submission._id}`}\n                      getEditPath={(formId, submission) => `${pathStart}/${submission._id}/edit`}\n                      getDeletePath={(formId, submission) => `${pathStart}/${submission._id}/delete`}\n                      createSubmissionPath={`${pathStart}/create`}\n                      pathStart={pathStart}\n                      addBtnTitle={'Employee'}\n                      title= {'Employees'}\n                      hideAddBtn={true}\n                    />\n                  </div>)\n              }}\n            />\n            <Route\n              exact\n              path={`${pathStart}/create`}\n              render={(props) => (\n                <SubmissionProvider>\n                  <FormView {...props} name={formName} pathStart={pathStart}/>\n                </SubmissionProvider>\n              )}\n            />\n            <Route\n              path={`${pathStart}/:${paramName}Id`}\n              render={(props) => (\n                <SubmissionProvider>\n                  <EmployeePage {...props} pathStart={pathStart} paramName={paramName} formName={formName} />\n                </SubmissionProvider>\n              )}\n            />\n          </Switch>\n        </SubmissionsProvider>\n      </FormsProvider>\n    </div>\n  );\n};\n\n\n\nexport default EmployeesPage;\n","import React from 'react';\nimport { Formio } from '@formio/react';\nimport { FormsConfig } from '../../../config';\nimport NativePromise from 'native-promise-only';\nimport _ from 'lodash';\n\nconst FolderContext = React.createContext();\n\nconst initialState = {\n  parentFolder: null,\n  parentFolderError: '',\n  loadingParentFolder: false,\n  deletingSubfolders: false,\n  deleteSubfoldersStatus: {},\n  deleteSubfoldersError: '',\n  deletePermissionError: '',\n  updatingDependencies: false,\n  updateSubfoldersStatus: {},\n  updateFolderFormsStatus: {},\n  updateDependenciesError: '',\n};\n\nconst deletePermissionErrors = {\n  folder: 'The folder cannot be deleted as it contains forms. Please delete or move forms from this folder and its subfolders to other folders.',\n  subfolder: 'The folder cannot be deleted as its subfolders contain forms. Please delete or move forms from subfolders to other folders.'\n};\n\nconst deleteSubfoldersProgress ={\n  'checkingFolder':{\n    progress: 15,\n    message: 'Checking Folder for Deletion'\n  },\n  'searching':{\n    progress: 20,\n    message: 'Searching Subfolders'\n  },\n  'checkingSubfolders':{\n    progress: 40,\n    message: 'Checking for Deletion'\n  },\n  'getting': {\n    progress: 50,\n    message: 'Searching Subfolders'\n  },\n  'checkingChildren':{\n    progress: 60,\n    message: 'Checking for Deletion'\n  },\n  'deleting': {\n    progress: 70,\n    message: 'Deleting Subfolders'\n  },\n  'finishing': {\n    progress: 90,\n    message: 'Start Deleting Folder'\n  },\n};\n\nconst updateSubfoldersProgress = {\n  'starting':{\n    progress: 5,\n    message: 'Starting Updating Subfolders'\n  },\n  'gettingSubfolders':{\n    progress: 20,\n    message: 'Checking Subfolders'\n  },\n  'updatingSubfolders':{\n    progress: 50,\n    message: 'Updating Subfolders'\n  },\n  'savingSubfolders': {\n    progress: 80,\n    message: 'Saving  Subfolders'\n  },\n  'finishing':{\n    progress: 99,\n    message: 'Finishing'\n  },\n};\n\nconst updateFolderFormsProgress = {\n  'starting':{\n    progress: 5,\n    message: 'Starting Updating Folder Forms'\n  },\n  'loadingFolderForms':{\n    progress: 20,\n    message: 'Checking Folder Forms'\n  },\n  'updatingFolderForms':{\n    progress: 50,\n    message: 'Updating Folder Forms'\n  },\n  'savingFolderForms': {\n    progress: 80,\n    message: 'Saving Folder Forms'\n  },\n  'finishing':{\n    progress: 99,\n    message: 'Finishing'\n  },\n};\n\nconst folderReducer = (state, action) => {\n  switch (action.type) {\n    case 'PARENT_FOLDER_REQUEST':\n      return {\n        ...state,\n        parentFolderError: '',\n        loadingParentFolder: true,\n        parentFolder: null\n      };\n    case 'PARENT_FOLDER_SUCCESS':\n      return {\n        ...state,\n        parentFolderError: '',\n        loadingParentFolder: false,\n        parentFolder: action.parentFolder\n      };\n    case 'PARENT_FOLDER_FAILURE':\n      return {\n        ...state,\n        parentFolderError: action.error,\n        loadingParentFolder: false,\n      };\n    case 'FOLDER_RESET':\n      return initialState;\n    case 'DELETE_SUBFOLDERS_START':\n      return {\n        ...state,\n        deleteSubfoldersError: '',\n        deletingSubfolders: true,\n        deletePermissionError: ''\n      };\n    case 'SET_DELETE_SUBFOLDERS_STATUS':\n      return {\n        ...state,\n        deleteSubfoldersStatus: deleteSubfoldersProgress[`${action.status}`]\n      };\n    case 'DELETE_SUBFOLDERS_FAILURE':\n      return {\n        ...state,\n        deleteSubfoldersError: action.error,\n        deletingSubfolders: false,\n        deleteSubfoldersStatus: {},\n      };\n    case 'DELETE_PERMISSION_FAILURE':\n      return {\n        ...state,\n        deletingSubfolders: false,\n        deleteSubfoldersStatus: {},\n        deletePermissionError: action.error\n      };\n    case 'UPDATE_DEPENDENCIES_START':\n      return {\n        ...state,\n        updatingDependencies: true,\n        updateDependenciesError: '',\n      };\n    case 'SET_UPDATE_SUBFOLDERS_STATUS':\n      return {\n        ...state,\n        updatingDependencies: true,\n        updateSubfoldersStatus: updateSubfoldersProgress[`${action.status}`]\n      };\n    case 'SET_UPDATE_FORMS_STATUS':\n      return {\n        ...state,\n        updatingDependencies: true,\n        updateFolderFormsStatus: updateFolderFormsProgress[`${action.status}`]\n      };\n    case 'UPDATE_DEPENDENCIES_FAILURE':\n      return {\n        ...state,\n        updateDependenciesError: action.error,\n        updatingDependencies: false,\n        updateDependenciesStatus: {},\n      };\n    default:\n      return state;\n  }\n};\n\nexport function FolderProvider(props) {\n  const [state, dispatch] = React.useReducer(folderReducer, initialState);\n  const value = React.useMemo(() => [state, dispatch], [state, dispatch]);\n\n  return <FolderContext.Provider value={value} {...props}/>;\n}\n\nexport function useFolder() {\n  const context = React.useContext(FolderContext);\n  if (!context) {\n    throw new Error('useFolder must be used within a FolderProvider');\n  }\n\n  const [state, dispatch] = context;\n\n  return {\n    state,\n    dispatch\n  }\n}\n\nconst requestParentFolder = () => ({\n  type: 'PARENT_FOLDER_REQUEST',\n});\n\nconst receiveParentFolder = (parentFolder) => ({\n  type: 'PARENT_FOLDER_SUCCESS',\n  parentFolder\n});\n\nconst failParentFolder = (error) => ({\n  type: 'PARENT_FOLDER_FAILURE',\n  error,\n});\n\nexport const resetFolder = () => ({\n  type: 'FOLDER_RESET'\n\n});\n\nconst failDeleteSubfolders = (error) => ({\n  type: 'DELETE_SUBFOLDERS_FAILURE',\n  error,\n});\n\nconst setDeleteSubfoldersStatus = (status) => ({\n  type: 'SET_DELETE_SUBFOLDERS_STATUS',\n  status\n});\n\nconst startDeleteSubfolders = () => ({\n  type: 'DELETE_SUBFOLDERS_START',\n});\n\nconst failDeletePermission = (error) => ({\n  type: 'DELETE_PERMISSION_FAILURE',\n  error\n});\n\nconst failUpdateDependencies = (error) => ({\n  type: 'UPDATE_DEPENDENCIES_FAILURE',\n  error,\n});\n\nconst setUpdateSubfoldersStatus = (status) => ({\n  type: 'SET_UPDATE_SUBFOLDERS_STATUS',\n  status\n});\n\nconst setUpdateFolderFormsStatus = (status) => ({\n  type: 'SET_UPDATE_FORMS_STATUS',\n  status\n});\n\nconst startUpdateDependencies = () => ({\n  type: 'UPDATE_DEPENDENCIES_START',\n});\n\nexport const getParentFolder = (dispatch, folderId, done = () => {}) => {\n  const url = `${Formio.getProjectUrl()}/${FormsConfig.folder}/submission/${folderId}`;\n  const formio = new Formio(url);\n\n  dispatch(requestParentFolder());\n\n  formio.loadSubmission()\n    .then((result) => {\n      dispatch(receiveParentFolder(result));\n      done(null, result);\n    })\n    .catch((error) => {\n      dispatch(failParentFolder(error));\n      done(error);\n    });\n};\n\nconst loadAndCheckSubfolders = (formio, folderId, subfolders, dispatch)=> {\n  return formio.loadSubmissions({params: {'data.parentFolder._id': folderId, select: '_id'}})\n    .then((result) => {\n      if (!result.length) {\n        return subfolders;\n      }\n\n      if (result.length) {\n        const checkEmptyPromises = result.map((subf) => {\n          subfolders.push(subf._id);\n          return isEmptyFolder(subf._id);\n        });\n\n        if (dispatch) {\n          dispatch(setDeleteSubfoldersStatus('checkingSubfolders'));\n        }\n\n        return NativePromise.all(checkEmptyPromises)\n          .then(checks => {\n            const isNotEmptySubfolder = _.some(checks, isEmpty => !isEmpty);\n            if (isNotEmptySubfolder) {\n              return [false];\n            }\n            else {\n              if (dispatch) {\n                dispatch(setDeleteSubfoldersStatus('getting'));\n              }\n\n              const loadSubfolderPromises = result.map((subf) => {\n                subfolders.push(subf._id);\n                return loadAndCheckSubfolders(formio, subf._id, subfolders);\n              });\n\n              if (dispatch) {\n                dispatch(setDeleteSubfoldersStatus('checkingChildren'));\n              }\n              return NativePromise.all(loadSubfolderPromises);\n            }\n          });\n      }\n    })\n};\n\nconst isEmptyFolder = (folderId, setStatus)=> {\n  const formio = new Formio(`${Formio.getProjectUrl()}/${FormsConfig.folderForm}/submission`);\n \n  if (setStatus) {\n    setStatus(); \n  }\n\n  return formio.loadSubmissions({params: {'data.folder._id': folderId}})\n    .then((result) => {\n      return !result.length;\n    })\n};\n\nconst getSubfoldersForDeletion = (dispatch, folderId) => {\n  const formio = new Formio(`${Formio.getProjectUrl()}/${FormsConfig.folder}/submission`);\n  dispatch(setDeleteSubfoldersStatus('searching'));\n\n  return loadAndCheckSubfolders(formio, folderId, [], dispatch);\n};\n\nconst deleteSubfolder = (subfolderId)=> {\n  const formio = new Formio(`${Formio.getProjectUrl()}/${FormsConfig.folder}/submission/${subfolderId}`);\n\n  return formio.deleteSubmission();\n};\n \nexport const deleteSubfolders = (dispatch, folderId, done = () => {}) => {\n  dispatch(startDeleteSubfolders());\n  dispatch(setDeleteSubfoldersStatus('checkingFolder'));\n\n  return isEmptyFolder(folderId)\n    .then(isEmpty => {\n      if (isEmpty) {\n        return getSubfoldersForDeletion(dispatch, folderId)\n          .then(subfolders => {\n            const subfolderIds = _.chain(subfolders).flattenDeep().uniq().value();\n\n            if (subfolderIds.length && subfolderIds[0] === false) {\n              const permissionError = deletePermissionErrors.subfolder;\n              dispatch(failDeletePermission(permissionError));\n              done(permissionError);\n              return;\n            };\n\n            dispatch(setDeleteSubfoldersStatus('deleting'));\n            \n            const deletePromises = _.map(subfolderIds, (id) => {\n              return deleteSubfolder(id);\n            });\n\n            return NativePromise.all(deletePromises).then(()=> {\n              dispatch(setDeleteSubfoldersStatus('finishing'));\n              dispatch(resetFolder());\n              done(null, true);\n            });\n          });\n      }\n      else {\n        const permissionError = deletePermissionErrors.folder;\n\n        dispatch(failDeletePermission(permissionError));\n        done(permissionError);\n      }\n    })\n    .catch((error) => {\n      dispatch(failDeleteSubfolders(error));\n      done(error);\n    });\n};\n\nconst loadSubfolders = (formio, folderId, subfolders, params, dispatch)=> {\n  return formio.loadSubmissions({params: {...params, 'data.parentFolder._id': folderId, }})\n    .then((result) => {\n      if (!result.length) {\n        return subfolders;\n      }\n\n      if (result.length) {\n        const loadSubfolderPromises = result.map((subf) => {\n          subfolders.push(subf);\n          return loadSubfolders(formio, subf._id, subfolders, params);\n        });\n    \n        return NativePromise.all(loadSubfolderPromises);\n      }\n    });\n};\n\nconst getSubfolders = (dispatch, folderId, params= {}) => {\n  const formio = new Formio(`${Formio.getProjectUrl()}/${FormsConfig.folder}/submission`);\n\n  return loadSubfolders(formio, folderId, [], params, dispatch);\n};\n\nconst saveSubmission = (dispatch, formName, submission,  done = () => {}) => {\n  const projectUrl = Formio.getProjectUrl();\n  const url = `${projectUrl}/${formName}/submission/${submission._id}`;\n  const formio = new Formio(url);\n\n  return formio.saveSubmission(submission);\n};\n\n const saveSubfolder = (dispatch, subfolder, done = () => {}) => {\n   return saveSubmission(dispatch, FormsConfig.folder, subfolder, done);\n};\n\nconst saveFormFolder = (dispatch, formFolder, done = () => {}) => {\n  return saveSubmission(dispatch, FormsConfig.folderForm, formFolder, done);\n};\n\nconst updateSubfolders = (dispatch, folderId, changes ) => {\n  const {initialName, newName, deletedGroups, updatedFolder} = changes;\n  const areDeletedGroups = deletedGroups && !!deletedGroups.length;\n\n  if (newName || areDeletedGroups) {\n    dispatch(setUpdateSubfoldersStatus('gettingSubfolders'));\n    return getSubfolders(dispatch, folderId, !newName && areDeletedGroups ? {'data.userGroups._id__in': deletedGroups.join(',')} : {})\n      .then((subfoldersArr => {\n        const subfolders = _.chain(subfoldersArr).flattenDeep().uniq().value();\n        const updateFolderFormsPromises = [];\n\n        dispatch(setUpdateSubfoldersStatus('updatingSubfolders'));\n\n        const updatedSubfolders = _.map(subfolders, subfolder => {\n          if (areDeletedGroups) {\n            const subfolderUpdatedGroups = _.filter(_.get(subfolder, 'data.userGroups'), group => !deletedGroups.includes(group._id));\n            _.set(subfolder, 'data.userGroups', subfolderUpdatedGroups);\n            updateFolderFormsPromises.push(updateFolderForms(null, subfolder._id, subfolderUpdatedGroups));\n          }\n\n          if (newName) {\n          const subfolderPath = _.get(subfolder, 'data.folderPath');\n\n          const updatedPath = _.chain(subfolderPath)\n            .split('/')\n            .map(pathPart => {\n              const part = pathPart.trim()\n              return part === initialName ? newName : part;\n            })\n            .join('/ ');\n\n            _.set(subfolder, 'data.folderPath', updatedPath);\n          }\n\n          return subfolder;\n        });\n\n        const groupedSubfolders = _.keyBy(updatedSubfolders, '_id' );\n        groupedSubfolders[`${updatedFolder._id}`] = updatedFolder;\n\n        const subfolderSavePromises =  _.map(updatedSubfolders, subf => {\n          const parentFolderId = _.get(subf, 'data.parentFolder._id');\n          const changedParentFolder = _.get(groupedSubfolders, parentFolderId);\n\n          if (changedParentFolder && changedParentFolder.data) {\n            _.set(subf, 'data.parentFolder.data', changedParentFolder.data);\n          }\n          return saveSubfolder(dispatch, subf);\n        });\n\n        dispatch(setUpdateSubfoldersStatus('savingSubfolders'));\n\n        return NativePromise.all([...updateFolderFormsPromises, subfolderSavePromises]);\n      }))\n  }\n};\n\nconst updateFolderForms = (dispatch, folderId, newGroups) => {\n  const formio = new Formio(`${Formio.getProjectUrl()}/${FormsConfig.folderForm}/submission`);\n\n  if (dispatch) {\n    dispatch(setUpdateFolderFormsStatus('loadingFolderForms'));\n  }\n\n  return formio.loadSubmissions({params: { 'data.folder._id': folderId }})\n    .then((result) => {\n      if (dispatch) {\n        dispatch(setUpdateFolderFormsStatus('updatingFolderForms'));\n      }\n      const changedFolderForms = _.map(result, formFolder => {\n        _.set(formFolder, 'data.userGroups', newGroups);\n        return saveFormFolder(dispatch, formFolder);\n      });\n      if (dispatch) {\n        dispatch(setUpdateFolderFormsStatus('savingFolderForms'));\n      }\n      return NativePromise.all(changedFolderForms);\n    });\n};\n\nexport const updateFolderDependantResources = (dispatch, folderId, changes, done=()=> {}) => {\n  dispatch(startUpdateDependencies());\n  dispatch(setUpdateSubfoldersStatus('starting'));\n  dispatch(setUpdateFolderFormsStatus('starting'));\n\n  const {newName, newGroups, deletedGroups} = changes;\n  const updatingPromises = [];\n  const areGroupsChanged = deletedGroups && !!deletedGroups.length;\n  \n  if (newName || areGroupsChanged) {\n    updatingPromises.push(updateSubfolders(dispatch, folderId, changes)\n      .then((res) => { \n        dispatch(setUpdateSubfoldersStatus('finishing')); \n        return res;\n      }));\n  }\n  else {\n    dispatch(setUpdateSubfoldersStatus('finishing')); \n  }\n\n  if (newGroups) {\n    updatingPromises.push(updateFolderForms(dispatch, folderId, newGroups)\n      .then((res) => { \n        dispatch(setUpdateFolderFormsStatus('finishing'));\n        return res;\n      }));\n  }\n  else {\n    dispatch(setUpdateFolderFormsStatus('finishing'));\n  }\n\n  return NativePromise.all(updatingPromises).then((result) => {\n    dispatch(resetFolder());\n    done(null, result);\n  }).catch((error) => {\n    dispatch(failUpdateDependencies(error));\n    done(error);\n  })\n};\n","import _ from 'lodash';\n\nexport const getSubfolderGroupsQuery = (folder) => {\n  const folderGroups = _.get(folder, 'data.userGroups', []);\n  const groupIds =  folderGroups\n    .map((group) => group._id)\n    .join(',');\n\n  return `_id__in=${groupIds}`;\n};","import _ from 'lodash';\nimport React, { useCallback, useEffect } from 'react';\nimport { Route, Switch, useParams } from 'react-router-dom';\nimport {Utils} from 'formiojs';\n\nimport { FormsConfig } from '../../../../config';\nimport { FormView, getForm, useForm, setFormOptions } from '../../../forms/form';\nimport { FormsProvider } from '../../../forms/form/formsContext';\nimport { SubmissionProvider, SubmissionsList, SubmissionsProvider, useSubmission, resetSubmission } from '../../../forms/submission';\nimport { getSubfolderGroupsQuery } from '../../FoldersUtils';\nimport { Loading } from '../../../../common';\n\nconst SubfoldersPage = () => {\n  const {folderId} = useParams();\n  const pathStart = `/folders/${folderId}/subfolders`;\n  const formName = FormsConfig.folder;\n\n  const {dispatch: dispatchFormEvent, state: formState} = useForm();\n  const {form, isActive: isFormActive} = formState;\n  const {state: submissionState, dispatch: dispatchSubmissionAction} = useSubmission();\n  const {submission: folder } = submissionState;\n \n  const transformFormComponents = useCallback((form) => {\n    if (form.components) {\n      const groupComp = Utils.getComponent(form.components, 'group');\n\n      if (groupComp) {\n        groupComp.tableView = false;\n      }\n    }\n    return form;\n  }, []);\n\n  useEffect(() => {\n    getForm(dispatchFormEvent, null, formName, transformFormComponents);\n  }, [dispatchFormEvent, formName, transformFormComponents]);\n\n  useEffect(() => {\n    setFormOptions(dispatchFormEvent, {disableParent: true});\n  }, [dispatchFormEvent]);\n\n  const getParentFolderData = () => {\n    const parentFolder = folder;\n    const parentFolderGroups = _.get(parentFolder, 'data.userGroups', []);\n\n    return {\n      data: {\n        parentFolder,\n        subfolder: true,\n        userGroups: parentFolderGroups\n      }\n    }\n  }\n\n  if (isFormActive || _.isEmpty(form)) {\n    return <Loading/>\n  }\n\n  return (\n    <div>\n      <FormsProvider>\n        <SubmissionsProvider>\n          <Switch>\n            <Route\n              exact\n              path={`${pathStart}`}\n              render={(props) => {\n              return  <SubmissionsList\n                  {...props}\n                  formName={formName}\n                  beforeViewSubmission={() => {dispatchSubmissionAction(resetSubmission())}}\n                  getViewPath={(formId, submission) => `/folders/${submission._id}`}\n                  // getEditPath={(formId, submission) => `${pathStart}/${submission._id}/edit`}\n                  // getDeletePath={(formId, submission) => `${pathStart}/${submission._id}/delete`}\n                  createSubmissionPath={`${pathStart}/create`}\n                  pathStart={pathStart}\n                  submissionsRequestParams ={{query: {'data.parentFolder._id': folder._id}}}\n                  addBtnTitle={'Subfolder'}\n                  title={`${_.get(folder, 'data.folderName', '')} Folder Subfolders`}\n                />\n              }}\n            />\n            <Route\n              exact\n              path={`${pathStart}/create`}\n              render={(props) => (\n                <SubmissionProvider>\n                  <FormView \n                    {...props} \n                    name={formName} \n                    options={{subfolderGroupsQuery: getSubfolderGroupsQuery(folder)}}\n                    submission={getParentFolderData()} \n                    pathStart={pathStart}\n                  />\n                </SubmissionProvider>\n              )}\n            />\n          </Switch>\n        </SubmissionsProvider>\n      </FormsProvider>\n    </div>\n  );\n};\n\n\n\nexport default SubfoldersPage;\n","\n\nimport React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Errors } from '@formio/react';\n\nimport {useFolder, deleteSubfolders} from '../folderContext';\nimport { Progressbar} from '../../../../common';\nimport { Confirm } from '../../../../common';\nimport { useForm } from '../../../forms/form';\nimport { useSubmission, deleteSubmission } from '../../../forms/submission/submissionContext'\nimport { useSubmissions, resetSubmissions } from '../../../forms/submission/submissionsContext';\n\n\nconst FolderDelete = ({ formName, paramName, pathStart}) => {\n  const history = useHistory();\n  const {folderId} = useParams();\n\n  const { dispatch: dispatchSubmissionsAction } = useSubmissions();\n  const { state: formState } = useForm();\n\n  const { state: submissionState, dispatch: dispatchSubmissionAction } = useSubmission();\n  const { deletingSubmission: deletingFolder, submission: folder} = submissionState\n\n  const {dispatch: dispatchFolderEvent, state: folderState} = useFolder();\n  const {deletingSubfolders, deleteSubfoldersStatus, deleteSubfoldersError, deletePermissionError} = folderState;\n  const {progress, message} = deleteSubfoldersStatus;\n\n  const getDeleleMessage = () => {\n    const folderData = folder?.data || {};\n    const {folderName, folderPath} = folderData;\n \n    return `Are you sure you wish to delete the folder '${folderName}' (path: ${folderPath}) with all its subfolders?`;\n  }\n\n  const onYes = () => {\n    deleteSubfolders(dispatchFolderEvent, folder._id, (err) => {\n      if(err) return;\n      \n      deleteSubmission(dispatchSubmissionAction, folderId, null, formName,  (err) => {\n        if (!err && !deletePermissionError) {\n          dispatchSubmissionsAction(resetSubmissions());\n          history.push(pathStart);\n        }\n      });\n    })\n\n  };\n\n  const onNo = () => {\n    history.push(pathStart);\n  };\n\n  const Progress = () => {\n    return (<Progressbar progress={deletingFolder ? '98' : progress} message={deletingFolder ? 'Deleting folder' : message}/>)\n  }\n\n  const DeleteConfirmation = () => {\n    return (<Confirm\n      message={getDeleleMessage()}\n      onYes={onYes}\n      onNo={onNo}\n    />)\n  }\n\n  return (\n    <div>\n      <Errors errors={[submissionState.error, formState.error, deleteSubfoldersError, deletePermissionError]} />\n      {(deletingSubfolders || deletingFolder) \n        ? Progress()\n        : !deletePermissionError \n          ? DeleteConfirmation() \n          : null\n      }\n    </div>\n  )\n};\n\nexport default FolderDelete;\n\n","import React from 'react';\nimport { Form, Errors } from '@formio/react';\nimport { useHistory } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { Progressbar } from '../../../../common';\nimport { useSubmission, saveSubmission } from '../../../forms/submission/submissionContext';\nimport { useSubmissions, resetSubmissions } from '../../../forms/submission/submissionsContext';\nimport {useFolder, updateFolderDependantResources} from '../folderContext';\nimport { useForm } from '../../../forms/form/formContext';\n\n\nconst FolderEdit = (props) => {\n  const {formName, pathStart,  options: propsOptions } = props;\n  const history = useHistory();\n\n  const { state: formState } = useForm();\n  const { dispatch: dispatchSubmissionsAction } = useSubmissions();\n\n  const { state: submissionState, dispatch: dispatchSubmissionAction } = useSubmission();\n  const { submission:folder, savingSubmission } = submissionState;\n  const initialFolder = _.cloneDeep(folder.data);\n\n  const {dispatch: dispatchFolderEvent, state: folderState} = useFolder();\n  const {updatingDependencies, updateSubfoldersStatus, updateFolderFormsStatus, updateDependenciesError} = folderState;\n  const {progress: subfodersUpdateProgress, message: subfodersUpdateMessage} = updateSubfoldersStatus;\n  const {progress: folderFormsUpdateProgress, message: folderFormsUpdateMessage} = updateFolderFormsStatus;\n\n  const getFolderChanges = (submission) => {\n    const {data: updatedFolder} = submission;\n    const result = {};\n\n    result.updatedFolder = submission;\n    result.newName = !_.isEqual(updatedFolder.folderName, initialFolder.folderName) ? updatedFolder.folderName : '';\n\n    if (result.newName) {\n      result.initialName = initialFolder.folderName;\n    }\n  \n    const {userGroups: updatedGroups} = updatedFolder;\n    const {userGroups: initialGroups} = initialFolder;\n\n    result.deletedGroups = [];\n\n    const areGroupsChanged = _.reduce(initialGroups, (changed, initialGroup) => {\n      const groupInUpdatedGroups = _.find(updatedGroups, updatedGroup => _.isEqual(updatedGroup._id, initialGroup._id));\n\n      if (groupInUpdatedGroups) {\n        return changed;\n      }\n      else {\n        result.deletedGroups.push(initialGroup._id);\n        return true;\n      }\n    }, false);\n\n    if (!_.isEqual(updatedGroups.length, initialGroups.length) || areGroupsChanged) {\n      result.newGroups = updatedGroups;\n    }\n  \n    return result;\n  }\n\n  const onSubmit = (submission) => {\n    saveSubmission(dispatchSubmissionAction, submission, null, formName, (err, submission) => {\n      if (!err) {\n        updateFolderDependantResources(\n          dispatchFolderEvent, \n          submission._id, \n          getFolderChanges(submission), \n          (err) => {\n            if (!err) {\n              dispatchSubmissionsAction(resetSubmissions('submission'));\n              history.push(`${pathStart}/${submission._id}`);   \n            }\n          }\n        );\n      }\n    });\n  }\n\n  return (\n    <div>\n      <Errors errors={[formState.error, submissionState.error, updateDependenciesError]} />\n      {updatingDependencies || savingSubmission\n        ? (<>\n            <Progressbar progress={savingSubmission ? 5 : subfodersUpdateProgress}  title={'Updating Subfolders'} message={ savingSubmission ? 'Saving Folder' : subfodersUpdateMessage}/>\n            <Progressbar progress={folderFormsUpdateProgress} title={'Updating Folder Forms Access'} message={folderFormsUpdateMessage}/>\n          </>) \n        : (<Form\n            form={formState.form}\n            submission={folder}\n            url={submissionState.url}\n            onSubmit={onSubmit}\n            options={{ ...formState.options, ...propsOptions}}\n          />)\n      }\n    </div>\n  );\n};\n\nexport default FolderEdit;\n","import React, {useEffect} from 'react';\nimport {NavLink, Route, Switch, useParams} from 'react-router-dom';\nimport _ from 'lodash';\n\nimport {useSubmission, getSubmission, SubmissionView} from '../../../forms/submission';\nimport {useFolder, getParentFolder, resetFolder} from '../folderContext';\nimport {SubfoldersPage} from '../../subfolders';\nimport {FormProvider} from '../../../forms/form';\nimport {getSubfolderGroupsQuery} from '../../FoldersUtils';\nimport FolderDelete from './FolderDelete';\nimport FolderEdit from './FolderEdit';\nimport { Loading } from '../../../../common';\n\nconst FolderPage = (props) => {\n  const {pathStart, formName, paramName} = props;\n  const folderId = useParams()[`${paramName}Id`];\n\n  const {dispatch: dispatchFolderEvent, state: folderState} = useFolder();\n  const {parentFolder, loadingParentFolder} = folderState;\n\n  const {dispatch: dispatchSubmissionEvent, state: submissionState} = useSubmission();\n  const folder = _.get(submissionState, 'submission', null);\n  const isSubfolder = _.get(folder, 'data.subfolder');\n  const {isActive: isFolderLoading} = submissionState;\n\n  useEffect(() => {\n    getSubmission(dispatchSubmissionEvent, folderId, null, formName);\n  }, [folderId, dispatchSubmissionEvent, formName, dispatchFolderEvent]);\n\n  useEffect(() => {\n    dispatchFolderEvent(resetFolder());\n\n    if (isSubfolder){\n      const parentFolderId = _.get(folder, 'data.parentFolder._id');\n      getParentFolder(dispatchFolderEvent, parentFolderId);\n    }\n  }, [dispatchFolderEvent, folder, folderId, isSubfolder]);\n \n  const View = () => <SubmissionView pathStart={pathStart} readOnly={true} formName={formName}/>; \n  const Edit = () => <FolderEdit pathStart={pathStart}  options={{subfolderGroupsQuery: isSubfolder ? getSubfolderGroupsQuery(parentFolder) : ''}}  formName={formName}/>;\n\n  const navbarLinks = _.sortBy([ \n    {icon: \"fa fa-chevron-left\", getPath: (pathStart, folderId) => `${pathStart}`, title: '', priority: 0 },\n    {icon: \"fa fa-eye\", getPath: (pathStart, folderId) => `${pathStart}/${folderId}`, title: 'View', priority: 10 },\n    {icon: \"fa fa-edit\", getPath: (pathStart, folderId) => `${pathStart}/${folderId}/edit`, title: 'Edit', priority: 20 },\n    {icon: \"fa fa-folder\", getPath: (pathStart, folderId) => `${pathStart}/${folderId}/subfolders`, exact: false, title: 'Subfolders', priority: 40 },\n    {icon: \"fa fa-trash\", getPath: (pathStart, folderId) => `${pathStart}/${folderId}/delete`, title: 'Delete', priority: 50 },\n  ], (link) => link.priority );\n\n  const Navbar = () => (\n    <ul className=\"nav nav-tabs mb-2\">\n      {navbarLinks.map(link => (\n        <li className=\"nav-item\" key={link.title}>\n        <NavLink className=\"nav-link\" exact={_.isBoolean(link.exact) ? link.exact : true} to={link.getPath(pathStart, folderId)}  >\n          <i className={link.icon}></i> {link.title}\n        </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n\n  const isLoading = loadingParentFolder || (isSubfolder && _.isEmpty(parentFolder)) || isFolderLoading || _.isEmpty(folder);\n\n  if(isLoading) {\n    return <Loading/>;\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <Switch>\n        <Route exact path={`${pathStart}/:${paramName}Id`} component={View}/>\n        <Route path={`${pathStart}/:${paramName}Id/edit`} component={Edit}/>\n        <Route\n          path={`${pathStart}/:${paramName}Id/delete`}\n          render={(props) => <FolderDelete {...props} formName={formName} pathStart={pathStart} paramName={paramName}/>}\n        />\n        <Route path={`${pathStart}/:${paramName}Id/subfolders`} render={(props) => <FormProvider><SubfoldersPage {...props} /></FormProvider>}/>\n      </Switch>\n    </div>\n  );\n};\n\nFolderPage.defaultProps = {\n  eventNavbarLinks: [],\n};\n\nexport default FolderPage;\n","import _ from 'lodash';\nimport React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Loading } from '../../../../common';\n\nimport { FormsConfig } from '../../../../config';\nimport { FormView, getForm, useForm } from '../../../forms/form';\nimport { FormsProvider } from '../../../forms/form/formsContext';\nimport { SubmissionProvider, SubmissionsList, SubmissionsProvider } from '../../../forms/submission';\nimport { FolderProvider } from '../folderContext';\nimport FolderPage from './FolderPage';\n\nconst FoldersPage = (props) => {\n  const paramName = 'folder';\n  const pathStart = '/folders';\n  const formName = FormsConfig.folder;\n\n  const { dispatch: dispatchFormEvent, state: formState } = useForm();\n  const {form, isActive} = formState;\n\n  useEffect(() => {\n    getForm(dispatchFormEvent, null, formName);\n  }, [dispatchFormEvent, formName]);\n\n  if (isActive || _.isEmpty(form)) {\n    return <Loading/>\n  }\n\n  return (\n    <FormsProvider>\n      <SubmissionsProvider>\n        <Switch>\n          <Route\n            exact\n            path={`${pathStart}`}\n            render={(props) => {\n              return  <SubmissionsList\n                {...props}\n                formName={formName}\n                getViewPath={(formId, submission) => `${pathStart}/${submission._id}`}\n                getEditPath={(formId, submission) => `${pathStart}/${submission._id}/edit`}\n                getDeletePath={(formId, submission) => `${pathStart}/${submission._id}/delete`}\n                createSubmissionPath={`${pathStart}/create`}\n                submissionsRequestParams={{sort: 'data.folderPath'}}\n                pathStart={pathStart}\n                addBtnTitle={'Folder'}\n                title={'Folders'}\n              />\n            }}\n          />\n          <Route\n            exact\n            path={`${pathStart}/create`}\n            render={(props) => (\n              <SubmissionProvider>\n                <FormView {...props} name={formName} pathStart={pathStart}/>\n              </SubmissionProvider>\n            )}\n          />\n          <Route\n            path={`${pathStart}/:${paramName}Id`}\n            render={(props) => (\n              <SubmissionProvider>\n                <FolderProvider>\n                  <FolderPage {...props} pathStart={pathStart} paramName={paramName} formName={formName} />\n                </FolderProvider>\n              </SubmissionProvider>\n            )}\n          />\n        </Switch>\n      </SubmissionsProvider>\n    </FormsProvider>\n  );\n};\n\n\n\nexport default FoldersPage;\n","import { Form, Errors } from '@formio/react';\nimport _ from 'lodash';\nimport { useEffect, useState } from 'react';\nimport { Loading, Progressbar } from '../../../../common';\nimport { FormsConfig } from '../../../../config'\nimport { useAuth, addUserInfo } from '../../../auth';\nimport { getForm, useForm } from '../../../forms/form';\nimport { useSubmission, saveSubmission } from '../../../forms/submission';\nimport { useUser, addUserToEveryoneGroup } from '../../../users/user/userContext';\n\nconst EmployeeInfoPage = () => {\n  const formName = FormsConfig.userProfile;\n\n  const { dispatch, state: formState } = useForm();\n  const { form, isActive,  error: formError } = formState;\n\n  const { state: authState, dispatch: dispatchAuthAction } = useAuth();\n  const { user } = authState;\n\n  const { state: submissionState, dispatch: dispatchSubmissionAction } = useSubmission();\n  const { savingSubmission, error: submissionError} = submissionState;\n\n  const { dispatch: dispatchUserAction, state: userState } = useUser();\n  const {\n    addingUserToEveryoneStatus,\n    addingUserToEveryoneError\n  } = userState;\n  const { message, progress } = addingUserToEveryoneStatus;\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  useEffect(() => {\n    getForm(dispatch, null, formName);\n  }, [dispatch, formName]);\n\n  const options = { template: 'bootstrap', iconset: 'fa', readOnly: false, ...form.options, userId: user._id, isUserProfile:true };\n\n  const onSubmit = (submission) => {\n    setIsSubmitted(true);\n    saveSubmission(dispatchSubmissionAction, submission, null, formName, (err, submission) => {\n      if (!err) {\n        addUserToEveryoneGroup(dispatchUserAction, user, (err, userGroup) => {\n          if (!err) {\n            dispatchAuthAction(addUserInfo(submission));\n          }\n        });\n      }\n    });\n  }\n\n  const submission = {\n    data: {\n      id: user.data.id,\n      firstName: user.data.firstName,\n      lastName: user.data.lastName,\n      email: user.data.email\n    }\n  };\n\n  if (isActive || _.isEmpty(form)) {\n    return <Loading />;\n  }\n\n  return (\n    <div>\n      <h3>{'User Profile'}</h3>\n      <div className=\"alert alert-info\" role=\"alert\">\n          <span className=\"\">To start working with the app, please fill in your profile.</span>\n        </div>\n      <Errors errors={[formError, submissionError, addingUserToEveryoneError]} />\n      {isSubmitted && ![formError, submissionError, addingUserToEveryoneError].some(Boolean)\n        ? (<Progressbar message={savingSubmission ? 'Saving User Profile' : message} progress={savingSubmission ? 15 : progress} />)\n        : (<Form\n            form={form}\n            submission={submission}\n            onSubmit={onSubmit}\n            options={{...options}}\n          />)\n      }\n    </div>\n  );\n}\n\nexport default EmployeeInfoPage;\n","import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { initAuth } from '@formio/react';\nimport _ from 'lodash';\nimport {Redirect, Switch, useHistory, useLocation} from 'react-router-dom';\nimport './App.scss';\nimport {useAuth, AuthPage, getUserInfo, AutoLoginPage} from './modules/auth';\nimport {FormProvider, FormsPage} from './modules/forms/form';\nimport {Footer, Header, Home, Loading, Modal, NotFoundPage} from './common';\nimport {GroupsPage}from './modules/groups/group';\nimport {UsersPage}from './modules/users/user';\nimport {EmployeesPage}from './modules/employees/employee';\nimport {FoldersPage} from './modules/folders/folder'\nimport {Alerts, AlertsProvider} from './modules/alerts';\nimport {MyFormsPage} from './modules/myForms/myForm';\nimport {AllIncomingSubmissionsPage} from './modules/forms/incomingSubmission';\nimport {AllRoutedSubmissionsPage} from './modules/forms/routedSubmission';\nimport { IncomingCountProvider } from './modules/incomingCount';\nimport { hasAdminRights } from './utils';\nimport EmployeeCreatePage from './modules/employees/employee/components/EmployeeCreatePage';\nimport { SubmissionProvider } from './modules/forms/submission';\nimport { UserProvider } from './modules/users/user/userContext';\n\nfunction App() {\n  const {dispatch, state: authState} = useAuth();\n  const {isActive: isAuthActive, user, authenticated, userInfo,  init, is: role, isUserInfoFetched} = authState;\n  const history = useHistory();\n  const location = useLocation();\n  const isAdmin = hasAdminRights(role);\n\n  useEffect(() => {\n    initAuth()(dispatch);\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (user && user.data.id) {\n      getUserInfo(dispatch, user.data.id);\n    }\n  }, [dispatch, user]);\n\n  useEffect(() => {\n    if (init && !isAuthActive && !user && location.pathname !== '/auth/done') {\n      history.push('/auth');\n    }\n\n    if (user && authenticated && location.pathname === '/auth/done') {\n      history.push('/');\n    }\n  }, [user, init, isAuthActive, history, location.pathname, authenticated]);\n\n  const getAdminRoutes = () => (\n    [\n      <Route path=\"/users\" key=\"/users\"  render={(props) => <FormProvider><UsersPage {...props} /></FormProvider>} />,\n      <Route path=\"/groups\" key=\"/groups\" render={(props) => <FormProvider><GroupsPage {...props} /></FormProvider>} />,\n      <Route path=\"/folders\" key=\"/folders\" render={(props) => <FormProvider><FoldersPage {...props} /></FormProvider>} />,\n    ]\n  )\n\n  const gettingUser = isAuthActive || !init;\n\n  const getUnauthenticatedUserRoutes = () => {\n    return <Switch>\n      <Route  exact path=\"/auth/done\" component={AutoLoginPage} />\n      <Route exact path=\"/auth\" component={AuthPage} />\n    </Switch>\n  };\n\n  const getNewUserRoutes = () => {\n    return <Switch>\n      <Route path=\"/employees/create\" exact render={(props) =>\n        <FormProvider>\n          <SubmissionProvider>\n            <UserProvider>\n              <EmployeeCreatePage {...props}/>\n            </UserProvider>\n          </SubmissionProvider>\n        </FormProvider>} />\n      <Route path=\"/\">\n        <Redirect to=\"/employees/create\" />\n      </Route>\n    </Switch>\n  };\n\n  const getAuthenticatedUserRoutes = () => {\n    return <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/employees/create\">\n        <Redirect to=\"/\" />\n      </Route>\n      <Route exact path=\"/users/create\">\n        <Redirect to=\"/\" />\n      </Route>\n      <Route path=\"/form\" component={FormsPage} />\n      <Route path=\"/incoming\"  render={(props) => <FormProvider><AllIncomingSubmissionsPage {...props} /></FormProvider>}/>\n      <Route path=\"/routed\" render={(props) => <FormProvider><AllRoutedSubmissionsPage {...props} /></FormProvider>}/>\n      {!isAdmin && <Route path=\"/myforms\" component={MyFormsPage} />}\n      <Route exact path=\"/auth\" component={AuthPage} />\n      <Route path=\"/employees\" render={(props) => <FormProvider><EmployeesPage {...props} /></FormProvider>} />\n      {isAdmin ? getAdminRoutes() : null}\n      <Route component={NotFoundPage} />\n    </Switch>\n  };\n\n  return (\n    <IncomingCountProvider>\n    <>\n      {gettingUser\n        ? (<Modal className=\"alert alert-info\">\n            <div className=\"d-flex flex-column align-items-center\">\n              <Loading style={{ marginBottom: ' 10px' }}/>\n              Logging In...\n            </div>\n          </Modal>)\n        : null\n      }\n      <div className=\"App\">\n        <Header/>\n        {!gettingUser && (<AlertsProvider>\n          <Alerts/>\n          <div className=\"container mb-5\" id=\"main\">\n            {!user\n              ? getUnauthenticatedUserRoutes()\n              : (user && isUserInfoFetched && _.isEmpty(userInfo)\n                ? getNewUserRoutes()\n                : ((isUserInfoFetched || isAdmin) && getAuthenticatedUserRoutes()))\n            }\n          </div>\n        </AlertsProvider>)}\n        <Footer></Footer>\n      </div>\n    </>\n    </IncomingCountProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Formio } from \"@formio/react\";\n\nconst BasicEditForm = Formio.AllComponents.button.editForm;\n\nexport default function some(...extend) {\n  return BasicEditForm(\n    [\n      {\n        key: \"display\",\n        components: [\n          {\n            key: \"action\",\n            ignore: true,\n          },\n          {\n            key: \"custom\",\n            ignore: true,\n          },\n        ],\n      },\n    ],\n    ...extend\n  );\n};\n\n","import { Formio } from '@formio/react';\nimport editForm from './NextButton.form';\n\nconst FormioButton = Formio.AllComponents.button;\nclass NextButton extends FormioButton {\n  static schema(...extend) {\n    return FormioButton.schema({\n      type: 'nextButton',\n      label: 'Next',\n      key: 'next',\n      size: 'md',\n      action: '',\n      leftIcon: '',\n      rightIcon: '',\n      block: false,\n      persistent: false,\n      disableOnInvalid: false,\n      theme: 'primary',\n      dataGridLabel: true\n    }, ...extend);\n  }\n\n  static get builderInfo() {\n    return {\n      title: 'Next Button',\n      group: 'custom',\n      icon: 'arrow-right',\n      weight: 20,\n      schema: NextButton.schema()\n    };\n  }\n\n  onClick(event) {\n    if (this.disabled || this.options.attachMode === 'builder') {\n      return;\n    }\n    this.dataValue = true;\n\n    if (this.component.showValidations) {\n      this.emit('checkValidity', this.data);\n    }\n\n    const wizard = this.root;\n    const pageStageId = wizard.pages[wizard.page]?.component?.stageId;\n    const nextPageStageId= wizard.pages[wizard.page+1]?.component?.stageId;\n\n    let allowNext = pageStageId === nextPageStageId;\n\n    if (allowNext) {\n      this.root.nextPage();\n    }\n  }\n\n}\n\nNextButton.editForm = editForm;\n\n\nexport default NextButton;","import { Formio } from \"@formio/react\";\n\nconst BasicEditForm = Formio.AllComponents.button.editForm;\n\nexport default function RouteButtonEditForm(...extend) {\n  return BasicEditForm(\n    [\n      {\n        key: \"display\",\n        components: [\n          {\n            key: \"action\",\n            ignore: true,\n          },\n          {\n            key: \"event\",\n            ignore: true,\n          },\n        ],\n      },\n      {\n        key: \"route\",\n        label: \"Route\",\n        weight: 5,\n        components: [\n          {\n            label: \"Route To Stage\",\n            widget: \"choicesjs\",\n            validate: {\n              required: true,\n            },\n            dataSrc: \"custom\",\n            dataType: \"string\",\n            valueProperty: \"value\",\n            data: {\n              custom:\n                \"let stages = _.get(instance, 'options.editForm.properties.stagesSettings', []);\\nvalues = _.map(stages, (stage, index) => ({label: stage.title, value: stage.id}));\",\n            },\n            key: \"routeStage\",\n            type: \"select\",\n            input: true,\n          },\n          {\n            label: \"Recipients\",\n            key: \"routeRecipients\",\n            type: \"container\",\n            input: true,\n            components: [\n              {\n                label: \"Route To:\",\n                hideLabel: false,\n                key: \"to\",\n                type: \"container\",\n                input: true,\n                components: [\n                  getRecipientTypeComponent(),\n                  getGroupComponents(\"To Group\"),\n                ],\n              },\n              {\n                label: \"CCs:\",\n                hideLabel: false,\n                tableView: false,\n                key: \"ccs\",\n                type: \"container\",\n                input: true,\n                components: [\n                  getRecipientTypeComponent(),\n                  getGroupComponents(\"CC Group\"),\n                ],\n              },\n              {\n                label: \"BCCs:\",\n                hideLabel: false,\n                tableView: false,\n                key: \"bccs\",\n                type: \"container\",\n                input: true,\n                components: [\n                  getRecipientTypeComponent(),\n                  getGroupComponents(\"BCC Group\"),\n                ],\n              },\n              {\n                label: \"HTML\",\n                className: \"well\",\n                attrs: [\n                  {\n                    attr: \"\",\n                    value: \"\",\n                  },\n                ],\n                content:\n                  \"The <code>User</code> option means that any system user that has access to the process can be selected as the recipient of the submission. </br>\\nThe <code>Group User</code> means that any user of specific group can be selected as the recipient of the submission. </br>\\nThe <code>All Group Users</code> option means that all users of specific group will be recipients of the submission, the TO/CC/BCC field will be prefilled.\",\n                refreshOnChange: false,\n                key: \"html\",\n                type: \"htmlelement\",\n                input: false,\n                tableView: false,\n              },\n            ],\n          },\n        ],\n      },\n    ],\n    ...extend\n  );\n}\n\nfunction getGroupSelectComponent(ext = {}) {\n  return {\n    label: \"Group\",\n    widget: \"choicesjs\",\n    dataSrc: \"url\",\n    data: {\n      url: \"{{Formio.getProjectUrl()}}/usersgroup/submission\",\n    },\n    valueProperty: \"_id\",\n    limit: 10000,\n    validate: {\n      required: true,\n    },\n    template: \"<span>{{ item.data.groupName }}</span>\",\n    key: \"group\",\n    lazyLoad: false,\n    type: \"select\",\n    disableLimit: false,\n    searchField: \"data.groupName__regex\",\n    authenticate: true,\n    input: true,\n    ...ext,\n  };\n}\n\nfunction getGroupComponents(groupLabel = \"\") {\n  return {\n    key: \"wrapper\",\n    type: \"wrapper\",\n    label: \"Wrapper\",\n    input: false,\n    hideLabel: true,\n    tableView: false,\n    customConditional:\n      \"show = ['groupUser', 'allGroupUsers'].includes(_.get(row, 'recipientType', ''));\",\n    components: [\n      {\n        label: \"Conditional\",\n        tooltip:\n          \"Check it, if you want the group value to change depending on the condition.\",\n        disableSortingAndFiltering: false,\n        tableView: false,\n        defaultValue: false,\n        key: \"conditional\",\n        type: \"checkbox\",\n        input: true,\n      },\n      getGroupSelectComponent({\n        label: groupLabel,\n        customConditional: \"show=!row.conditional\",\n      }),\n      {\n        label: \"Group Options\",\n        addAnother: \"Add Group\",\n        addAnotherPosition: \"bottom\",\n        initEmpty: true,\n        clearOnHide: true,\n        tooltip: \"Add groups and use their keys as value for group variable in Conditional Group field.\",\n        customConditional: \"show=row.conditional\",\n        input: true,\n        validate: {\n          required: true,\n        },\n        key: \"groupOptions\",\n        type: \"datagrid\",\n        components: [\n          {\n            label: \"Key\",\n            disableSortingAndFiltering: false,\n            tableView: true,\n            clearOnHide: true,\n            calculateValue:\n              \"var options = data.groupOptions || [];\\n\\nfunction getOptionKey(index) {\\n  var optionIndex = instance.rowIndex + index;\\n  var optionKey = 'gr' + optionIndex\\n  var isUnique = !_.some(options, option => option.key === optionKey);\\n  return isUnique ? optionKey : getOptionKey(index+1);\\n}\\n\\nvalue = value || getOptionKey(1);\",\n            allowCalculateOverride: true,\n            key: \"key\",\n            type: \"textfield\",\n            input: true,\n          },\n          getGroupSelectComponent(),\n        ],\n      },\n      {\n        label: \"Conditional Group\",\n        editor: \"ace\",\n        autoExpand: false,\n        placeholder: 'group = data.name === \"Tom\" ? \"gr1\" : \"gr2\"',\n        disableSortingAndFiltering: false,\n        tableView: true,\n        key: \"conditionalGroup\",\n        customConditional: \"show=row.conditional\",\n        validate: {\n          required: true,\n        },\n        description: \"<p>The following variables are available in all scripts: <strong>form, submission, data, row, component, instance, moment, _, utils</strong>.\\nThe group value must be equal to some Group Options key or empty string. Example: </p><pre>group = data.name === \\\"Tom\\\" ? \\\"gr1\\\" : \\\"gr2\\\";</pre>\",\n        type: \"textarea\",\n        input: true,\n      },\n    ],\n  };\n}\n\nfunction getRecipientTypeComponent() {\n  return {\n    label: \"Recipient\",\n    optionsLabelPosition: \"right\",\n    inline: true,\n    hideLabel: true,\n    tableView: false,\n    values: [\n      {\n        label: \"User\",\n        value: \"user\",\n        shortcut: \"\",\n      },\n      {\n        label: \"Group User\",\n        value: \"groupUser\",\n        shortcut: \"\",\n      },\n      {\n        label: \"All Group Users\",\n        value: \"allGroupUsers\",\n        shortcut: \"\",\n      },\n    ],\n    key: \"recipientType\",\n    defaultValue: \"user\",\n    type: \"radio\",\n    input: true,\n  };\n}\n","import {  Formio } from '@formio/react';\nimport { _ } from 'formiojs/utils/utils';\nimport editForm from './RouteButton.form';\nimport {Utils} from 'formiojs';\n\nconst FormioButton = Formio.AllComponents.button;\nclass RouteButton extends FormioButton {\n  static schema(...extend) {\n    return FormioButton.schema({\n      type: 'routeButton',\n      label: 'Route',\n      key: 'route',\n      size: 'md',\n      action: 'submit',\n      leftIcon: '',\n      rightIcon: '',\n      block: false,\n      persistent: false,\n      disableOnInvalid: false,\n      theme: 'primary',\n      dataGridLabel: true\n    }, ...extend);\n  }\n\n  static get builderInfo() {\n    return {\n      title: 'Route Button',\n      group: 'custom',\n      icon: 'arrow-circle-o-right',\n      weight: 10,\n      schema: RouteButton.schema()\n    };\n  }\n\n  attachButton() {\n    this.on('submit', () => {\n      if (this.routeInitiated){\n        let {routeStage, routeRecipients = {}} = this.component;\n        routeRecipients = Utils.fastCloneDeep(routeRecipients);\n\n        _.each(routeRecipients, (value, key) => {\n          if (value.conditional) {\n            const groupKey = this.evaluate(value.conditionalGroup, {}, 'group');\n\n            routeRecipients[key] = {\n              recipientType: value.recipientType,\n              group: _.chain(value.groupOptions).find(option => option.key === groupKey).get('group', '').value()\n            }\n          }\n        })\n        \n        this.emit('routeToStage', {routeStage, routeRecipients});\n        this.routeInitiated = false;\n      }\n    }, true);\n    super.attachButton();\n  }\n  \n  onClick(event) {\n    super.onClick(event);\n    this.routeInitiated = true;\n  }\n  \n}\n\nRouteButton.editForm = editForm;\n\nexport default RouteButton;","import { Formio } from \"@formio/react\";\n\nconst BasicEditForm = Formio.AllComponents.button.editForm;\n\nexport default function some(...extend) {\n  return BasicEditForm(\n    [\n      {\n        key: \"display\",\n        components: [\n          {\n            key: \"action\",\n            ignore: true,\n          },\n          {\n            key: \"custom\",\n            ignore: true,\n          },\n        ],\n      },\n    ],\n    ...extend\n  );\n};\n\n","import { Formio } from '@formio/react';\nimport editForm from './PrevButton.form';\n\nconst FormioButton = Formio.AllComponents.button;\nclass PrevButton extends FormioButton {\n  static schema(...extend) {\n    return FormioButton.schema({\n      type: 'prevButton',\n      label: 'Previous',\n      key: 'previous',\n      size: 'md',\n      action: '',\n      leftIcon: '',\n      rightIcon: '',\n      block: false,\n      persistent: false,\n      disableOnInvalid: false,\n      theme: 'primary',\n      dataGridLabel: true\n    }, ...extend);\n  }\n\n  static get builderInfo() {\n    return {\n      title: 'Previous Button',\n      group: 'custom',\n      icon: 'arrow-left',\n      weight: 30,\n      schema: PrevButton.schema()\n    };\n  }\n\n  onClick(event) {\n    if (this.disabled || this.options.attachMode === 'builder') {\n      return;\n    }\n    this.dataValue = true;\n\n    if (this.component.showValidations) {\n      this.emit('checkValidity', this.data);\n    }\n\n    const wizard = this.root;\n    const pageStageId = wizard.pages[wizard.page]?.component?.stageId;\n    const prevPageStageId= wizard.pages[wizard.page -1]?.component?.stageId;\n    let allowPrev = pageStageId === prevPageStageId;\n\n    if (allowPrev) { \n      this.root.prevPage();\n    }\n  }\n}\n\nPrevButton.editForm = editForm;\n\n\nexport default PrevButton;","import { Formio } from \"@formio/react\";\n\nconst BasicEditForm = Formio.AllComponents.button.editForm;\n\nexport default function some(...extend) {\n  return BasicEditForm(\n    [\n      {\n        key: \"display\",\n        components: [\n          {\n            key: \"action\",\n            ignore: true,\n          },\n          {\n            key: \"custom\",\n            ignore: true,\n          },\n          {\n            label: \"Target Page\",\n            widget: \"choicesjs\",\n            tableView: true,\n            dataSrc: \"custom\",\n            data: {\n              custom:\n                \"let pages = instance.options.editForm.components;\\nlet editStageId= instance.options.stage;\\nlet stagePages = _.filter(pages, page => page.stageId === editStageId);\\nvalues = _.map(stagePages, (page, index) => ({label: page.title, value: page.key }))\",\n            },\n            selectThreshold: 0.3,\n            valueProperty: \"value\",\n            template: \"<span>{{ item.label  }}</span>\",\n            key: \"targetPage\",\n            type: \"select\",\n            input: true,\n            validate: {\n              required: true,\n            },\n            weight: 5,\n          },\n        ],\n      },\n    ],\n    ...extend\n  );\n}\n","import { Formio } from '@formio/react';\nimport _ from 'lodash';\nimport editForm from './ToPageButton.form';\n\n\nconst FormioButton = Formio.AllComponents.button;\n\nclass ToPageButton extends FormioButton {\n  static schema(...extend) {\n    return FormioButton.schema({\n      type: 'toPageButton',\n      label: 'Navigate To Page',\n      key: 'toPage',\n      size: 'md',\n      action: '',\n      leftIcon: '',\n      rightIcon: '',\n      block: false,\n      persistent: false,\n      disableOnInvalid: false,\n      theme: 'primary',\n      dataGridLabel: true\n    }, ...extend);\n  }\n\n  static get builderInfo() {\n    return {\n      title: 'To Page Button',\n      group: 'custom',\n      icon: 'arrows-h',\n      weight: 40,\n      schema: ToPageButton.schema()\n    };\n  }\n\n  onClick(event) {\n    if (this.disabled || this.options.attachMode === 'builder') {\n      return;\n    }\n    this.dataValue = true;\n\n    if (this.component.showValidations) {\n      this.emit('checkValidity', this.data);\n    }\n\n    const wizard = this.root;\n    const pageIndex = _.findIndex(wizard.pages, page => page.component.key === this.component.targetPage);\n\n    wizard.setPage(pageIndex);\n  }\n  \n}\n\nToPageButton.editForm = editForm;\n\n\nexport default ToPageButton;","import { Formio } from \"@formio/react\";\n\nconst BasicEditForm = Formio.AllComponents.button.editForm;\n\nexport default function some(...extend) {\n  return BasicEditForm(\n    [\n      {\n        key: \"display\",\n        components: [\n          {\n            key: \"action\",\n            ignore: true,\n          },\n          {\n            key: \"custom\",\n            ignore: true,\n          },\n          {\n            label: \"Target Form Page\",\n            widget: \"choicesjs\",\n            tableView: true,\n            dataSrc: \"custom\",\n            data: {\n              custom:\n                \"let pages = instance.options.editForm.components;\\nlet formStageId = '-1';\\nlet stagePages = _.filter(pages, page => page.stageId === formStageId);\\nvalues = _.map(stagePages, (page, index) => ({label: page.title, value: page.key }))\",\n            },\n            selectThreshold: 0.3,\n            valueProperty: \"value\",\n            template: \"<span>{{ item.label  }}</span>\",\n            key: \"targetFormPage\",\n            type: \"select\",\n            input: true,\n            validate: {\n              required: true,\n            },\n            weight: 5,\n          },\n          {\n            label: \"Form Back Button Path\",\n            widget: \"choicesjs\",\n            tableView: true,\n            weight: 7,\n            dataSrc: \"custom\",\n            data: {\n              custom:\n                \"let pages = instance.options.editForm.components;\\nlet editStageId= instance.options.stage;\\nlet stagePages = _.filter(pages, page => page.stageId === editStageId);\\nvalues = _.map(stagePages, (page, index) => ({label: page.title, value: page.key }));\",\n            },\n            valueProperty: \"value\",\n            selectThreshold: 0.3,\n            // eslint-disable-next-line no-template-curly-in-string\n            customDefaultValue: \"let pages = instance.options.editForm.components;\\nlet currentPage = _.get(pages, `[${instance.options.page}]`, {});\\nvalue = currentPage.key || '';\",\n            key: \"formBackPath\",\n            type: \"select\",\n            input: true,\n          },\n          {\n            label: \"Show Form Next Button\",\n            tableView: false,\n            weight: 9,\n            key: \"formNextButton\",\n            type: \"checkbox\",\n            input: true,\n            defaultValue: false,\n          },\n          {\n            label: \"Form Next Button Path\",\n            widget: \"choicesjs\",\n            tableView: true,\n            weight: 12,\n            dataSrc: \"custom\",\n            data: {\n              custom:\n                \"let pages = instance.options.editForm.components;\\nlet editStageId= instance.options.stage;\\nlet stagePages = _.filter(pages, page => page.stageId === editStageId);\\nvalues = _.map(stagePages, (page, index) => ({label: page.title, value: page.key }));\",\n            },\n            valueProperty: \"value\",\n            selectThreshold: 0.3,\n            validate: {\n              required: true,\n            },\n            key: \"formNextPath\",\n            conditional: {\n              show: true,\n              when: \"formNextButton\",\n              eq: \"true\",\n            },\n            type: \"select\",\n            input: true,\n          },\n        ],\n      },\n    ],\n    ...extend\n  );\n}\n","import { Formio } from \"@formio/react\";\nimport _ from \"lodash\";\nimport editForm from \"./ToFormButton.form\";\n\nconst FormioButton = Formio.AllComponents.button;\nclass ToFormButton extends FormioButton {\n  static schema(...extend) {\n    return FormioButton.schema(\n      {\n        type: \"toFormButton\",\n        label: \"Navigate To Form\",\n        key: \"toForm\",\n        size: \"md\",\n        leftIcon: \"\",\n        rightIcon: \"\",\n        action: \"\",\n        block: false,\n        persistent: false,\n        disableOnInvalid: false,\n        theme: \"primary\",\n        dataGridLabel: true,\n      },\n      ...extend\n    );\n  }\n\n  static get builderInfo() {\n    return {\n      title: \"To Form Button\",\n      group: \"custom\",\n      icon: \"step-forward\",\n      weight: 50,\n      schema: ToFormButton.schema(),\n    };\n  }\n\n  onClick(event) {\n    if (this.disabled || this.options.attachMode === 'builder') {\n      return;\n    }\n    this.dataValue = true;\n\n    if (this.component.showValidations) {\n      this.emit('checkValidity', this.data);\n    }\n\n    const wizard = this.root;\n    const formPageIndex = _.findIndex(\n      wizard.pages,\n      (page) => page.component.key === this.component.targetFormPage\n    );\n    const targetFormPage = wizard.pages[formPageIndex];\n    if (targetFormPage) {\n      wizard.setPage(formPageIndex);\n    }\n    this.emit('navigateToForm', { backTarget: this.component.formBackPath, next: this.component.formNextButton, nextTarget: this.component.formNextPath })\n   \n  }\n}\n\nToFormButton.editForm = editForm;\n\nexport default ToFormButton;\n","import { Formio, Templates } from \"@formio/react\";\nimport _ from \"lodash\";\nimport {Utils} from 'formiojs';\nimport { formsStageId, getSubmissionName } from \"../utils\";\n\nconst Wizard = Formio.Displays.getDisplay('wizard');\n\nclass Process extends Wizard {\n  get formsStageId() {\n    return formsStageId;\n  }\n\n\n  init() {\n    this.on('navigateToForm', (navDetails) => {\n      this.formPageNavigation = navDetails;\n    });\n\n    const parentInit = super.init();\n\n    this.formPageNavigation = this.defaultFormPageNavigation();\n    this.processForms = [];\n\n    return parentInit;\n  }\n\n  get buttons() {\n    if(this.isProcess) {\n      return {};\n    }\n     return super.buttons;\n  }\n\n  get currentStage() {\n    return _.get(this.submission, 'metadata.stageId', '')\n  }\n\n  get processFormInfoPath() {\n    return 'dataValue.metadata.filledInProcess';\n  }\n\n  setSubmission(submission, flags = {}) {\n    return super.setSubmission(submission, flags)\n      .then(() => {\n        const currentStage = _.get(submission, 'metadata.stageId', '');\n\n        if (currentStage && !this.options.readOnly) {\n          const page = this.options.initPage || _.findIndex(this.pages, page => +page.component.stageId === +currentStage)\n          this.setPage(page);\n        }\n\n        if (this.options.readOnly) {\n          this.setPage(0);\n        }\n        this.formPageNavigation = this.defaultFormPageNavigation();\n        return submission;\n      });\n  }\n\n\n  attachHeader() {\n    if (this.isProcess) {\n      const isAllowPrevious = this.isAllowPrevious();\n      this.attachTooltips(this.refs[`${this.wizardKey}-tooltip`], this.currentPanel.tooltip);\n      if (this.isBreadcrumbClickable() || isAllowPrevious) {\n        this.refs[`${this.wizardKey}-link`]?.forEach((link, index) => {\n          if (!isAllowPrevious || index <= this.enabledIndex) {\n            this.addEventListener(link, 'click', (event) => {\n              const index = +event.target.dataset.index;\n              this.emit('wizardNavigationClicked', this.pages[index]);\n              event.preventDefault();\n              return this.setPage(index).then(() => {\n                this.emitWizardPageSelected(index);\n              });\n            });\n          }\n        });\n      }\n    }\n    else {\n      super.attachHeader()\n    }\n\n  }\n\n  getProcessFormPages() {\n    const processFormPages = [];\n    _.each(this.pages, (page, index) => {\n      if (page.component.stageId === this.formsStageId ) {\n        Utils.eachComponent(page.components, (comp, path) => {\n          if (comp.component.type === 'form' && _.get(comp, this.processFormInfoPath , false)) {\n            processFormPages.push({\n              name: getSubmissionName(_.get(this.submission, `data.${path}`, {})),\n              panel: page.component,\n              index\n            });\n          }\n        });\n      }\n    });\n    return processFormPages;\n  }\n\n  setPage(num) {\n    const currentPage = this.page;\n    return super.setPage(num).then(() => {\n      if (this.isProcess && currentPage !== num) {\n        this.emit('wizardPageSet', this.pages[num], num);\n      }\n      const isFormPage = this.component.stageId === this.formsStageId;\n      if (isFormPage) {\n        const forms = [];\n        const formPageComponents = _.get(_.find(this.pages, page => page.component.key === this.component.key), 'components', []);\n        Utils.eachComponent(formPageComponents, (comp) => {\n          if(comp.component.type === 'form') {\n            forms.push(comp);\n          }\n        });\n\n        _.each(forms, (form) => {\n          _.set(form,  this.processFormInfoPath, true);\n        });\n      }\n    });\n  }\n\n  defaultFormPageNavigation() {\n    return {\n      backTarget: _.chain(this.pages).find(page => {\n        return page.component.stageId === this.currentStage\n      }).get('component.key' ,'').value(),\n      next: false\n    }\n  }\n\n  get renderContext() {\n    const isProcess = this.isProcess;\n    const processForms = isProcess ? this.getProcessFormPages() : [];\n\n    return {\n      processForms,\n      isProcess,\n      ...super.renderContext,\n    };\n  }\n\n  prepareHeaderSettings(ctx = {}, headerType) {\n    if (this.isProcess) {\n\n       return this.renderTemplate(headerType, ctx);\n    }\n    return super.prepareHeaderSettings(ctx, headerType)\n  }\n\n  executeFormPageNavigation(next) {\n    const navDetails = this.formPageNavigation;\n\n    if (navDetails) {\n      const {backTarget, nextTarget} = navDetails;\n      const target = next ? nextTarget : backTarget;\n\n      const formPageIndex = _.findIndex(\n        this.pages,\n        (page) => page.component.key === target\n      );\n      if (formPageIndex >= 0) {\n        this.setPage(formPageIndex);\n      }\n\n      this.formPageNavigation = this.defaultFormPageNavigation();\n    }\n  }\n\n  formNavigationComponents() {\n    return {\n      label: \"Columns\",\n      columns: [\n        {\n          components: [\n            {\n              label: \"Back\",\n              action: \"custom\",\n              showValidations: false,\n              block: true,\n              tableView: false,\n              key: \"back\",\n              type: \"button\",\n              custom: ({form}) => {\n                form.executeFormPageNavigation();\n              },\n              input: true,\n            },\n          ],\n          width: 4,\n          offset: 0,\n          push: 0,\n          pull: 0,\n          size: \"md\",\n          currentWidth: 4,\n        },\n        {\n          components: [],\n          width: 4,\n          offset: 0,\n          push: 0,\n          pull: 0,\n          size: \"md\",\n          currentWidth: 4,\n        },\n        {\n          components: [\n            {\n              label: \"Next\",\n              action: \"custom\",\n              showValidations: false,\n              block: true,\n              tableView: false,\n              key: \"next\",\n              type: \"button\",\n              input: true,\n              customConditional: ({instance}) => {\n                const navDetails = instance.root.formPageNavigation;\n                return _.get(navDetails, 'next', false)\n              },\n              custom: ({form}) => {\n                form.executeFormPageNavigation(true);\n              },\n            },\n          ],\n          size: \"md\",\n          width: 4,\n          offset: 0,\n          push: 0,\n          pull: 0,\n          currentWidth: 4,\n        },\n      ],\n      key: \"formNavigationColumns\",\n      type: \"columns\",\n      input: false,\n      tableView: false,\n    };\n  }\n\n  get initiatePageKey() {\n    return \"defaultInitiateProcessPage\"\n  }\n\n  initiateProcessPage() {\n    return {\n      title: \"Initiate Process Page\",\n      key: this.initiatePageKey ,\n      type: \"panel\",\n      label: \"Initiate New Process\",\n      components: [\n        {\n          label: \"Initiate New Process\",\n          action: \"saveState\",\n          showValidations: false,\n          tableView: false,\n          persistent: false,\n          key: \"defaultInitiateNewProcessBtn\",\n          type: \"button\",\n          input: true,\n          customConditional: ({instance}) => {\n            return !instance.options.readOnly;\n          },\n          state: \"draft\",\n        },\n        {\n          \"html\": \"<p>{{instance.root.getProcessFormPages().length ? 'Click on the form title to see the form submission' : 'No Process Forms'}}</p>\",\n          \"label\": \"Content\",\n          \"refreshOnChange\": true,\n          \"key\": \"readOnlyProcessComponent\",\n          \"type\": \"content\",\n          customConditional: ({instance}) => {\n            return instance.options.readOnly;\n          },\n          \"input\": false,\n          \"tableView\": false\n          },\n      ],\n    };\n  }\n\n  setForm(form, flags) {\n    this.isProcess = _.get(form, 'properties.process', false);\n\n    if (this.isProcess) {\n      if(!this.options.readOnly){\n      _.each(form.components || [], page => {\n        if (page.stageId === this.formsStageId && !_.some(page.components, comp => comp.key === \"formNavigationColumns\") ) {\n          page.components.push(this.formNavigationComponents());\n        }\n      });}\n      const isInitiatePage = _.get(form.components, '[0].key', '') === this.initiatePageKey;\n\n      if (!isInitiatePage){\n        form.components.unshift(this.initiateProcessPage());\n      }\n     }\n    return super.setForm(form, flags);\n  }\n\n}\n\n\nconst initialWizardHeaderTemplate = Templates.current.wizardHeader.form;\nTemplates.current.wizardHeader.form = (ctx) => {\n  if(!ctx.isProcess) {\n    return initialWizardHeaderTemplate(ctx);\n  }\n\n  return `\n    <nav aria-label=\"Wizard navigation\" class=\"\" id=\"${ctx.wizardKey}-header\" ref=\"${ctx.wizardKey}-header\">\n      <div class=\"d-flex justify-content-start px-2 flex-wrap\" role=\"tablist\">\n        ${ctx.processForms.length ? '<div class=\"mr-2 py-1 font-weight-bold\">Process Forms:</div>' : ''}\n        ${ctx.processForms.map((formPanel, index) => {\n        return `<div class=\"${ctx.currentPage === formPanel.index ? ' text-primary font-weight-bold' : 'text-muted '}\" style=\"cursor: pointer;\">\n            <div tabindex=\"0\" data-index=\"${formPanel.index}\" role=\"tab\" class=\"bg-light mx-1 px-1 py-1\" ref=\"${ctx.wizardKey}-link\">\n              ${ctx.t(formPanel.name, { _userInput: true })}\n            </div>\n          </div>`\n        }).join('')}\n      </div>\n      <hr class=\"mt-1\">\n    </nav>\n  `\n}\n\nexport default Process;\n","import { Formio } from '@formio/react';\nimport _ from 'lodash';\nimport { autoNameFieldKey, isSubmissionRouted, setSubmissionName } from '../../utils';\n\nconst FormioFormComponent = Formio.AllComponents.form;\nclass NestedForm extends FormioFormComponent {\n  getSubOptions(options = {}) {\n    const superOptions = super.getSubOptions(options);\n    const userProfileId = _.get(this.options, 'userProfileId', null);\n\n    if (userProfileId) {\n      superOptions.userProfileId = userProfileId;\n    }\n\n    const userId = _.get(this.options, 'userId', null);\n\n    if (userId) {\n      superOptions.userId = userId;\n    }\n\n    return superOptions;\n  }\n\n  attach(el) {\n    return super.attach(el).then(()=> {\n      if (this.options.isProcess ) {\n        const subFormSubmission = this.subForm._submission\n        const isRoutedForm = isSubmissionRouted(subFormSubmission);\n\n        if (!isRoutedForm) {\n          const autoNameComponent = this.subForm.getComponent(autoNameFieldKey);\n\n          if (autoNameComponent) {\n            autoNameComponent.on('componentChange', (data) => {\n              if(_.get(data, 'component.key', '') === autoNameFieldKey) {\n                setSubmissionName(subFormSubmission, data.value);\n              }\n            })\n          }\n          else {\n            setSubmissionName(subFormSubmission, this.subForm.form.title);\n          }\n        }\n\n        if (this.subForm &&  !this.options.readOnly) {\n          this.subForm.calculateValue();\n        }\n      }\n    });\n  }\n}\n\nexport default NestedForm;\n\n\n","import { Formio, Components } from \"@formio/react\";\n\nconst BasicEditForm = Formio.AllComponents.base.editForm;\n\nexport default function baseEditForm(...extend) {\n  return BasicEditForm(\n    [\n      {\n        key: \"display\",\n        components: [\n          {\n            label: \"Show In Route Track\",\n            tooltip: \"The value of this component will be displayed in the stage route track.\",\n            key: \"showInTrack\",\n            type: \"checkbox\",\n            input: true,\n            defaultValue: false,\n            weight: 1900,\n          },\n        ],\n      },\n    ],\n    ...extend\n  );\n}\n\nComponents.baseEditForm = baseEditForm;\n","import editForm from './Component.form';\nimport { Formio } from \"@formio/react\";\nconst Component = Formio.AllComponents.component;\n\nComponent.prototype.getProcessData = function() {\n  const getProcessRoot = (instance) => {\n    return instance.id === instance.root.id ? instance.data : getProcessRoot(instance.root);\n  }\n\n  return getProcessRoot(this);\n}\n\nComponent.editForm = editForm;\n\nexport default Component;\n\n\n","import { Formio } from \"@formio/react\";\nimport { autoNameFieldKey } from \"../../utils\";\n\nconst FormioTextField = Formio.AllComponents.textfield;\nclass AutoName extends FormioTextField {\n  static schema(...extend) {\n    return FormioTextField.schema(\n      {\n        label: \"Auto Name \",\n        hidden: true,\n        tableView: true,\n        persistent: false,\n        clearOnHide: false,\n        calculateValue: \"var date = new Date();\\nvalue = form.title +'_'+ date.toLocaleDateString() + '_'+  date.toLocaleTimeString()\",\n        key: autoNameFieldKey,\n        type: \"textfield\",\n        input: true,\n      },\n      ...extend\n    );\n  }\n\n  static get builderInfo() {\n    return {\n      title: \"Auto Name\",\n      group: \"basic\",\n      icon: \"magic\",\n      weight: 150,\n      schema: AutoName.schema(),\n    };\n  }\n}\n\nexport default AutoName;\n","\nimport NextButton from \"./NextButton/NextButton\";\nimport RouteButton from \"./RouteButton/RouteButton\";\nimport PrevButton from \"./PrevButton/PrevButton\";\nimport ToPageButton from \"./ToPageButton/ToPageButton\";\nimport ToFormButton from \"./ToFormButton/ToFormButton\";\nimport Process from \"./Process\";\nimport NestedForm from \"./NestedForm/NestedForm\";\nimport Component from \"./Component/Component\";\nimport AutoName from \"./AutoName/AutoName\";\n\nexport const components = {\n  component: Component,\n  base: Component,\n  nextButton: NextButton,\n  routeButton: RouteButton,\n  prevButton: PrevButton,\n  toPageButton: ToPageButton,\n  toFormButton: ToFormButton,\n  form: NestedForm,\n  autoName: AutoName\n};\n\nexport const displays = {wizard: Process};\n\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './config';\nimport { AuthProvider } from './modules/auth';\nimport { Formio } from '@formio/react';\nimport {components, displays} from './formioComponents';\nimport premium from '@formio/premium';\n\nFormio.use(premium);\nFormio.use({components, displays});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <Router basename='/'>\n        <App />\n      </Router>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}